import{getContext as o,getElement as e,store as i,withScope as n,withSyncEvent as t}from"@wordpress/interactivity";const{actions:l,state:s}=i("prc-block/dialog",{state:{get id(){const e=o();return e?.id},get dialog(){return s.dialogs[s.id]},get dialogElement(){const e=o();if(!e?.id)return null;const{id:i}=e;return document.getElementById(i)}},actions:{closeAll:()=>{const{dialogs:o}=s;Object.keys(o).forEach(e=>{"object"==typeof o[e]&&o[e].hasOwnProperty("isOpen")&&(s.dialogs[e].isOpen=!1)})},onClickOpen:t(o=>{console.log("onClickOpen fired"),o.preventDefault();const{id:e}=s;l.open(e)}),onClickClose:t(o=>{o.preventDefault();const{id:e}=s;l.close(e)}),open:(o=!1)=>{let e=o;e||(e=s.id),e&&(s.dialogs[e].isOpen=!0,s.dialogs[e].closingModal=!1)},close:(o=!1)=>{let e=o;e||(e=s.id),e&&(s.dialogs[e].isOpen=!1)}},callbacks:{onESCKey:t(o=>{const{id:e,dialog:i}=s;e&&"Escape"===o.key&&!0===i.isOpen&&(o.preventDefault(),l.close(e))}),onOpen:()=>{const{dialogElement:o,dialog:e,id:i}=s;i&&o&&e.isOpen&&(console.log("onOpen fired"),e.enableDeepLink&&(console.log("Adding dialogId to URL:",i),function(o){const e=new URL(window.location.href);e.searchParams.set("dialogId",o),window.history.replaceState({},"",e)}(i)),console.log("Showing dialog element:",o),o?.showModal())},onClose:()=>{const{dialogElement:o,dialog:e,id:i}=s;i&&o&&(e.isOpen||e.isClosing||o.open&&(console.log("onClose fired"),s.dialogs[i].isClosing=!0,setTimeout(n(()=>{console.log("Closing dialog element:",o),o?.close(),console.log("Removing dialogId from URL",i),function(){const o=new URL(window.location.href);console.log("removeDialogIdFromUrl fired, current URL:",o.toString()),o.searchParams.delete("dialogId"),console.log("Updated URL after removing dialogId:",o.toString()),window.history.replaceState({},"",o)}(),s.dialogs[i].isClosing=!1,s.dialogs[i].isOpen=!1}),e.animationDuration)))},onBackdropClick:t(o=>{const{ref:i}=e(),n=i.getBoundingClientRect();if(o.clientX>=n.left&&o.clientX<=n.right&&o.clientY>=n.top&&o.clientY<=n.bottom)return;const{dialog:t,id:a}=s;!0!==t.isOpen||t.isClosing||l.close(a)}),onAutoActivation:()=>{const{id:o,dialog:e,dialogs:i}=s;if(console.log("Dialog: init",o),!o&&!e.activationTimerDuration&&-1!==e.activationTimerDuration)return;const t=Object.keys(i);for(let o=0;o<t.length;o++)if(i[t[o]].isOpen)return;1<=e.activationTimerDuration&&setTimeout(n(()=>{l.closeAll(),l.open(o)}),e.activationTimerDuration)}}});
//# sourceMappingURL=view.js.map