{"version":3,"file":"remote-pivot-table/index.js","mappings":"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","sources":["webpack://@prc/block-library/external window [\"wp\",\"i18n\"]","webpack://@prc/block-library/external window [\"wp\",\"blocks\"]","webpack://@prc/block-library/external window [\"wp\",\"element\"]","webpack://@prc/block-library/external window [\"wp\",\"blockEditor\"]","webpack://@prc/block-library/external window [\"wp\",\"components\"]","webpack://@prc/block-library/external window [\"wp\",\"data\"]","webpack://@prc/block-library/external window \"ReactJSXRuntime\"","webpack://@prc/block-library/external window \"prcIcons\"","webpack://@prc/block-library/./src/remote-pivot-table/index.js","webpack://@prc/block-library/./src/remote-pivot-table/edit.jsx","webpack://@prc/block-library/./src/remote-pivot-table/save.jsx","webpack://@prc/block-library/./src/remote-pivot-table/icon.jsx","webpack://@prc/block-library/./src/remote-pivot-table/block-bindings.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport registerBlockBindings from './block-bindings';\nimport edit from './edit';\nimport save from './save';\nimport icon from './icon';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\tedit,\n\tsave,\n\ticon,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n\n// Register client-side block bindings\nregisterBlockBindings();\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState, useEffect } from '@wordpress/element';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tInspectorControls,\n\tBlockContextProvider,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tPanelRow,\n\tSelectControl,\n\tButton,\n\tModal,\n} from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tcontext,\n\tclientId,\n\tisSelected,\n}) {\n\tconst { dataSource, primaryKey, pivotedData, selectedColumns } = attributes;\n\tconst remoteDataContext = context?.['remote-data-blocks/remoteData'] || {};\n\t\n\t// State for column sum binding modal\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [selectedColumn, setSelectedColumn] = useState('');\n\t\n\t// Block editor dispatch for inserting blocks\n\tconst { insertBlock } = useDispatch('core/block-editor');\n\n\tconst blockProps = useBlockProps({});\n\tconst innerBlocksProps = useInnerBlocksProps({\n\t\tclassName: 'prc-block-remote-pivot-table__template',\n\t}, {});\n\n\tconst columns = useMemo(() => {\n\t\tconst { results } = remoteDataContext;\n\t\tif (!results) {\n\t\t\treturn [];\n\t\t}\n\t\tconst firstResult = results[0].result;\n\t\tif (!firstResult) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(firstResult);\n\t}, [remoteDataContext]);\n\n\tconst rows = useMemo(() => {\n\t\tconst { results } = remoteDataContext;\n\t\tif (!results) {\n\t\t\treturn [];\n\t\t}\n\t\treturn results.map(result => result.result);\n\t}, [remoteDataContext]);\n\n\t/**\n\t * Handle inserting a block with column sum binding\n\t */\n\tconst handleInsertColumnSumBlock = () => {\n\t\tif (!selectedColumn) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create a new paragraph block with the binding metadata\n\t\tconst newBlock = createBlock('core/paragraph', {\n\t\t\tcontent: __('Column Sum', 'remote-pivot-table'),\n\t\t\tmetadata: {\n\t\t\t\tbindings: {\n\t\t\t\t\tcontent: {\n\t\t\t\t\t\tsource: 'prc-block/remote-pivot-table-sum',\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tcolumn: selectedColumn,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\t// Insert the block after the current block\n\t\tinsertBlock(newBlock, undefined, clientId);\n\t\t\n\t\t// Close modal and reset selection\n\t\tsetIsModalOpen(false);\n\t\tsetSelectedColumn('');\n\t};\n\n\t/**\n\t /**\n\t  * This effect pivots the remote data according to the selected data source type.\n\t  * If the dataSource is 'row', it creates an object keyed by the primary key value,\n\t  * with each value containing only the selected columns for that row.\n\t  * If the dataSource is 'column', it creates an object keyed by each selected column,\n\t  * with each value being an object mapping primary key values to the corresponding column value.\n\t  * The resulting pivoted data is stored in the block's attributes for use by child blocks.\n\t  */\n\tuseEffect(() => {\n\t\tconst pivoted = {};\n\t\tif (dataSource === 'row') {\n\t\t\trows.forEach(row => {\n\t\t\t\tconst primaryKeyValue = row[primaryKey]?.value;\n\t\t\t\tif (!primaryKeyValue) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpivoted[primaryKeyValue] = Object.fromEntries(\n\t\t\t\t\tObject.entries(row).filter(([key]) => key !== primaryKey && selectedColumns.includes(key))\n\t\t\t\t);\n\t\t\t});\n\t\t\tconsole.log('pivoted rows:', pivoted);\n\t\t} else if (dataSource === 'column') {\n\t\t\tcolumns.forEach(columnName => {\n\t\t\t\tif (!selectedColumns.includes(columnName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpivoted[columnName] = {};\n\t\t\t\t// Go through each row, get the primary key value, and the columnName value and add it to the pivoted object.\n\t\t\t\trows.forEach(row => {\n\t\t\t\t\tconst primaryKeyValue = row[primaryKey]?.value;\n\t\t\t\t\tconst columnValue = row[columnName];\n\t\t\t\t\tpivoted[columnName][primaryKeyValue] = columnValue;\n\t\t\t\t});\n\t\t\t});\n\t\t\tconsole.log('pivoted columns:', pivoted);\n\t\t}\n\t\tsetAttributes({ pivotedData: pivoted });\n\t}, [dataSource, selectedColumns, primaryKey, rows, columns]);\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Remote Data: Pivot Table', 'remote-pivot-table')}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Selected Columns', 'remote-pivot-table')}\n\t\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t\t\tvalue={selectedColumns}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ selectedColumns: value })}\n\t\t\t\t\t\t\toptions={columns.map(column => ({\n\t\t\t\t\t\t\t\tvalue: column,\n\t\t\t\t\t\t\t\tlabel: column,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Data Source', 'remote-pivot-table')}\n\t\t\t\t\t\t\tvalue={dataSource}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ dataSource: value })}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'column',\n\t\t\t\t\t\t\t\t\tlabel: __('Column', 'remote-pivot-table'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'row',\n\t\t\t\t\t\t\t\t\tlabel: __('Row', 'remote-pivot-table'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Primary Key', 'remote-pivot-table')}\n\t\t\t\t\t\t\tvalue={primaryKey}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ primaryKey: value })}\n\t\t\t\t\t\t\toptions={columns.map(column => ({\n\t\t\t\t\t\t\t\tvalue: column,\n\t\t\t\t\t\t\t\tlabel: column,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__('Column Sum Block Binding', 'remote-pivot-table')} initialOpen={false}>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<p style={{ margin: 0 }}>\n\t\t\t\t\t\t\t{__('Create a block that displays the sum of values for a selected column.', 'remote-pivot-table')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\tonClick={() => setIsModalOpen(true)}\n\t\t\t\t\t\t\tdisabled={columns.length === 0}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('Add Column Sum Block', 'remote-pivot-table')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t{isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={__('Select Column for Sum Block', 'remote-pivot-table')}\n\t\t\t\t\tonRequestClose={() => setIsModalOpen(false)}\n\t\t\t\t\tclassName=\"prc-block-remote-pivot-table-column-modal\"\n\t\t\t\t>\n\t\t\t\t\t<div style={{ padding: '16px' }}>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Column to Sum', 'remote-pivot-table')}\n\t\t\t\t\t\t\tvalue={selectedColumn}\n\t\t\t\t\t\t\tonChange={setSelectedColumn}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ value: '', label: __('Select a column...', 'remote-pivot-table') },\n\t\t\t\t\t\t\t\t...columns.map(column => ({\n\t\t\t\t\t\t\t\t\tvalue: column,\n\t\t\t\t\t\t\t\t\tlabel: column,\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div style={{ display: 'flex', gap: '8px', marginTop: '16px' }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\tonClick={handleInsertColumnSumBlock}\n\t\t\t\t\t\t\t\tdisabled={!selectedColumn}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{__('Insert Block', 'remote-pivot-table')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tonClick={() => setIsModalOpen(false)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{__('Cancel', 'remote-pivot-table')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t\t<div {...innerBlocksProps} />\n\t\t</div>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save( { attributes } ) {\n\treturn <InnerBlocks.Content/>;\n}\n","/**\n * External Dependencies\n */\nimport { Icon } from '@prc/icons';\n\nexport default function PivotTableIcon() {\n\treturn <Icon icon=\"table-pivot\" library=\"light\" />;\n}\n","/**\n * WordPress Dependencies\n */\nimport { registerBlockBindingsSource } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Register the client-side block bindings for remote pivot table sum functionality.\n * \n * This provides a client-side binding source that mirrors the server-side functionality,\n * allowing blocks in the editor to display live previews of column sums from remote\n * pivot table data.\n */\nexport default function registerBlockBindings() {\n\tregisterBlockBindingsSource({\n\t\tname: 'prc-block/remote-pivot-table-sum',\n\t\tlabel: __('Remote Pivot Table Sum', 'prc-block-library'),\n\t\tusesContext: ['remote-data-blocks/remoteData'],\n\t\tgetValues({ select, clientId, context, bindings }) {\n\t\t\tconst { content } = bindings;\n\t\t\tconst { args } = content;\n\t\t\tconst { column } = args || {};\n\n\t\t\tif (!column) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: '0',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Get remote data from context\n\t\t\tconst remoteDataContext = context?.['remote-data-blocks/remoteData'] || {};\n\t\t\tconst { results } = remoteDataContext;\n\n\t\t\tif (!results || !Array.isArray(results)) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: '0',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Calculate column sum using the same logic as server-side\n\t\t\tconst sum = calculateColumnSum(results, column);\n\n\t\t\treturn {\n\t\t\t\tcontent: sum.toString(),\n\t\t\t};\n\t\t},\n\t});\n}\n\n/**\n * Calculate the sum of raw values for a specified column.\n * Mirrors the server-side calculation logic.\n *\n * @param {Array}  results     The remote data results array.\n * @param {string} columnName  The column name to sum.\n * @return {number}            The sum of raw values for the column.\n */\nfunction calculateColumnSum(results, columnName) {\n\tlet sum = 0;\n\n\tfor (const result of results) {\n\t\tif (!result?.result || typeof result.result !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst rowData = result.result;\n\t\tif (!(columnName in rowData)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst rawValue = rowData[columnName];\n\t\t\n\t\t// Extract the numeric value from the raw_value structure\n\t\tconst value = (Array.isArray(rawValue) || (typeof rawValue === 'object' && rawValue !== null && 'value' in rawValue))\n\t\t\t? rawValue.value \n\t\t\t: rawValue;\n\n\t\t// Only sum numeric values\n\t\tif (typeof value === 'number' || (typeof value === 'string' && !isNaN(parseFloat(value)))) {\n\t\t\tsum += parseFloat(value);\n\t\t}\n\t}\n\n\treturn sum;\n}"],"names":["window","name","metadata","settings","edit","attributes","setAttributes","context","clientId","isSelected","dataSource","primaryKey","pivotedData","selectedColumns","remoteDataContext","isModalOpen","setIsModalOpen","useState","selectedColumn","setSelectedColumn","insertBlock","useDispatch","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","className","columns","useMemo","results","firstResult","result","Object","keys","rows","map","useEffect","pivoted","forEach","row","primaryKeyValue","value","fromEntries","entries","filter","key","includes","console","log","columnName","columnValue","_jsxs","children","InspectorControls","_jsx","PanelBody","title","__","SelectControl","label","multiple","onChange","options","column","initialOpen","PanelRow","style","margin","Button","variant","onClick","disabled","length","Modal","onRequestClose","padding","display","gap","marginTop","handleInsertColumnSumBlock","newBlock","createBlock","content","bindings","source","args","undefined","save","InnerBlocks","Content","icon","Icon","library","registerBlockType","registerBlockBindingsSource","usesContext","getValues","select","Array","isArray","sum","rowData","rawValue","isNaN","parseFloat","calculateColumnSum","toString"],"sourceRoot":""}