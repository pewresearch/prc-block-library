{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@prc/block-library/external window [\"wp\",\"i18n\"]","webpack://@prc/block-library/external window [\"wp\",\"blocks\"]","webpack://@prc/block-library/external window [\"wp\",\"element\"]","webpack://@prc/block-library/external window [\"wp\",\"blockEditor\"]","webpack://@prc/block-library/external window [\"wp\",\"components\"]","webpack://@prc/block-library/external window \"ReactJSXRuntime\"","webpack://@prc/block-library/external window \"prcIcons\"","webpack://@prc/block-library/./src/remote-pivot-table/index.js","webpack://@prc/block-library/./src/remote-pivot-table/edit.jsx","webpack://@prc/block-library/./src/remote-pivot-table/save.jsx","webpack://@prc/block-library/./src/remote-pivot-table/icon.jsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\nimport edit from './edit';\nimport save from './save';\nimport icon from './icon';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\tedit,\n\tsave,\n\ticon,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo, useState, useEffect } from '@wordpress/element';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tInspectorControls,\n\tBlockContextProvider,\n} from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tPanelRow,\n\tSelectControl,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tcontext,\n\tclientId,\n\tisSelected,\n}) {\n\tconst { dataSource, primaryKey, pivotedData, selectedColumns } = attributes;\n\tconst remoteDataContext = context?.['remote-data-blocks/remoteData'] || {};\n\n\tconst blockProps = useBlockProps({});\n\tconst innerBlocksProps = useInnerBlocksProps({\n\t\tclassName: 'prc-block-remote-pivot-table__template',\n\t}, {});\n\n\tconst columns = useMemo(() => {\n\t\tconst { results } = remoteDataContext;\n\t\tif (!results) {\n\t\t\treturn [];\n\t\t}\n\t\tconst firstResult = results[0].result;\n\t\tif (!firstResult) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.keys(firstResult);\n\t}, [remoteDataContext]);\n\n\tconst rows = useMemo(() => {\n\t\tconst { results } = remoteDataContext;\n\t\tif (!results) {\n\t\t\treturn [];\n\t\t}\n\t\treturn results.map(result => result.result);\n\t}, [remoteDataContext]);\n\n\t/**\n\t /**\n\t  * This effect pivots the remote data according to the selected data source type.\n\t  * If the dataSource is 'row', it creates an object keyed by the primary key value,\n\t  * with each value containing only the selected columns for that row.\n\t  * If the dataSource is 'column', it creates an object keyed by each selected column,\n\t  * with each value being an object mapping primary key values to the corresponding column value.\n\t  * The resulting pivoted data is stored in the block's attributes for use by child blocks.\n\t  */\n\tuseEffect(() => {\n\t\tconst pivoted = {};\n\t\tif (dataSource === 'row') {\n\t\t\trows.forEach(row => {\n\t\t\t\tconst primaryKeyValue = row[primaryKey]?.value;\n\t\t\t\tif (!primaryKeyValue) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpivoted[primaryKeyValue] = Object.fromEntries(\n\t\t\t\t\tObject.entries(row).filter(([key]) => key !== primaryKey && selectedColumns.includes(key))\n\t\t\t\t);\n\t\t\t});\n\t\t\tconsole.log('pivoted rows:', pivoted);\n\t\t} else if (dataSource === 'column') {\n\t\t\tcolumns.forEach(columnName => {\n\t\t\t\tif (!selectedColumns.includes(columnName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpivoted[columnName] = {};\n\t\t\t\t// Go through each row, get the primary key value, and the columnName value and add it to the pivoted object.\n\t\t\t\trows.forEach(row => {\n\t\t\t\t\tconst primaryKeyValue = row[primaryKey]?.value;\n\t\t\t\t\tconst columnValue = row[columnName];\n\t\t\t\t\tpivoted[columnName][primaryKeyValue] = columnValue;\n\t\t\t\t});\n\t\t\t});\n\t\t\tconsole.log('pivoted columns:', pivoted);\n\t\t}\n\t\tsetAttributes({ pivotedData: pivoted });\n\t}, [dataSource, selectedColumns, primaryKey, rows, columns]);\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Remote Data: Pivot Table', 'remote-pivot-table')}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Selected Columns', 'remote-pivot-table')}\n\t\t\t\t\t\t\tmultiple={true}\n\t\t\t\t\t\t\tvalue={selectedColumns}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ selectedColumns: value })}\n\t\t\t\t\t\t\toptions={columns.map(column => ({\n\t\t\t\t\t\t\t\tvalue: column,\n\t\t\t\t\t\t\t\tlabel: column,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Data Source', 'remote-pivot-table')}\n\t\t\t\t\t\t\tvalue={dataSource}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ dataSource: value })}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'column',\n\t\t\t\t\t\t\t\t\tlabel: __('Column', 'remote-pivot-table'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: 'row',\n\t\t\t\t\t\t\t\t\tlabel: __('Row', 'remote-pivot-table'),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Primary Key', 'remote-pivot-table')}\n\t\t\t\t\t\t\tvalue={primaryKey}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ primaryKey: value })}\n\t\t\t\t\t\t\toptions={columns.map(column => ({\n\t\t\t\t\t\t\t\tvalue: column,\n\t\t\t\t\t\t\t\tlabel: column,\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div {...innerBlocksProps} />\n\t\t</div>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save( { attributes } ) {\n\treturn <InnerBlocks.Content/>;\n}\n","/**\n * External Dependencies\n */\nimport { Icon } from '@prc/icons';\n\nexport default function PivotTableIcon() {\n\treturn <Icon icon=\"table-pivot\" library=\"light\" />;\n}\n"],"names":["window","name","metadata","settings","edit","attributes","setAttributes","context","clientId","isSelected","dataSource","primaryKey","pivotedData","selectedColumns","remoteDataContext","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","className","columns","useMemo","results","firstResult","result","Object","keys","rows","map","useEffect","pivoted","forEach","row","primaryKeyValue","value","fromEntries","entries","filter","key","includes","console","log","columnName","columnValue","_jsxs","children","_jsx","InspectorControls","PanelBody","title","__","SelectControl","label","multiple","onChange","options","column","save","InnerBlocks","Content","icon","Icon","library","registerBlockType"],"sourceRoot":""}