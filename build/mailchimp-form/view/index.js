import{getContext as e,store as r}from"@wordpress/interactivity";r("prc-block/mailchimp-form",{actions:{subscribe:async r=>{const s=e();return new Promise(async(e,t)=>{const{interest:i,NONCE:n}=s;if(!i&&i.length<1)return t({status:"error",message:"No interest id provided"});if(!n)return t({status:"error",message:"No nonce provided"});const a=r.find(e=>["emailAddress","email"].includes(e.name))?.value,o=r.find(e=>"captchaToken"===e.name)?.value;return async function({emailAddress:e,captchaToken:r=!1,interest:s=!1,NONCE:t=!1}){return console.log("🐵 subscribe",{emailAddress:e,captchaToken:r,interest:s,NONCE:t}),new Promise((i,n)=>{const{apiFetch:a}=window.wp,{isURL:o,buildQueryString:c}=window.wp.url;if(!r)return new Error("🙈 We couldn't verify you're not a robot 🤖. Please try again.");const l=e,u=document.URL;if(!o(u))return new Error("🙈 Invalid page url",u);const m=c({email:l,captcha_token:r,interests:s,api_key:"mailchimp-form",origin_url:u});a.use(a.createNonceMiddleware(t)),a({path:`/prc-api/v3/mailchimp/subscribe/?${m}`,method:"POST"}).then(e=>e.success?(console.log("🐵 MailChimp success",e),i(e)):(console.error("🙊 MailChimp reject",e),n(e))).catch(e=>(console.error("🙊 MailChimp error",e),n(e)))})}({emailAddress:a,interest:i,captchaToken:o,NONCE:n}).then(r=>e({status:"success",message:"You have been subscribed to the list.",data:r})).catch(e=>t({status:"error",message:e.message,data:e}))})}}});
//# sourceMappingURL=index.js.map