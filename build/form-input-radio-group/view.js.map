{"version":3,"file":"view.js","mappings":"oGAKA,MAAM,MAAEA,EAAK,QAAEC,GAAYC,EAAO,mCAAoC,CACrEF,MAAO,CACN,kBAAIG,GACH,MAAM,WAAEC,GAAeC,KACjB,GAAEC,GAAOF,GACT,WAAEG,GAAeP,EACvB,OAAOO,EAAWC,KAAMC,GAAUA,EAAMH,KAAOA,IAAKI,OACrD,EACA,cAAIC,GACH,MAAM,WAAEP,GAAeC,KACjB,GAAEC,GAAOF,GACT,WAAEG,GAAeP,EACvB,OAAOO,EAAWC,KAAMC,GAAUA,EAAMH,KAAOA,IAAKM,KACrD,EACA,aAAIC,GACH,MAAM,WAAET,GAAeC,KACjB,GAAEC,GAAOF,GACT,WAAEG,GAAeP,EACvB,OAAOO,EAAWC,KAAMC,GAAUA,EAAMH,KAAOA,IAAKQ,IACrD,GAEDb,QAAS,CACRc,qBAAsBC,EAAiBC,IACtC,MAAMC,EAAUC,KACV,gBAAEC,EAAiBd,GAAIe,EAAO,OAAEC,GAAWJ,EACjD,IAAME,IAAoBC,EAEzB,YADAE,QAAQC,KAAK,6EAA8EN,GAI5F,MAAM,IAAEO,EAAG,WAAErB,GAAeC,IACtBqB,EAAQD,EAAIE,cAAc,SAChC,IAAMD,EAEL,YADAH,QAAQC,KAAK,oDAAqDC,GAGnE,MAAMnB,EAAKoB,EAAME,aAAa,MACxBd,EAAOY,EAAME,aAAa,QAC1BhB,EAAQc,EAAMd,MACpB,IAAMN,IAAOQ,IAASF,EAErB,YADAW,QAAQC,KAAK,yFAA0FpB,GAKxG,MACMyB,GADa7B,EAAMO,YAAc,IACNuB,IAAKrB,GAC/Ba,EAAOS,SAAUtB,EAAMH,IAGxBG,EAAMH,KAAOA,GACjBY,EAAQN,MAAQA,EACT,IACHH,EACHC,SAAS,IAGJ,IACHD,EACHC,SAAS,GAXFD,GAgBTT,EAAMO,WAAasB,KAGrBG,UAAW,CACV,cAACC,GACA,MAAMf,EAAUC,KACV,gBAAEC,EAAiBd,GAAIe,EAAO,MAAET,GAAUM,EAChD,IAAME,IAAoBC,EAEzB,YADAE,QAAQC,KAAK,8EAA+EN,GAI7F,MACMgB,SADoBhC,EAAOkB,IACMpB,MACvC,IAAMkC,IAAuBC,MAAMC,QAASF,EAAmB3B,YAE9D,YADAgB,QAAQC,KAAK,8DAA+DU,GAK7E,MAAMG,EAAsBH,EAAmB3B,WAAWuB,IAAOrB,GAC3DA,GAASA,EAAMH,KAAOe,EACnB,IACHZ,EACHG,SAGKH,GAIRyB,EAAmB3B,WAAa8B,CACjC","sources":["webpack://@prc/block-library/./src/form-input-radio-group/view.js"],"sourcesContent":["/**\n * WordPress Dependencies\n */\nimport { store, withScope, withSyncEvent, getElement, getContext } from '@wordpress/interactivity';\n\nconst { state, actions } = store( 'prc-block/form-input-radio-group', {\n\tstate: {\n\t\tget isInputChecked() {\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst { id } = attributes;\n\t\t\tconst { formFields } = state;\n\t\t\treturn formFields.find((field) => field.id === id)?.checked;\n\t\t},\n\t\tget inputValue() {\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst { id } = attributes;\n\t\t\tconst { formFields } = state;\n\t\t\treturn formFields.find((field) => field.id === id)?.value;\n\t\t},\n\t\tget inputName() {\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst { id } = attributes;\n\t\t\tconst { formFields } = state;\n\t\t\treturn formFields.find((field) => field.id === id)?.name;\n\t\t},\n\t},\n\tactions: {\n\t\tonInputCheckboxClick: withSyncEvent( ( event ) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { targetNamespace, id: blockId, fields } = context;\n\t\t\tif ( !targetNamespace || !blockId ) {\n\t\t\t\tconsole.warn('No targetNamespace or blockId found in context, cannot process click event', context);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { ref, attributes } = getElement();\n\t\t\tconst input = ref.querySelector('input');\n\t\t\tif ( !input ) {\n\t\t\t\tconsole.warn('No input found in ref, cannot process click event', ref);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst id = input.getAttribute('id');\n\t\t\tconst name = input.getAttribute('name');\n\t\t\tconst value = input.value;\n\t\t\tif ( !id || !name || !value ) {\n\t\t\t\tconsole.warn('No ID, name, or value found in attributes, cannot process click event for radio group.', attributes);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find all radio fields with the same name\n\t\t\tconst formFields = state.formFields || [];\n\t\t\tconst updatedFields = formFields.map( field => {\n\t\t\t\tif ( !fields.includes( field.id ) ) {\n\t\t\t\t\treturn field; // Not part of this radio group, leave unchanged\n\t\t\t\t}\n\t\t\t\tif ( field.id === id ) {\n\t\t\t\t\tcontext.value = value; // Update context value for hoisting\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...field,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...field,\n\t\t\t\t\tchecked: false,\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\t// Update state with new checked values\n\t\t\tstate.formFields = updatedFields;\n\t\t} ),\n\t},\n\tcallbacks: {\n\t\t*onValueChange() {\n\t\t\tconst context = getContext();\n\t\t\tconst { targetNamespace, id: blockId, value } = context;\n\t\t\tif ( !targetNamespace || !blockId ) {\n\t\t\t\tconsole.warn('No targetNamespace or blockId found in context, cannot process value change', context);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst targetStore = yield store( targetNamespace );\n\t\t\tconst existingStoreState = targetStore.state;\n\t\t\tif ( !existingStoreState || !Array.isArray( existingStoreState.formFields ) ) {\n\t\t\t\tconsole.warn('Target store state is invalid or formFields is not an array', existingStoreState);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the item in formFields that has an id matching blockId, setting its value to the hoisted value\n\t\t\tconst updatedParentFields = existingStoreState.formFields.map( ( field ) => {\n\t\t\t\tif ( field && field.id === blockId ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...field,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn field;\n\t\t\t} );\n\t\t\tconst snapshot = existingStoreState;\n\n\t\t\texistingStoreState.formFields = updatedParentFields;\n\t\t},\n\t},\n} );\n"],"names":["state","actions","store","isInputChecked","attributes","getElement","id","formFields","find","field","checked","inputValue","value","inputName","name","onInputCheckboxClick","withSyncEvent","event","context","getContext","targetNamespace","blockId","fields","console","warn","ref","input","querySelector","getAttribute","updatedFields","map","includes","callbacks","onValueChange","existingStoreState","Array","isArray","updatedParentFields"],"sourceRoot":""}