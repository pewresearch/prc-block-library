{"version":3,"file":"taxonomy-search/view.js","mappings":"mHAWA,MAAM,SAAEA,GAAaC,OAAOC,IACtB,aAAEC,GAAiBF,OAAOC,GAAGE,KAC7B,eAAEC,GAAmBJ,OAAOC,GAAGI,cAE/B,MAAEC,EAAK,QAAEC,GAAYC,EAAM,4BAA6B,CAC7DF,MAAO,CACN,cAAIG,GACH,MAAM,WAAEC,GAAeC,KACjB,GAAEC,GAAOF,GACT,WAAEG,GAAeP,EACvB,OAAOO,EAAWC,KAAMC,GAAUA,EAAMH,KAAOA,IAAKI,KACrD,EACA,aAAIC,GACH,MAAMC,EAAUC,KACV,SAAEC,GAAaF,EACrB,MAAO,WAAWE,GACnB,EACA,oBAAIC,GACH,MAAM,WAAEX,GAAeC,KACjB,GAAEC,GAAOF,GACT,WAAEG,GAAeP,EACvB,OAAOO,EAAWC,KAAMC,GAAUA,EAAMH,KAAOA,IAAKU,WACrD,GAEDf,QAAS,CACRgB,SAAcC,MAACC,EAAaL,EAAUM,EAAe,IAC7C,IAAIC,QAASC,IACnB,MAAMC,EAAO,CAAEC,SAAU,IACrB,KAAOV,IACVS,EAAKT,SAAWA,GAEb,KAAOK,IACVI,EAAKE,OAASN,GAEX,IAAMC,GAAgB,KAAOA,IAEhCG,EAAKG,eAAiBN,GAEvB,MAAMO,EAAU,CACfC,OAAQ,MACRC,KAAMjC,EACL,qCACA2B,IAGFO,QAAQC,IAAI,mBAAoBJ,GAChClC,EAASkC,GAASK,KAAMC,IACvBH,QAAQC,IAAI,oBAAqBE,GACjC,MAAMC,EAAUD,EAAEE,IAAKC,IAAC,CACvBC,IAAKD,EAAE9B,GACPA,GAAI8B,EAAE9B,GACNT,IAAKuC,EAAEE,KACPC,YAAazC,EAAesC,EAAEG,aAC9BC,MAAO1C,EAAesC,EAAEK,SAEzBnB,EAAQY,OAIXQ,aAAcC,EAAeC,IACZ/B,IACRgC,UAAW,IAEpBC,YAAaH,EAAeC,IAC3B,MAAMhC,EAAUC,IAChBkC,WAAW,KACVnC,EAAQiC,UAAW,GACjB,OAEJG,cAAeL,EAAeC,IAC7B,MAAM,MAAElC,GAAUkC,EAAMK,OAClBrC,EAAUC,KACV,IAAEqC,GAAQ7C,KACV,GAAEC,GAAO4C,GAGT,WAAE3C,GAAeP,EACjBmD,EAAY5C,EAAWC,KAAM4C,GAAMA,EAAE9C,KAAOA,GAC9C6C,IACHA,EAAUzC,MAAQA,GAEnBV,EAAMO,WAAaA,EACnBK,EAAQO,YAAcT,KAGxB2C,UAAW,CACVC,YAAaA,KACZ,MAAM1C,EAAUC,IAChB,OACCD,EAAQ2C,SACR3C,EAAQ2C,QAAQC,QAAU,GAC1B5C,EAAQiC,UAGVY,oBAAqBd,EAAc,KAClC,MAAM/B,EAAUC,KACV,YAAEM,EAAW,SAAEL,GAAaF,EAC9BO,GAAeA,EAAYqC,OAAS,GACvCE,EACCX,WAAW,KACVjB,QAAQC,IAAI,sBAAuB,IAAKnB,IACxCX,EAAQiB,SAASC,EAAaL,GAAUkB,KAAMC,IAC7CrB,EAAQ2C,QAAUtB,KAEjB,SAIN0B,SAAWf,IACN,KAAOA,EAAMgB,UACA/C,IACRgC,UAAW","sources":["webpack://@prc/block-library/./src/taxonomy-search/view.js"],"sourcesContent":["/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetElement,\n\twithSyncEvent,\n\twithScope,\n} from '@wordpress/interactivity';\n\nconst { apiFetch } = window.wp;\nconst { addQueryArgs } = window.wp.url;\nconst { decodeEntities } = window.wp.htmlEntities;\n\nconst { state, actions } = store('prc-block/taxonomy-search', {\n\tstate: {\n\t\tget inputValue() {\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst { id } = attributes;\n\t\t\tconst { formFields } = state;\n\t\t\treturn formFields.find((field) => field.id === id)?.value;\n\t\t},\n\t\tget inputName() {\n\t\t\tconst context = getContext();\n\t\t\tconst { taxonomy } = context;\n\t\t\treturn `search__${taxonomy}`;\n\t\t},\n\t\tget inputPlaceholder() {\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst { id } = attributes;\n\t\t\tconst { formFields } = state;\n\t\t\treturn formFields.find((field) => field.id === id)?.placeholder;\n\t\t},\n\t},\n\tactions: {\n\t\tasync doSearch(searchValue, taxonomy, parentTermId = 0) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tconst args = { per_page: 25 };\n\t\t\t\tif ('' !== taxonomy) {\n\t\t\t\t\targs.taxonomy = taxonomy;\n\t\t\t\t}\n\t\t\t\tif ('' !== searchValue) {\n\t\t\t\t\targs.search = searchValue;\n\t\t\t\t}\n\t\t\t\tif (0 !== parentTermId && '' !== parentTermId) {\n\t\t\t\t\t// cast parentTermId as a whole number\n\t\t\t\t\targs.parent_term_id = parentTermId;\n\t\t\t\t}\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tpath: addQueryArgs(\n\t\t\t\t\t\t'/prc-api/v3/blocks/taxonomy-search',\n\t\t\t\t\t\targs\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t\tconsole.log('doSearch request', request);\n\t\t\t\tapiFetch(request).then((d) => {\n\t\t\t\t\tconsole.log('doSearch response', d);\n\t\t\t\t\tconst tmpData = d.map((t) => ({\n\t\t\t\t\t\tkey: t.id,\n\t\t\t\t\t\tid: t.id,\n\t\t\t\t\t\turl: t.link,\n\t\t\t\t\t\tdescription: decodeEntities(t.description),\n\t\t\t\t\t\tlabel: decodeEntities(t.name),\n\t\t\t\t\t}));\n\t\t\t\t\tresolve(tmpData);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tonInputFocus: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.isActive = true;\n\t\t}),\n\t\tonInputBlur: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tsetTimeout(() => {\n\t\t\t\tcontext.isActive = false;\n\t\t\t}, 300);\n\t\t}),\n\t\tonInputChange: withSyncEvent((event) => {\n\t\t\tconst { value } = event.target;\n\t\t\tconst context = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tconst { id } = ref;\n\t\t\t// Store the value in the global state where we store all primitve inputs.\n\t\t\t// Also, store the value in this block's context so we can use it in the submitHandler.\n\t\t\tconst { formFields } = state;\n\t\t\tconst formField = formFields.find((f) => f.id === id);\n\t\t\tif (formField) {\n\t\t\t\tformField.value = value;\n\t\t\t}\n\t\t\tstate.formFields = formFields;\n\t\t\tcontext.searchValue = value;\n\t\t}),\n\t},\n\tcallbacks: {\n\t\tshowResults: () => {\n\t\t\tconst context = getContext();\n\t\t\treturn (\n\t\t\t\tcontext.results &&\n\t\t\t\tcontext.results.length >= 1 &&\n\t\t\t\tcontext.isActive\n\t\t\t);\n\t\t},\n\t\tonSearchValueChange: withSyncEvent(() => {\n\t\t\tconst context = getContext();\n\t\t\tconst { searchValue, taxonomy } = context;\n\t\t\tif (searchValue && searchValue.length > 4) {\n\t\t\t\twithScope(\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tconsole.log('onSearchValueChange', { ...context });\n\t\t\t\t\t\tactions.doSearch(searchValue, taxonomy).then((d) => {\n\t\t\t\t\t\t\tcontext.results = d;\n\t\t\t\t\t\t});\n\t\t\t\t\t}, 1200)\n\t\t\t\t);\n\t\t\t}\n\t\t}),\n\t\tonEscKey: (event) => {\n\t\t\tif (27 === event.keyCode) {\n\t\t\t\tconst context = getContext();\n\t\t\t\tcontext.isActive = false;\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["apiFetch","window","wp","addQueryArgs","url","decodeEntities","htmlEntities","state","actions","store","inputValue","attributes","getElement","id","formFields","find","field","value","inputName","context","getContext","taxonomy","inputPlaceholder","placeholder","async","doSearch","searchValue","parentTermId","Promise","resolve","args","per_page","search","parent_term_id","request","method","path","console","log","then","d","tmpData","map","t","key","link","description","label","name","onInputFocus","withSyncEvent","event","isActive","onInputBlur","setTimeout","onInputChange","target","ref","formField","f","callbacks","showResults","results","length","onSearchValueChange","withScope","onEscKey","keyCode"],"sourceRoot":""}