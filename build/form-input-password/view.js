import{getContext as t,getElement as n,store as i,withSyncEvent as e}from"@wordpress/interactivity";const{actions:s,state:o}=i("prc-block/form-input-password",{state:{get id(){return t()?.id||!1},get value(){const{id:t}=o;return o[t]?.value||""},get inputName(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.name},get inputPlaceholder(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.placeholder},get isInputHidden(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.hidden},get isInputDisabled(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.disabled},get isInputReadOnly(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.readOnly},get isInputRequired(){const{attributes:t}=n(),{id:i}=t,{formFields:e}=o;return e.find(t=>t.id===i)?.required},get hasConfirmation(){const{id:t}=o;return o[t]?.hasConfirmation||!1},get confirmationInputId(){const{id:t}=o;return o[t]?.confirmationInputId||""},get confirmationValue(){const{id:t}=o;return o[t]?.confirmationValue||""},get passwordsMatch(){const{id:t}=o;return o[t]?.passwordsMatch||!1},get allConditionsMet(){const{id:t}=o;return o[t].conditionsList.every(t=>t.met)}},actions:{onInputChange:e(t=>{const{ref:i}=n(),{id:e,name:s}=i,a=t.target?.value,r=o.id;o[r].value=a,"confirmPassword"===s?o[r].confirmationValue=a:o[r].value=a}),onLabelClick:e(t=>{const n=t.target.nextElementSibling;n&&["INPUT"].includes(n.tagName)&&n.focus()})},callbacks:{onConfirmationInit:()=>{const{id:t,formFields:n}=o,i=t,e=n.find(t=>"confirmPassword"===t.name)?.id||!1,s=n.findIndex(t=>"confirmPassword"===t.name);e&&(o[i].confirmationInputId=e,o.formFields[s].isDisabled=!0)},onPasswordAnalyzer:()=>{const{id:n}=t(),{value:i,confirmationValue:e,confirmationInputId:s,formFields:a}=o,r=o.id;if(null===s||""===s)return;if(""===i)return;const d={hasLowerCase:/[a-z]/.test(c=i),hasUpperCase:/[A-Z]/.test(c),hasNumber:/\d/.test(c),hasSpecialCharacter:/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(c),hasLength:c.length>=12,hasNoInvalidCharacters:/^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]*$/.test(c)};var c;const u=Object.values(d).every(t=>!0===t),l=a.findIndex(t=>"confirmPassword"===t.name);o.formFields[l].isDisabled=!u;const f=[];Object.keys(d).forEach(t=>{const n=o[r].conditionsList.findIndex(n=>n.id===t),i=o[r].conditionsList[n];i.met=d[t],f[n]=i});const m=e===i;o[r].passwordsMatch=m;const h=o[r].conditionsList.findIndex(t=>"hasMatch"===t.id),p=o[r].conditionsList[h];p.met=m,f[h]=p,o[r].conditionsList=f},*onValueChange(){const{targetNamespace:n,id:e}=t(),{value:s,hasConfirmation:a,passwordsMatch:r,allConditionsMet:d}=o;if(s){const{actions:t}=yield i(n);t.onInputChange&&(a&&d?t.onInputChange({target:{value:s,id:e}}):a||t.onInputChange({target:{value:s,id:e}}))}}}});
//# sourceMappingURL=view.js.map