{"version":3,"file":"carousel-controller/view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,WAAgB,IAAOA,EAAwE,WAAG,MAAW,IAAOA,EAAmE,MAAG,UAAe,IAAOA,EAAuE,UAAG,cAAmB,IAAOA,EAA2E,eAHrgBC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,ICU3C,MAAEE,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,OAAM,gCAAiC,CACjEF,MAAO,CACNG,YAAa,EACbC,eAAe,EACfC,QAAS,KACTC,YAAY,EACZC,kBAAmB,KACnBC,aAAc,KACd,iBAAIC,GACH,MAAM,IAAEC,IAAQC,EAAAA,EAAAA,cAEhB,OAAa,OADHD,EAAIE,QAAQ,kBAEvB,EACA,YAAIC,GACH,MAAM,IAAEH,IAAQC,EAAAA,EAAAA,cAChB,OAAOD,EAAIE,QAAQ,kBACpB,EACA,cAAIE,GACH,MAAoC,cAA7BC,EAAAA,EAAAA,cAAaC,WACrB,EACA,SAAIC,GACH,MAAM,GAAEC,IAAOH,EAAAA,EAAAA,cACf,OAAOI,SACLC,eAAeF,GACfG,cAAc,+CACjB,EACA,gBAAIC,GACH,MAAM,WAAEC,EAAU,MAAEC,IAAUT,EAAAA,EAAAA,cAC9B,OAAOQ,EAAaC,EAAQ,CAC7B,EACA,oBAAIC,GACH,MAAM,WAAEF,IAAeR,EAAAA,EAAAA,cACvB,OAAOQ,EAAa,CACrB,EACA,cAAIG,GACH,MAAM,mBAAEC,IAAuBZ,EAAAA,EAAAA,cAC/B,MAAO,eAAeY,MACvB,EACA,YAAIC,GACH,MAAM,MAAEC,EAAK,WAAEN,IAAeR,EAAAA,EAAAA,cAC9B,OAAOc,IAAUN,CAClB,GAEDtB,QAAS,CACR6B,gBAAkBD,IACjB,MAAM,MAAEZ,EAAK,WAAEH,GAAed,GAC9Be,EAAAA,EAAAA,cAAaQ,WAAaM,EAC1BZ,EAAMc,SAAS,CACd,CAACjB,EAAa,MAAQ,QAASe,EAAQZ,EAAMe,YAC7CC,SAAU,UACT,EAEHC,QAASA,KACR,MAAMC,GAAUpB,EAAAA,EAAAA,eACV,IAAEqB,GAAQD,GACV,MAAEN,GAAUO,EAClBnC,EAAQ6B,gBAAgBD,EAAM,EAE/BQ,cAAeA,KACd,MAAMF,GAAUpB,EAAAA,EAAAA,eACV,MAAES,EAAK,WAAED,GAAeY,EACxBG,EAAYd,IAAUD,EAAa,EAAI,EAAIA,EAAa,EAC9DtB,EAAQ6B,gBAAgBQ,EAAU,EAEnCC,kBAAmBA,KAClB,MAAMJ,GAAUpB,EAAAA,EAAAA,eACV,WAAEQ,EAAU,MAAEC,GAAUW,EACxBK,EAA+B,IAAfjB,EAAmBC,EAAQ,EAAID,EAAa,EAClEtB,EAAQ6B,gBAAgBU,EAAc,EAEvCC,cAAeA,KACdxC,EAAQ6B,gBAAgB,EAAE,GAG5BY,UAAW,CACVC,OAAQA,KACP,MAAM,MAAE1B,GAAUjB,EACZmC,GAAUpB,EAAAA,EAAAA,eACV,YAAEC,EAAW,MAAEQ,GAAUW,EAOzBrB,GAJSG,EAAM2B,iBACpB,sCAGkC,aAAhB5B,GAInB,IAAI6B,EAHJ7C,EAAMK,QAAUc,SAAS2B,KAIzB7B,EAAM8B,iBACL,UACAC,EAAAA,EAAAA,YACCC,EAAAA,EAAAA,gBAAeC,IAEdC,aAAaN,GAGbA,EAAgBO,YAAW,KAE1B,MAAMC,EAAgBvC,EACnBG,EAAMqC,aACNrC,EAAMsC,YACHC,EAAc1C,EACjBG,EAAMwC,aACNxC,EAAMyC,YACHC,EAAY7C,EACfG,EAAM2C,UACN3C,EAAM4C,WAGHC,EAAYN,EAAcH,EAC1BU,EAAWD,EACdH,EAAYG,EACZ,EAGGvC,EAAayC,KAAKC,MACvBF,GAAYvC,EAAQ,IAIf0C,EAAeF,KAAKG,IACzB,EACAH,KAAKI,IAAI7C,EAAYC,EAAQ,IAG9BW,EAAQZ,WAAa2C,CAAY,GAC/B,GAAG,MAKJlE,EAAMS,gBACV0B,EAAQkC,SAAU,EACnB,EAEDC,YAAaA,KACZ,MAAMnC,GAAUpB,EAAAA,EAAAA,eACV,WAAEwD,IAAe5D,EAAAA,EAAAA,cACjBkB,EAAQ2C,SAASD,EAAW,oBAAqB,IACvD,OAAOpC,EAAQZ,aAAeM,CAAK,EAEpC4C,cAAcxB,EAAAA,EAAAA,gBAAc,KAC3B,MAAMd,GAAUpB,EAAAA,EAAAA,cAChB2D,QAAQC,IAAI,iBAAkBxC,GAC9BA,EAAQyC,YAAa,CAAI,IAE1BC,cAAc5B,EAAAA,EAAAA,gBAAc,KAC3B,MAAMd,GAAUpB,EAAAA,EAAAA,cAChB2D,QAAQC,IAAI,iBAAkBxC,GAC9BA,EAAQyC,YAAa,CAAK,IAE3BE,wBAAyBA,KACxB,MAAM,IAAEpE,IAAQC,EAAAA,EAAAA,cACVwB,GAAUpB,EAAAA,EAAAA,eACV,WAAEQ,EAAU,MAAEC,GAAUW,EAChBzB,EAAIE,QAAQ,oBACbW,IAAeC,EAAQ,IACnCW,EAAQkC,SAAU,EACnB,EAEDU,cAAeA,KACd,MAAM,cAAEtE,EAAa,SAAEI,GAAab,EAC9BmC,GAAUpB,EAAAA,EAAAA,cAEhB,GAAIN,EAAe,CAClB,MAAMuE,EAAYnE,EAASoE,wBAGrBC,EAAcF,EAAUG,OACxBC,EAAWJ,EAAUK,IAI1BD,GAAY,GACZF,EAAc,GACdI,OAAOC,QAAUvF,EAAMG,cACtBH,EAAMM,aAEP6B,EAAQkC,SAAU,EAClBrE,EAAMK,QAAQmF,MAAMC,SAAW,SAC/BzF,EAAMM,YAAa,EAGnB8C,YACCJ,EAAAA,EAAAA,YAAU,KACThD,EAAMK,QAAQmF,MAAMC,SAAW,MAAM,IAEtC,OAIEP,GAAe,GAAKE,GAAYE,OAAOI,cAC1CtC,YACCJ,EAAAA,EAAAA,YAAU,KACThD,EAAMM,YAAa,EACnBL,EAAQwC,eAAe,IAExB,KAGFzC,EAAMG,YAAcmF,OAAOC,OAC5B,MDtNK,IAAC3F,EACJE","sources":["webpack://@prc/block-library/webpack/bootstrap","webpack://@prc/block-library/webpack/runtime/define property getters","webpack://@prc/block-library/webpack/runtime/hasOwnProperty shorthand","webpack://@prc/block-library/external module \"@wordpress/interactivity\"","webpack://@prc/block-library/./src/carousel-controller/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store), [\"withScope\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.withScope), [\"withSyncEvent\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.withSyncEvent) });","/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetElement,\n\twithScope,\n\twithSyncEvent,\n} from '@wordpress/interactivity';\n\nconst { state, actions } = store('prc-block/carousel-controller', {\n\tstate: {\n\t\tlastScrollY: 0,\n\t\tscrollLocking: false,\n\t\tbodyObj: null,\n\t\thasEngaged: false,\n\t\tscrollLockTimeout: null,\n\t\twheelTimeout: null,\n\t\tget isInsideCover() {\n\t\t\tconst { ref } = getElement();\n\t\t\tconst x = ref.closest('.wp-block-cover');\n\t\t\treturn x !== null;\n\t\t},\n\t\tget coverRef() {\n\t\t\tconst { ref } = getElement();\n\t\t\treturn ref.closest('.wp-block-cover');\n\t\t},\n\t\tget isVertical() {\n\t\t\treturn getContext().orientation === 'vertical';\n\t\t},\n\t\tget track() {\n\t\t\tconst { id } = getContext();\n\t\t\treturn document\n\t\t\t\t.getElementById(id)\n\t\t\t\t.querySelector('.prc-block-carousel-controller__track__inner');\n\t\t},\n\t\tget hasNextSlide() {\n\t\t\tconst { slideIndex, count } = getContext();\n\t\t\treturn slideIndex < count - 1;\n\t\t},\n\t\tget hasPreviousSlide() {\n\t\t\tconst { slideIndex } = getContext();\n\t\t\treturn slideIndex > 0;\n\t\t},\n\t\tget trackStyle() {\n\t\t\tconst { containerMinHeight } = getContext();\n\t\t\treturn `min-height: ${containerMinHeight}px;`;\n\t\t},\n\t\tget isActive() {\n\t\t\tconst { index, slideIndex } = getContext();\n\t\t\treturn index === slideIndex;\n\t\t},\n\t},\n\tactions: {\n\t\tnavigateToSlide: (index) => {\n\t\t\tconst { track, isVertical } = state;\n\t\t\tgetContext().slideIndex = index;\n\t\t\ttrack.scrollTo({\n\t\t\t\t[isVertical ? 'top' : 'left']: index * track.offsetWidth,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t},\n\t\tgoToDot: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { dot } = context;\n\t\t\tconst { index } = dot;\n\t\t\tactions.navigateToSlide(index);\n\t\t},\n\t\tgoToNextSlide: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { count, slideIndex } = context;\n\t\t\tconst nextIndex = count === slideIndex + 1 ? 0 : slideIndex + 1;\n\t\t\tactions.navigateToSlide(nextIndex);\n\t\t},\n\t\tgoToPreviousSlide: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { slideIndex, count } = context;\n\t\t\tconst previousIndex = slideIndex === 0 ? count - 1 : slideIndex - 1;\n\t\t\tactions.navigateToSlide(previousIndex);\n\t\t},\n\t\tresetCarousel: () => {\n\t\t\tactions.navigateToSlide(0);\n\t\t},\n\t},\n\tcallbacks: {\n\t\tonInit: () => {\n\t\t\tconst { track } = state;\n\t\t\tconst context = getContext();\n\t\t\tconst { orientation, count } = context;\n\n\t\t\t// Get all the heights of the slides, wp-block-prc-block-carousel-slide and set the context.minHeight to the highest height\n\t\t\tconst slides = track.querySelectorAll(\n\t\t\t\t'.wp-block-prc-block-carousel-slide'\n\t\t\t);\n\n\t\t\tconst isVertical = orientation === 'vertical';\n\t\t\tstate.bodyObj = document.body;\n\n\t\t\t// We add a debounced scroll event listend to the track to calculate the current slideIndex value based on the scroll position.\n\t\t\tlet scrollTimeout;\n\t\t\ttrack.addEventListener(\n\t\t\t\t'scroll',\n\t\t\t\twithScope(\n\t\t\t\t\twithSyncEvent((event) => {\n\t\t\t\t\t\t// Clear existing timeout\n\t\t\t\t\t\tclearTimeout(scrollTimeout);\n\n\t\t\t\t\t\t// Set new timeout to ensure we get the final position after scroll stops\n\t\t\t\t\t\tscrollTimeout = setTimeout(() => {\n\t\t\t\t\t\t\t// Get container and content dimensions based on orientation\n\t\t\t\t\t\t\tconst containerSize = isVertical\n\t\t\t\t\t\t\t\t? track.clientHeight\n\t\t\t\t\t\t\t\t: track.clientWidth;\n\t\t\t\t\t\t\tconst contentSize = isVertical\n\t\t\t\t\t\t\t\t? track.scrollHeight\n\t\t\t\t\t\t\t\t: track.scrollWidth;\n\t\t\t\t\t\t\tconst scrollPos = isVertical\n\t\t\t\t\t\t\t\t? track.scrollTop\n\t\t\t\t\t\t\t\t: track.scrollLeft;\n\n\t\t\t\t\t\t\t// Calculate progress as a percentage (0 to 1)\n\t\t\t\t\t\t\tconst maxScroll = contentSize - containerSize;\n\t\t\t\t\t\t\tconst progress = maxScroll\n\t\t\t\t\t\t\t\t? scrollPos / maxScroll\n\t\t\t\t\t\t\t\t: 0;\n\n\t\t\t\t\t\t\t// Calculate slide index from progress\n\t\t\t\t\t\t\tconst slideIndex = Math.round(\n\t\t\t\t\t\t\t\tprogress * (count - 1)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Ensure index is within bounds\n\t\t\t\t\t\t\tconst boundedIndex = Math.max(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tMath.min(slideIndex, count - 1)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tcontext.slideIndex = boundedIndex;\n\t\t\t\t\t\t}, 10);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (!state.isInsideCover) {\n\t\t\t\tcontext.enabled = true;\n\t\t\t}\n\t\t},\n\t\tisDotActive: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { attributes } = getElement();\n\t\t\tconst index = parseInt(attributes['data-slide-index'], 10);\n\t\t\treturn context.slideIndex === index;\n\t\t},\n\t\tonMouseEnter: withSyncEvent(() => {\n\t\t\tconst context = getContext();\n\t\t\tconsole.log('onMouseEnter::', context);\n\t\t\tcontext.isSelected = true;\n\t\t}),\n\t\tonMouseLeave: withSyncEvent(() => {\n\t\t\tconst context = getContext();\n\t\t\tconsole.log('onMouseLeave::', context);\n\t\t\tcontext.isSelected = false;\n\t\t}),\n\t\tonCoverFinalSideDisable: () => {\n\t\t\tconst { ref } = getElement();\n\t\t\tconst context = getContext();\n\t\t\tconst { slideIndex, count } = context;\n\t\t\tconst cover = ref.closest('.wp-block-cover');\n\t\t\tif (cover && slideIndex === count - 1) {\n\t\t\t\tcontext.enabled = false;\n\t\t\t}\n\t\t},\n\t\tonCoverScroll: () => {\n\t\t\tconst { isInsideCover, coverRef } = state;\n\t\t\tconst context = getContext();\n\n\t\t\tif (isInsideCover) {\n\t\t\t\tconst coverRect = coverRef.getBoundingClientRect();\n\n\t\t\t\t// Get the bottom position relative to viewport\n\t\t\t\tconst coverBottom = coverRect.bottom;\n\t\t\t\tconst coverTop = coverRect.top;\n\n\t\t\t\t// Enable only when cover is at the top of viewport and scrolling down\n\t\t\t\tif (\n\t\t\t\t\tcoverTop <= 0 &&\n\t\t\t\t\tcoverBottom > 0 &&\n\t\t\t\t\twindow.scrollY > state.lastScrollY &&\n\t\t\t\t\t!state.hasEngaged\n\t\t\t\t) {\n\t\t\t\t\tcontext.enabled = true;\n\t\t\t\t\tstate.bodyObj.style.overflow = 'hidden';\n\t\t\t\t\tstate.hasEngaged = true;\n\n\t\t\t\t\t// Release body lock after 2 seconds\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\twithScope(() => {\n\t\t\t\t\t\t\tstate.bodyObj.style.overflow = 'auto';\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t2000\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// On the way out, set engaged to false\n\t\t\t\tif (coverBottom <= 0 || coverTop >= window.innerHeight) {\n\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\twithScope(() => {\n\t\t\t\t\t\t\tstate.hasEngaged = false;\n\t\t\t\t\t\t\tactions.resetCarousel();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t2000\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tstate.lastScrollY = window.scrollY;\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","state","actions","store","lastScrollY","scrollLocking","bodyObj","hasEngaged","scrollLockTimeout","wheelTimeout","isInsideCover","ref","getElement","closest","coverRef","isVertical","getContext","orientation","track","id","document","getElementById","querySelector","hasNextSlide","slideIndex","count","hasPreviousSlide","trackStyle","containerMinHeight","isActive","index","navigateToSlide","scrollTo","offsetWidth","behavior","goToDot","context","dot","goToNextSlide","nextIndex","goToPreviousSlide","previousIndex","resetCarousel","callbacks","onInit","querySelectorAll","scrollTimeout","body","addEventListener","withScope","withSyncEvent","event","clearTimeout","setTimeout","containerSize","clientHeight","clientWidth","contentSize","scrollHeight","scrollWidth","scrollPos","scrollTop","scrollLeft","maxScroll","progress","Math","round","boundedIndex","max","min","enabled","isDotActive","attributes","parseInt","onMouseEnter","console","log","isSelected","onMouseLeave","onCoverFinalSideDisable","onCoverScroll","coverRect","getBoundingClientRect","coverBottom","bottom","coverTop","top","window","scrollY","style","overflow","innerHeight"],"sourceRoot":""}