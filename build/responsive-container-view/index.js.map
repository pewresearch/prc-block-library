{"version":3,"file":"responsive-container-view/index.js","mappings":"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","sources":["webpack://@prc/block-library/external window [\"wp\",\"blocks\"]","webpack://@prc/block-library/external window [\"wp\",\"i18n\"]","webpack://@prc/block-library/external window [\"wp\",\"element\"]","webpack://@prc/block-library/external window [\"wp\",\"blockEditor\"]","webpack://@prc/block-library/external window [\"wp\",\"components\"]","webpack://@prc/block-library/external window [\"wp\",\"data\"]","webpack://@prc/block-library/external window \"ReactJSXRuntime\"","webpack://@prc/block-library/./src/responsive-container-view/controls.jsx","webpack://@prc/block-library/./src/responsive-container-view/edit.jsx","webpack://@prc/block-library/external window \"prcIcons\"","webpack://@prc/block-library/./src/responsive-container-view/variations.js","webpack://@prc/block-library/./src/responsive-container-view/index.js","webpack://@prc/block-library/./src/responsive-container-view/icon.jsx","webpack://@prc/block-library/./src/responsive-container-view/save.jsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { BlockControls, InspectorControls } from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport {\n\tFlex,\n\tFlexItem,\n\tFlexBlock,\n\tSelectControl,\n\tTextareaControl,\n\t__experimentalInputControl as InputControl,\n\t__experimentalNumberControl as NumberControl,\n\t__experimentalUnitControl as UnitControl,\n\tPanelBody,\n\tPanelRow,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nfunction DeviceSizeQuickSelect({ attributes, setAttributes }) {\n\tconst { deviceType } = attributes;\n\n\treturn (\n\t\t<SelectControl\n\t\t\tlabel=\"Pre-Defined Device Ranges\"\n\t\t\thelp=\"Select a pre-defined device range to quickly set the minimum and maximum values for the responsive range.\"\n\t\t\tvalue={deviceType}\n\t\t\toptions={[\n\t\t\t\t{ label: 'Devices...', value: null },\n\t\t\t\t{ label: 'Desktop', value: 'desktop' },\n\t\t\t\t{ label: 'Tablet', value: 'tablet' },\n\t\t\t\t{ label: 'Mobile', value: 'mobile' },\n\t\t\t]}\n\t\t\tonChange={(deviceSize) => {\n\t\t\t\tif (null !== deviceSize) {\n\t\t\t\t\tconsole.log('deviceSize', deviceSize);\n\t\t\t\t\tconst sizes = {\n\t\t\t\t\t\tdesktop: {\n\t\t\t\t\t\t\tmin: 980,\n\t\t\t\t\t\t\tmax: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttablet: {\n\t\t\t\t\t\t\tmin: 480,\n\t\t\t\t\t\t\tmax: 979,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmobile: {\n\t\t\t\t\t\t\tmin: null,\n\t\t\t\t\t\t\tmax: 479,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\tdeviceType: deviceSize,\n\t\t\t\t\t\tmin: sizes[deviceSize].min,\n\t\t\t\t\t\tmax: sizes[deviceSize].max,\n\t\t\t\t\t};\n\t\t\t\t\tconsole.log('payload', payload, deviceType, sizes);\n\t\t\t\t\tsetAttributes(payload);\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default function Controls({ attributes, setAttributes, clientId }) {\n\t// console.log('<Controls/> attributes', attributes);\n\tconst { min, max, additionalStyles } = attributes;\n\n\t// Determine the maximum, get the minimum of the previous block and subtract 1. If there are no blocks prior, and this is the first block, set the max to 0.\n\tconst {constrainedMax, isFirstBlock, isLastBlock} = useSelect((select) => {\n\t\tconst previousBlockClientId =\n\t\t\tselect('core/block-editor').getPreviousBlockClientId(clientId);\n\t\tconst previousBlockAttrs = select(\n\t\t\t'core/block-editor'\n\t\t).getBlockAttributes(previousBlockClientId);\n\t\tconst rootClientId = select('core/block-editor').getBlockRootClientId(clientId);\n\t\tconst rootBlock = select('core/block-editor').getBlock(rootClientId);\n\t\tconst rootInnerBlocks = rootBlock.innerBlocks;\n\t\tconst lastBlockClientId = rootInnerBlocks[rootInnerBlocks.length - 1].clientId;\n\t\tconst firstBlockClientId = rootInnerBlocks[0].clientId;\n\t\tconst _isFirstBlock = clientId === firstBlockClientId;\n\t\tconst _isLastBlock = clientId === lastBlockClientId;\n\t\tlet _constrainedMax = null;\n\t\tif (null !== previousBlockAttrs) {\n\t\t\tconst _calc = previousBlockAttrs?.min - 1;\n\t\t\tif (_calc > 0) {\n\t\t\t\t_constrainedMax = _calc;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tconstrainedMax: _constrainedMax,\n\t\t\tisFirstBlock: _isFirstBlock,\n\t\t\tisLastBlock: _isLastBlock,\n\t\t};\n\t});\n\n\tconst [minValue, setMinValue] = useState(min);\n\tconst [maxValue, setMaxValue] = useState(max);\n\n\tuseEffect(() => {\n\t\tsetMinValue(min);\n\t}, [min]);\n\n\tuseEffect(() => {\n\t\tsetMaxValue(max);\n\t}, [max]);\n\n\tuseEffect(() => {\n\t\tconst _minValue = parseInt(minValue);\n\t\tconsole.log('Updating min', _minValue);\n\t\tsetAttributes({\n\t\t\tmin: _minValue,\n\t\t});\n\t}, [minValue]);\n\n\tuseEffect(() => {\n\t\tconst _maxValue = parseInt(maxValue) === 0 ? null : parseInt(maxValue);\n\t\tconsole.log('Updating max', _maxValue);\n\t\tsetAttributes({\n\t\t\tmax: _maxValue,\n\t\t});\n\t}, [maxValue]);\n\n\t// On component init, check if there is a constrained max value and max value, if there is no max value then set it to be the constrained max value.\n\tuseEffect(() => {\n\t\tif (null === max && null !== constrainedMax) {\n\t\t\tsetMaxValue(constrainedMax);\n\t\t}\n\t}, [constrainedMax]);\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title=\"Responsive Range\" initialOpen={true}>\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<Flex align=\"center\" justify=\"space-between\">\n\t\t\t\t\t\t{!isLastBlock && (\n\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\tlabel=\"Minimum\"\n\t\t\t\t\t\t\t\t\tvalue={minValue}\n\t\t\t\t\t\t\t\t\tmax={maxValue}\n\t\t\t\t\t\t\t\t\tstep\n\t\t\t\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\t\t\t\tsetMinValue(parseInt(val));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isFirstBlock && !isLastBlock && (\n\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<strong>~ to ~</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isFirstBlock && (\n\t\t\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\tlabel=\"Maximum\"\n\t\t\t\t\t\t\t\t\tvalue={maxValue}\n\t\t\t\t\t\t\t\t\tmax={constrainedMax}\n\t\t\t\t\t\t\t\t\tstep\n\t\t\t\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\t\t\t\tsetMaxValue(parseInt(val));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexBlock>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Flex>\n\t\t\t\t</PanelRow>\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<DeviceSizeQuickSelect attributes={attributes} setAttributes={setAttributes} />\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t\t<PanelBody title=\"Responsive Styles\" initialOpen={true}>\n\t\t\t\t<TextareaControl\n\t\t\t\t\tlabel=\"Styles\"\n\t\t\t\t\tvalue={additionalStyles}\n\t\t\t\t\tonChange={(val) => setAttributes({ additionalStyles: val })}\n\t\t\t\t\thelp=\"Enter CSS styles that will be applied to the responsive container. Each new class will be prefixed with the block ID. One class per line.\"\n\t\t\t\t/>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo } from '@wordpress/element';\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\nimport { Notice } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './controls';\n\nconst TEMPLATE = [['core/html', {}]];\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param            props.clientId\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes, clientId }) {\n\tconst { min, max, orientation } = attributes;\n\n\tconst blockProps = useBlockProps();\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{},\n\t\t{\n\t\t\torientation: orientation || 'vertical',\n\t\t\ttemplateLock: false,\n\t\t\ttemplate: TEMPLATE,\n\t\t}\n\t);\n\n\tconst label = useMemo(() => {\n\t\tif (max && !min) {\n\t\t\treturn `maximum ${max}px`;\n\t\t}\n\t\tif (!max && min) {\n\t\t\treturn `minimum ${min}px`;\n\t\t}\n\t\tif (max && min) {\n\t\t\treturn `between ${min}px and ${max}px`;\n\t\t}\n\t\treturn 'No range set';\n\t}, [min, max]);\n\n\treturn (\n\t\t<>\n\t\t\t<Controls {...{ attributes, setAttributes, clientId }} />\n\t\t\t<div {...blockProps}>\n\t\t\t\t<Notice\n\t\t\t\t\tisDismissible={false}\n\t\t\t\t\tspokenMessage={label}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"sans-serif\">\n\t\t\t\t\t\t<strong>Viewport Range:</strong> {label}\n\t\t\t\t\t</span>\n\t\t\t\t</Notice>\n\t\t\t\t<div {...innerBlocksProps} />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nconst variations = [\n\t{\n\t\tname: 'responsive-container-view',\n\t\tisDefault: true,\n\t\ttitle: __('Responsive Container View'),\n\t\tattributes: {\n\t\t\tmin: 980,\n\t\t\tmax: 0,\n\t\t},\n\t\tscope: ['inserter'],\n\t\tisActive: ({ deviceType }) => !deviceType,\n\t},\n\t{\n\t\tname: 'desktop',\n\t\ttitle: __('Desktop'),\n\t\tattributes: {\n\t\t\tdeviceType: 'desktop',\n\t\t\tmin: 980,\n\t\t\tmax: null,\n\t\t},\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: ({ deviceType }) => 'desktop' === deviceType,\n\t},\n\t{\n\t\tname: 'tablet',\n\t\ttitle: __('Tablet'),\n\t\tattributes: {\n\t\t\tdeviceType: 'tablet',\n\t\t\tmin: 480,\n\t\t\tmax: 979,\n\t\t},\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: ({ deviceType }) => 'tablet' === deviceType,\n\t},\n\t{\n\t\tname: 'mobile',\n\t\ttitle: __('Mobile'),\n\t\tattributes: {\n\t\t\tdeviceType: 'mobile',\n\t\t\tmin: 0,\n\t\t\tmax: 479,\n\t\t},\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: ({ deviceType }) => 'mobile' === deviceType,\n\t},\n];\n\nexport default variations;\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\nimport edit from './edit';\nimport save from './save';\nimport icon from './icon';\nimport variations from './variations';\n\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n\tsave,\n\tvariations,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * External Dependencies\n */\nimport { Icon } from '@prc/icons';\n\nexport default function () {\n\treturn <Icon icon=\"laptop-mobile\" />;\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save() {\n\treturn <InnerBlocks.Content />;\n}\n"],"names":["window","DeviceSizeQuickSelect","attributes","setAttributes","deviceType","_jsx","SelectControl","label","help","value","options","onChange","deviceSize","console","log","sizes","desktop","min","max","tablet","mobile","payload","Controls","clientId","additionalStyles","constrainedMax","isFirstBlock","isLastBlock","useSelect","select","previousBlockClientId","getPreviousBlockClientId","previousBlockAttrs","getBlockAttributes","rootClientId","getBlockRootClientId","rootInnerBlocks","getBlock","innerBlocks","lastBlockClientId","length","firstBlockClientId","_isFirstBlock","_isLastBlock","_constrainedMax","_calc","minValue","setMinValue","useState","maxValue","setMaxValue","useEffect","_minValue","parseInt","_maxValue","_jsxs","InspectorControls","children","PanelBody","title","initialOpen","PanelRow","Flex","align","justify","FlexBlock","NumberControl","__next40pxDefaultSize","step","val","FlexItem","TextareaControl","TEMPLATE","name","isDefault","__","scope","isActive","metadata","settings","icon","Icon","edit","orientation","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","templateLock","template","useMemo","_Fragment","Notice","isDismissible","spokenMessage","className","save","InnerBlocks","Content","variations","registerBlockType"],"sourceRoot":""}