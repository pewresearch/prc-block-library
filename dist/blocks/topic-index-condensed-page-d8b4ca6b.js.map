{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///external \"moment\"","webpack:///external \"wp.components\"","webpack:///external \"lodash\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/topic-index-condensed/page/edit.js","webpack:///./src/topic-index-condensed/page/save.js","webpack:///./src/topic-index-condensed/page/index.js","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/block-inserter-button/index.js","webpack:///./src/_shared/components/caret-heading-link/index.js","webpack:///./src/_shared/components/heading-level-toolbar/index.js","webpack:///./src/_shared/components/link-toolbar-button/index.js","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\""],"names":["module","exports","wp","element","i18n","moment","components","lodash","apiFetch","url","blockEditor","Edit","attributes","className","clientId","context","setAttributes","heading","uuid","currentlyActive","hasChildBlocks","useSelect","select","getBlockOrder","length","blockProps","useBlockProps","classnames","active","innerBlocksProps","useInnerBlocksProps","renderAppender","InnerBlocks","DefaultBlockAppender","ButtonBlockAppender","save","Content","name","metadata","settings","title","__","description","edit","registerBlockType","getTerms","taxonomy","perPage","Promise","resolve","data","path","then","terms","index","slug","replace","toLowerCase","id","parent","BlockInserterButton","label","blockName","tooltipPosition","onClick","currentBlock","getBlock","console","log","innerBlocks","nextIndex","newBlock","createBlock","dispatch","insertBlock","CaretHeadingLink","headingSize","onChange","p","style","paddingBottom","tagName","value","h","placeholder","formattingControls","keepPlaceholderOnFocus","Icon","size","marginLeft","HeadingLevelIcon","level","isPressed","levelToPath","1","2","3","4","5","6","hasOwnProperty","width","height","viewBox","xmlns","d","POPOVER_PROPS","isAlternate","HeadingLevelToolbar","selectedLevel","levels","popoverProps","renderToggle","onToggle","isOpen","aria-expanded","aria-haspopup","icon","onKeyDown","event","keyCode","DOWN","preventDefault","stopPropagation","showTooltip","renderContent","isCollapsed","controls","map","targetLevel","isActive","sprintf","LinkToolbarButton","query","type","subtype","useState","isLinkOpen","setIsLinkOpen","position","onClose","showInitialSuggestions","suggestionsQuery","React","ReactDOM","blocks"],"mappings":"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","file":"blocks/topic-index-condensed-page-d8b4ca6b.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","module.exports = moment;","module.exports = wp.components;","module.exports = lodash;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.blockEditor;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n    InnerBlocks,\n    useBlockProps,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { CaretHeadingLink } from 'shared';\n\nimport './style.scss';\n\nconst Edit = ({ attributes, className, clientId, context, setAttributes }) => {\n    const { heading, url, uuid } = attributes;\n    const currentlyActive = context['prc-block/topic-index-condensed-active'];\n\n    const { hasChildBlocks } = useSelect(\n        select => {\n            const { getBlockOrder } = select('core/block-editor');\n            return {\n                hasChildBlocks: 0 < getBlockOrder(clientId).length,\n            };\n        },\n        [clientId],\n    );\n\n    const blockProps = useBlockProps({\n        className: classnames(className, {\n            active: uuid === currentlyActive,\n        }),\n    });\n\n    const innerBlocksProps = useInnerBlocksProps(\n        { className: 'pages' },\n        {\n            renderAppender: hasChildBlocks\n                ? InnerBlocks.DefaultBlockAppender\n                : InnerBlocks.ButtonBlockAppender,\n        },\n    );\n\n    return (\n        <div {...blockProps}>\n            <CaretHeadingLink\n                url={url}\n                heading={heading}\n                setAttributes={setAttributes}\n            />\n            <div {...innerBlocksProps} />\n        </div>\n    );\n};\n\nexport default Edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n// import './style.scss';\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Page'),\n    description: __(\n        'A sub block of Topic Index - Condensed View, this block controls the right side pages of content corresponding to an item from the menu.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nimport apiFetch from '@wordpress/api-fetch';\n\nconst getTermsByLetter = (taxonomy, letter) => {\n    return new Promise(resolve => {\n        apiFetch({\n            path: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n        }).then(terms => {\n            resolve(terms);\n        });\n    });\n};\n\nconst getTerms = (taxonomy, perPage = 25) => {\n    return new Promise(resolve => {\n        const data = {};\n        apiFetch({\n            path: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n        }).then(terms => {\n            for (let index = 0; index < terms.length; index++) {\n                const slug = terms[index].slug.replace(\n                    `${taxonomy.toLowerCase()}_`,\n                    '',\n                );\n                data[terms[index].id] = {\n                    id: terms[index].id,\n                    name: terms[index].name,\n                    parent: terms[index].parent,\n                    slug,\n                };\n            }\n            resolve(data);\n        });\n    });\n};\n\nconst getTermsAsOptions = (\n    taxonomy,\n    perPage,\n    termValue = 'name',\n    sortByLabel = true,\n) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n\n                let value = termObj.name;\n                if ('termid' === termValue) {\n                    value = termObj.id;\n                }\n\n                let label = termObj.name;\n                if (undefined !== termObj.parent && 0 !== termObj.parent) {\n                    label = ` -- ${label}`;\n                }\n\n                labelOptions.push({\n                    value,\n                    label,\n                });\n            });\n\n            if (false !== sortByLabel) {\n                labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n            }\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nconst getTermsAsTree = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const treeData = [];\n            // Convert data from object of objects to array of objects.\n            const convertedData = Object.keys(data).map(i => data[i]);\n            // Filter out the parent terms first\n            const parentTerms = convertedData.filter(e => 0 === e.parent);\n            parentTerms.forEach(e => {\n                // Get children by filtering for terms with parent matching this id in loop.\n                const c = convertedData.filter(f => f.parent === e.id);\n                const children = [];\n                // Construct children array.\n                c.forEach(cT => {\n                    children.push({\n                        name: cT.name,\n                        id: cT.id,\n                    });\n                });\n                // Finally, push the fully structured parent -> child relationship to the tree data.\n                treeData.push({\n                    name: e.name,\n                    id: e.id,\n                    children,\n                });\n            });\n\n            resolve(treeData);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsByLetter, getTermsAsOptions, getTermsAsTree };\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { select, dispatch } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\n\nimport { createBlock } from '@wordpress/blocks';\n\nconst BlockInserterButton = ({\n    label = '',\n    blockName,\n    clientId,\n    className,\n    attributes = {},\n}) => {\n    const handleClick = () => {\n        const currentBlock = select('core/block-editor').getBlock(clientId);\n        console.log('debug info...', currentBlock.innerBlocks.length);\n        const nextIndex = currentBlock.innerBlocks.length - 1;\n        const newBlock = createBlock(blockName, attributes);\n        dispatch('core/block-editor').insertBlock(\n            newBlock,\n            nextIndex,\n            clientId,\n        );\n    };\n    return (\n        <Button\n            label={__(label)}\n            tooltipPosition=\"bottom\"\n            onClick={handleClick}\n            className=\"block-editor-button-block-appender\"\n        >\n            {__(label)}\n        </Button>\n    );\n};\n\nexport default BlockInserterButton;\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { Flex, FlexItem, FlexBlock, ToolbarGroup } from '@wordpress/components';\nimport { BlockControls, RichText } from '@wordpress/block-editor';\n\n/**\n * External dependencies\n */\nimport { Icon } from 'semantic-ui-react';\n\n/**\n * Internal dependencies\n */\nimport { LinkToolbarButton } from 'shared';\n\nconst CaretHeadingLink = ({\n    url,\n    heading,\n    headingSize = 'h2',\n    setAttributes,\n}) => {\n    return (\n        <Fragment>\n            <BlockControls>\n                <ToolbarGroup>\n                    <LinkToolbarButton\n                        url={url}\n                        onChange={p => {\n                            setAttributes({ url: p.url });\n                        }}\n                    />\n                </ToolbarGroup>\n            </BlockControls>\n            <Flex style={{ paddingBottom: '1em' }}>\n                <FlexItem>\n                    <RichText\n                        tagName={headingSize}\n                        value={heading}\n                        onChange={h => setAttributes({ heading: h })}\n                        placeholder=\"Heading...\"\n                        formattingControls={[]}\n                        keepPlaceholderOnFocus\n                        className=\"sans-serif\"\n                    />\n                </FlexItem>\n                <FlexBlock>\n                    <Icon\n                        name=\"chevron right\"\n                        size=\"large\"\n                        style={{ marginLeft: '0.5em' }}\n                    />\n                </FlexBlock>\n            </Flex>\n        </Fragment>\n    );\n};\n\nexport default CaretHeadingLink;\n","import { __, sprintf } from '@wordpress/i18n';\nimport {\n    Dropdown,\n    Toolbar,\n    ToolbarButton,\n    ToolbarGroup,\n    Path,\n    SVG,\n} from '@wordpress/components';\nimport { DOWN } from '@wordpress/keycodes';\n\nconst HeadingLevelIcon = ({ level, isPressed = false }) => {\n    const levelToPath = {\n        1: 'M9 5h2v10H9v-4H5v4H3V5h2v4h4V5zm6.6 0c-.6.9-1.5 1.7-2.6 2v1h2v7h2V5h-1.4z',\n        2: 'M7 5h2v10H7v-4H3v4H1V5h2v4h4V5zm8 8c.5-.4.6-.6 1.1-1.1.4-.4.8-.8 1.2-1.3.3-.4.6-.8.9-1.3.2-.4.3-.8.3-1.3 0-.4-.1-.9-.3-1.3-.2-.4-.4-.7-.8-1-.3-.3-.7-.5-1.2-.6-.5-.2-1-.2-1.5-.2-.4 0-.7 0-1.1.1-.3.1-.7.2-1 .3-.3.1-.6.3-.9.5-.3.2-.6.4-.8.7l1.2 1.2c.3-.3.6-.5 1-.7.4-.2.7-.3 1.2-.3s.9.1 1.3.4c.3.3.5.7.5 1.1 0 .4-.1.8-.4 1.1-.3.5-.6.9-1 1.2-.4.4-1 .9-1.6 1.4-.6.5-1.4 1.1-2.2 1.6V15h8v-2H15z',\n        3: 'M12.1 12.2c.4.3.8.5 1.2.7.4.2.9.3 1.4.3.5 0 1-.1 1.4-.3.3-.1.5-.5.5-.8 0-.2 0-.4-.1-.6-.1-.2-.3-.3-.5-.4-.3-.1-.7-.2-1-.3-.5-.1-1-.1-1.5-.1V9.1c.7.1 1.5-.1 2.2-.4.4-.2.6-.5.6-.9 0-.3-.1-.6-.4-.8-.3-.2-.7-.3-1.1-.3-.4 0-.8.1-1.1.3-.4.2-.7.4-1.1.6l-1.2-1.4c.5-.4 1.1-.7 1.6-.9.5-.2 1.2-.3 1.8-.3.5 0 1 .1 1.6.2.4.1.8.3 1.2.5.3.2.6.5.8.8.2.3.3.7.3 1.1 0 .5-.2.9-.5 1.3-.4.4-.9.7-1.5.9v.1c.6.1 1.2.4 1.6.8.4.4.7.9.7 1.5 0 .4-.1.8-.3 1.2-.2.4-.5.7-.9.9-.4.3-.9.4-1.3.5-.5.1-1 .2-1.6.2-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1l1.1-1.4zM7 9H3V5H1v10h2v-4h4v4h2V5H7v4z',\n        4: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm10-2h-1v2h-2v-2h-5v-2l4-6h3v6h1v2zm-3-2V7l-2.8 4H16z',\n        5: 'M12.1 12.2c.4.3.7.5 1.1.7.4.2.9.3 1.3.3.5 0 1-.1 1.4-.4.4-.3.6-.7.6-1.1 0-.4-.2-.9-.6-1.1-.4-.3-.9-.4-1.4-.4H14c-.1 0-.3 0-.4.1l-.4.1-.5.2-1-.6.3-5h6.4v1.9h-4.3L14 8.8c.2-.1.5-.1.7-.2.2 0 .5-.1.7-.1.5 0 .9.1 1.4.2.4.1.8.3 1.1.6.3.2.6.6.8.9.2.4.3.9.3 1.4 0 .5-.1 1-.3 1.4-.2.4-.5.8-.9 1.1-.4.3-.8.5-1.3.7-.5.2-1 .3-1.5.3-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1-.1-.1 1-1.5 1-1.5zM9 15H7v-4H3v4H1V5h2v4h4V5h2v10z',\n        6: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm8.6-7.5c-.2-.2-.5-.4-.8-.5-.6-.2-1.3-.2-1.9 0-.3.1-.6.3-.8.5l-.6.9c-.2.5-.2.9-.2 1.4.4-.3.8-.6 1.2-.8.4-.2.8-.3 1.3-.3.4 0 .8 0 1.2.2.4.1.7.3 1 .6.3.3.5.6.7.9.2.4.3.8.3 1.3s-.1.9-.3 1.4c-.2.4-.5.7-.8 1-.4.3-.8.5-1.2.6-1 .3-2 .3-3 0-.5-.2-1-.5-1.4-.9-.4-.4-.8-.9-1-1.5-.2-.6-.3-1.3-.3-2.1s.1-1.6.4-2.3c.2-.6.6-1.2 1-1.6.4-.4.9-.7 1.4-.9.6-.3 1.1-.4 1.7-.4.7 0 1.4.1 2 .3.5.2 1 .5 1.4.8 0 .1-1.3 1.4-1.3 1.4zm-2.4 5.8c.2 0 .4 0 .6-.1.2 0 .4-.1.5-.2.1-.1.3-.3.4-.5.1-.2.1-.5.1-.7 0-.4-.1-.8-.4-1.1-.3-.2-.7-.3-1.1-.3-.3 0-.7.1-1 .2-.4.2-.7.4-1 .7 0 .3.1.7.3 1 .1.2.3.4.4.6.2.1.3.3.5.3.2.1.5.2.7.1z',\n    };\n    if (!levelToPath.hasOwnProperty(level)) {\n        return null;\n    }\n\n    return (\n        <SVG\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            isPressed={isPressed}\n        >\n            <Path d={levelToPath[level]} />\n        </SVG>\n    );\n};\n\nconst POPOVER_PROPS = {\n    className: 'block-library-heading-level-dropdown',\n    isAlternate: true,\n};\n\nconst HeadingLevelToolbar = ({ selectedLevel, levels = [2, 3], onChange }) => {\n    console.log('HeadingLevelToolbar', selectedLevel);\n    return (\n        <ToolbarGroup>\n            <Dropdown\n                popoverProps={POPOVER_PROPS}\n                renderToggle={({ onToggle, isOpen }) => {\n                    const openOnArrowDown = event => {\n                        if (!isOpen && event.keyCode === DOWN) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            onToggle();\n                        }\n                    };\n\n                    return (\n                        <ToolbarButton\n                            aria-expanded={isOpen}\n                            aria-haspopup=\"true\"\n                            icon={<HeadingLevelIcon level={selectedLevel} />}\n                            label={__('Change heading level')}\n                            onClick={onToggle}\n                            onKeyDown={openOnArrowDown}\n                            showTooltip\n                        />\n                    );\n                }}\n                renderContent={() => (\n                    <Toolbar\n                        className=\"block-library-heading-level-toolbar\"\n                        label={__('Change heading level')}\n                    >\n                        <ToolbarGroup\n                            isCollapsed={false}\n                            controls={levels.map(targetLevel => {\n                                const isActive = targetLevel === selectedLevel;\n                                return {\n                                    icon: (\n                                        <HeadingLevelIcon\n                                            level={targetLevel}\n                                            isPressed={isActive}\n                                        />\n                                    ),\n                                    title: sprintf(\n                                        // translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n                                        __('Heading %d'),\n                                        targetLevel,\n                                    ),\n                                    isActive,\n                                    onClick() {\n                                        onChange(targetLevel);\n                                    },\n                                };\n                            })}\n                        />\n                    </Toolbar>\n                )}\n            />\n        </ToolbarGroup>\n    );\n};\n\nexport default HeadingLevelToolbar;\n","import { __ } from '@wordpress/i18n';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport { ToolbarButton, Popover } from '@wordpress/components';\n\n/**\n * Link control in a toolbar button that defaults to searching for topic terms\n */\nconst LinkToolbarButton = ({\n    url,\n    onChange,\n    query = { type: 'term', subtype: 'topic' },\n}) => {\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    return (\n        <Fragment>\n            <ToolbarButton\n                aria-expanded={isLinkOpen}\n                aria-haspopup=\"true\"\n                label={__('Set Link')}\n                icon=\"admin-links\"\n                onClick={() => setIsLinkOpen(!isLinkOpen)}\n                showTooltip\n            />\n            {true === isLinkOpen && (\n                <Popover\n                    position=\"bottom center\"\n                    onClose={() => setIsLinkOpen(false)}\n                >\n                    <LinkControl\n                        className=\"wp-block-navigation-link__inline-link-input\"\n                        value={{ url }}\n                        showInitialSuggestions\n                        suggestionsQuery={query}\n                        onChange={p => onChange(p)}\n                        settings={[]}\n                    />\n                </Popover>\n            )}\n        </Fragment>\n    );\n};\n\nexport default LinkToolbarButton;\n","module.exports = React;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.data;"],"sourceRoot":""}