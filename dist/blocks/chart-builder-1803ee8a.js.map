{"version":3,"sources":["webpack:///external \"React\"","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"primitives\"]","webpack:///external [\"wp\",\"mediaUtils\"]","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external [\"wp\",\"htmlEntities\"]","webpack:///external [\"wp\",\"components\"]","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/hooks/use-debounce.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/hooks/use-window-size.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-search/search-item.jsx","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-search/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-picker/picked-item.jsx","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-picker/sortable-list.jsx","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-picker/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/content-placeholder/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/list-store/reducer.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/link-toolbar-button/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/caret-heading-link/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/block-inserter-button/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/components/heading-level-toolbar/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/functions/index.js","webpack:////Users/srubenstein/dev/local-wp/prc/app/public/wp-content/private/_shared/mailchimp/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external \"ReactDOM\"","webpack:///external \"lodash\"","webpack:///external \"regeneratorRuntime\"","webpack:///external [\"wp\",\"keycodes\"]","webpack:///./src/chart-builder/utils/colors.js","webpack:///./src/chart-builder/utils/helpers.js","webpack:///./src/chart-builder/edit/XAxisControls.js","webpack:///./src/chart-builder/edit/YAxisControls.js","webpack:///./src/chart-builder/edit/DataControls.js","webpack:///./src/chart-builder/edit/LineControls.js","webpack:///./src/chart-builder/edit/BarControls.js","webpack:///./src/chart-builder/edit/LabelControls.js","webpack:///./src/chart-builder/edit/LegendControls.js","webpack:///./src/chart-builder/edit/TooltipControls.js","webpack:///./src/chart-builder/edit/TextFieldControls.js","webpack:///./src/chart-builder/edit/NodeControls.js","webpack:///./src/chart-builder/edit/ChartControls.js","webpack:///./src/chart-builder/edit/index.js","webpack:///./src/chart-builder/save.js","webpack:///./src/chart-builder/index.js"],"names":["module","exports","window","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useWindowSize","ButtonStyled","styled","Button","SearchItem","suggestion","onClick","searchTerm","isSelected","id","contentTypes","showType","type","length","text","decodeEntities","title","className","style","borderRadius","boxSizing","paddingRight","highlight","aria-hidden","filterURLForDisplay","safeDecodeURI","url","NAMESPACE","searchCache","ContentSearch","onSelectItem","placeholder","label","mode","excludeItems","perPage","searchInput","setSearchInput","searchString","searchStringIsUrl","setSearchStringIsUrl","searchResults","setSearchResults","isLoading","setIsLoading","selectedItem","setSelectedItem","abortControllerRef","useRef","mounted","getPostByUrl","undefined","Promise","resolve","reject","apiFetch","path","method","data","then","post","console","log","catch","err","filterResults","results","filter","result","keep","every","item","hasSearchString","hasSearchResults","current","isUrl","match","keyword","abort","trim","AbortController","searchQuery","join","ID","post_title","post_type","permalink","subtype","error","code","signal","handleSearchStringChange","listCSS","css","onNavigate","orientation","display","flexGrow","onChange","autoComplete","position","right","marginTop","marginBottom","marginLeft","paddingLeft","listStyle","color","cursor","__","map","index","key","handleItemSelection","DragHandle","sortableHandle","marginRight","flexShrink","width","height","xmlns","viewBox","role","focusable","d","Wrapper","PickedItem","isOrderable","handleItemDelete","preparedItem","useSelect","select","getEntityRecord","hasFinishedResolution","getEntityRecordParameters","newItem","rendered","name","link","uuid","border","paddingTop","paddingBottom","aria-label","SortableList","SortableContainer","items","ChildComponent","ItemComponent","SortableElement","fontFamily","itemKey","sortIndex","totalItems","StyleWrapper","ContentPicker","onPickChange","ids","maxContentItems","singlePickedLabel","multiPickedLabel","uniqueContentItems","excludeCurrentPost","PickedItemChild","searchStyle","content","setContent","currentPostId","getCurrentPostId","useMemo","push","previousContent","uuidv4","Boolean","useDragHandle","deletedItem","onSortEnd","oldIndex","newIndex","newContent","arrayMove","ContentPlaceholder","blockProps","onSkip","loadingComponent","children","isColumnLayout","textAlign","pickedContent","isLink","LinkToolbarButton","query","isLinkOpen","setIsLinkOpen","aria-expanded","aria-haspopup","icon","showTooltip","onClose","showInitialSuggestions","suggestionsQuery","p","settings","CaretHeadingLink","heading","headingSize","disableIcon","setAttributes","tagName","h","formattingControls","keepPlaceholderOnFocus","Icon","size","BlockInserterButton","blockName","clientId","attributes","tooltipPosition","currentBlock","getBlock","innerBlocks","nextIndex","newBlock","createBlock","dispatch","insertBlock","HeadingLevelIcon","level","isPressed","levelToPath","1","2","3","4","5","6","hasOwnProperty","POPOVER_PROPS","isAlternate","HeadingLevelToolbar","selectedLevel","levels","popoverProps","renderToggle","onToggle","isOpen","onKeyDown","event","keyCode","DOWN","preventDefault","stopPropagation","renderContent","isCollapsed","controls","targetLevel","isActive","sprintf","ifMatchSetAttribute","needle","haystack","attrKey","attrValue","getTerms","taxonomy","terms","slug","replace","toLowerCase","parent","getTermsAsOptions","termValue","sortByLabel","labelOptions","Object","keys","forEach","termObj","sort","a","b","mailChimpInterests","regeneratorRuntime","colors","general","colorNames","stringToArrayOfNums","str","split","Number","num","isNaN","getDomain","min","max","scale","axis","Date","parseFloat","formatNum","output","parseInt","XAxisControls","chartType","xAxisActive","xScale","xScaleFormat","xMinDomain","xMaxDomain","xDomainPadding","xTickNum","xTickExact","xLabel","xAxisStroke","xGridStroke","help","checked","val","options","disabled","disableUnits","disabledUnits","onChangeComplete","hex","YAxisControls","yAxisActive","yLabel","yMinDomain","yMaxDomain","yDomainPadding","yTickNum","yTickExact","showYMinDomainLabel","yAxisStroke","yGridStroke","DataControls","sortOrder","initialOpen","LineControls","lineInterpolation","lineStrokeWidth","lineNodes","nodeSize","nodeStroke","areaFillOpacity","step","BarControls","barWidth","barGroupOffset","LabelControls","chartOrientation","labelsActive","labelPositionDY","labelPositionDX","labelToFixedDecimal","barLabelPosition","barLabelCutoff","barLabelCutoffMobile","LegendControls","legendActive","legendOrientation","legendTitle","legendOffsetX","legendOffsetY","legendMarkerStyle","legendBorderStroke","legendFill","TooltipControls","tooltipFormat","tooltipActive","TextFieldControls","metaTextActive","metaTitle","metaSubtitle","metaNote","metaSource","metaTag","NodeControls","nodeFill","editPost","ChartControls","imageLoading","setImageLoading","svgLoading","setSVGLoading","colorValue","customColors","pngUrl","pngId","withInputField","href","isSecondary","isBusy","svg","document","querySelector","setAttribute","blob","Blob","outerHTML","URL","createObjectURL","downloadLink","createElement","download","body","appendChild","click","removeChild","blockEl","resizerEl","classList","remove","html2canvas","canvas","toBlob","uploadMedia","filesList","File","onFileChange","fileObj","featured_media","onError","upload","now","add","edit","toggleSelection","isConvertedChart","legacyAttrs","legacyMeta","checkEmptyStr","legacyAttr","attr","legacyConfig","verticalBarConfig","horizontalBarConfig","lineConfig","scatterConfig","getLegacyConfig","layout","labels","legend","bar","padding","top","bottom","left","formatLegacyAttrs","getEditedPostAttribute","setChartTypeByClassName","ticks","chartData","renderedChart","xTicks","yTicks","config","masterConfig","xAxis","active","dateFormat","domain","tickCount","tickValues","tick","domainPadding","stroke","grid","yAxis","showZero","dataRender","yScale","xFormat","yFormat","sortKey","tooltip","format","animate","duration","line","interpolation","showPoints","showArea","strokeWidth","pointSize","pointStrokeWidth","scatter","nodes","fill","offsetX","offsetY","markerStyle","borderStroke","barToSpaceRatio","groupOffset","fontWeight","fontSize","pieLabelRadius","labelBarPosition","labelCutoff","labelCutoffMobile","metadata","subtitle","note","source","tag","parentBlockId","getBlockParentsByBlockName","tableData","tableBlock","getBlocks","find","block","tableHeaders","head","cells","c","tableJson","seriesData","scaleData","getTime","i","series","row","x","y","category","formattedData","tableCategories","rest","categories","horizontalRules","minHeight","minWidth","enable","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","direction","elt","delta","onResizeStart","parentBlock","save","description","keywords","example","registerBlockType"],"mappings":"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,UACA,UACA,UACA,WAEF,kBAAmB,CACjB,UACA,UACA,UACA,UACA,UACA,WAEF,oBAAqB,CACnB,UACA,UACA,UACA,UACA,UACA,WAEF,sBAAuB,CACrB,UACA,UACA,UACA,UACA,UACA,WAEF,yBAA0B,CACxB,UACA,UACA,UACA,UACA,UACA,WAEF,oBAAqB,CACnB,UACA,UACA,UACA,UACA,UACA,WAEF,oBAAqB,CACnB,UACA,UACA,UACA,UACA,UACA,WAEF,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,WAEF,iBAAkB,CAChB,UACA,UACA,UACA,UACA,UACA,WAEF,kBAAmB,CACjB,UACA,UACA,UACA,UACA,UACA,WAEF,wBAAyB,CACvB,UACA,UACA,UACA,UACA,UACA,WAEF,uBAAwB,CACtB,UACA,UACA,UACA,UACA,UACA,WAEF,kBAAmB,CACjB,UACA,UACA,UACA,UACA,UACA,WAEF,eAAgB,CACd,UACA,UACA,UACA,UACA,UACA,YAIEC,EAAa,CACjB,CAAE9P,MAAO,UAAWzC,MAAO,WAC3B,CAAEyC,MAAO,gBAAiBzC,MAAO,iBACjC,CAAEyC,MAAO,cAAezC,MAAO,eAC/B,CAAEyC,MAAO,gBAAiBzC,MAAO,iBACjC,CACEyC,MAAO,qBACPzC,MAAO,sBAET,CAAEyC,MAAO,kBAAmBzC,MAAO,mBACnC,CAAEyC,MAAO,gBAAiBzC,MAAO,iBACjC,CAAEyC,MAAO,gBAAiBzC,MAAO,iBACjC,CACEyC,MAAO,oBACPzC,MAAO,qBAET,CAAEyC,MAAO,kBAAmBzC,MAAO,mBACnC,CACEyC,MAAO,oBACPzC,MAAO,qBAET,CACEyC,MAAO,yBACPzC,MAAO,0BAET,CACEyC,MAAO,sBACPzC,MAAO,uBAET,CACEyC,MAAO,oBACPzC,MAAO,qBAET,CACEyC,MAAO,oBACPzC,MAAO,qBAET,CAAEyC,MAAO,gBAAiBzC,MAAO,iBACjC,CAAEyC,MAAO,iBAAkBzC,MAAO,kBAClC,CAAEyC,MAAO,kBAAmBzC,MAAO,mBACnC,CACEyC,MAAO,wBACPzC,MAAO,yBAET,CACEyC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","file":"blocks/chart-builder-1803ee8a.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","(function() { module.exports = window[\"wp\"][\"mediaUtils\"]; }());","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","(function() { module.exports = window[\"wp\"][\"htmlEntities\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","/**\n * WordPress Dependencies\n */\nimport { useState, useEffect, useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nfunction useDebounce(value, delay) {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(\n        () => {\n            // Update debounced value after delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            // Cancel the timeout if value changes (also on delay change or unmount)\n            // This is how we prevent debounced value from updating if value is changed ...\n            // .. within the delay period. Timeout gets cleared and restarted.\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay], // Only re-call effect if value or delay changes\n    );\n    return debouncedValue;\n}\n\nexport default useDebounce;","import { useEffect, useState } from '@wordpress/element';\n\n// adapted from:  https://usehooks.com/useWindowSize/\n// usage:   const {width, height} = useWindowSize();\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener('resize', handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener('resize', handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","/**\n * External Dependencies\n */\nimport styled from '@emotion/styled';\n\n/** \n * WordPress Dependencies\n */\nimport { safeDecodeURI, filterURLForDisplay } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { Button, TextHighlight, Tooltip } from '@wordpress/components';\n\nconst ButtonStyled = styled(Button)`\n\t&:hover {\n\t\t/* Add opacity background to support future color changes */\n\t\t/* Reduce background from #ddd to 0.05 for text contrast  */\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\n\t\t.block-editor-link-control__search-item-type {\n\t\t\tcolor: black;\n\t\t}\n\t}\n\n\t.block-editor-link-control__search-item-type {\n\t\tbackground-color: rgba(0, 0, 0, 0.05);\n\t}\n`;\n\n/**\n * SearchItem\n *\n * @param {Object} props react props\n * @param props.suggestion\n * @param props.onClick\n * @param props.searchTerm\n * @param props.isSelected\n * @param props.id\n * @return {*} React JSX\n */\nconst SearchItem = ({ suggestion, onClick, searchTerm, isSelected, id, contentTypes }) => {\n\tconst showType = suggestion.type && contentTypes.length > 1;\n\n\treturn (\n\t\t<Tooltip text={decodeEntities(suggestion.title)}>\n\t\t\t<ButtonStyled\n\t\t\t\tid={id}\n\t\t\t\tonClick={onClick}\n\t\t\t\tclassName={`block-editor-link-control__search-item is-entity ${\n\t\t\t\t\tisSelected && 'is-selected'\n\t\t\t\t}`}\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: '0',\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span className=\"block-editor-link-control__search-item-header\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"block-editor-link-control__search-item-title\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpaddingRight: !showType ? 0 : null,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextHighlight text={decodeEntities(suggestion.title)} highlight={searchTerm} />\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\taria-hidden\n\t\t\t\t\t\tclassName=\"block-editor-link-control__search-item-info\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpaddingRight: !showType ? 0 : null,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{filterURLForDisplay(safeDecodeURI(suggestion.url)) || ''}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t{showType && (\n\t\t\t\t\t<span className=\"block-editor-link-control__search-item-type\">\n\t\t\t\t\t\t{/* Rename 'post_tag' to 'tag'. Ideally, the API would return the localised CPT or taxonomy label. */}\n\t\t\t\t\t\t{suggestion.type === 'post_tag' ? 'tag' : suggestion.type}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</ButtonStyled>\n\t\t</Tooltip>\n\t);\n};\n\nexport default SearchItem;","/**\n * External Dependencies\n */\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/react';\nimport { useDebounce } from '../../hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { SearchControl, TextControl, Spinner, NavigableMenu, KeyboardShortcuts } from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\nimport { Fragment, useState, useRef, useEffect } from '@wordpress/element'; // eslint-disable-line\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport SearchItem from './search-item';\n\nconst NAMESPACE = 'prc-content-search';\n\nconst searchCache = {};\n\nconst ContentSearch = ({ onSelectItem, placeholder, label, style = 'search', contentTypes, mode, excludeItems, perPage }) => {\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst searchString = useDebounce(searchInput, 500);\n\t// Determine if searchString is a url\n\tconst [searchStringIsUrl, setSearchStringIsUrl] = useState(false);\n\n\tconst [searchResults, setSearchResults] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [selectedItem, setSelectedItem] = useState(null);\n\tconst abortControllerRef = useRef();\n\n\tconst mounted = useRef(true);\n\n\t/**\n\t * handleSelection\n\t *\n\t * update the selected item in state to either the selected item or null if the\n\t * selected item does not have a valid id\n\t *\n\t * @param {*} item\n\t */\n\tconst handleOnNavigate = (item) => {\n\t\tif (item === 0) {\n\t\t\tsetSelectedItem(null);\n\t\t}\n\n\t\tsetSelectedItem(item);\n\t}\n\n\tconst getPostByUrl = (url) => {\n        if (undefined === url) {\n            return false;\n        }\n        return new Promise((resolve, reject) => {\n            apiFetch({\n                path: '/prc-api/v2/utils/get-post-by-url',\n                method: 'POST',\n                data: { url },\n            })\n                .then((post) => {\n                    console.log('getPostByUrl', post);\n                    resolve(post);\n                })\n                .catch((err) => reject(err));\n        });\n    };\n\n\t/**\n\t * handleItemSelection\n\t *\n\t * reset the search input & item container\n\t * trigger the onSelectItem callback passed in via props\n\t *\n\t * @param {*} item\n\t */\n\tconst handleItemSelection = (item) => {\n\t\tsetSearchResults([]);\n\t\tsetSearchInput('');\n\t\tonSelectItem(item);\n\t}\n\n\tconst filterResults = (results) => {\n\t\treturn results.filter((result) => {\n\t\t\tlet keep = true;\n\n\t\t\tif (excludeItems.length) {\n\t\t\t\tkeep = excludeItems.every((item) => item.id !== result.id);\n\t\t\t}\n\n\t\t\treturn keep;\n\t\t});\n\t}\n\n\tconst hasSearchString = !!searchString.length;\n\tconst hasSearchResults = !!searchResults.length;\n\n\t/**\n\t * handleSearchStringChange\n\t *\n\t * Using the keyword and the list of tags that are linked to the parent block\n\t * search for posts/terms that match and return them to the autocomplete component.\n\t *\n\t * @param {string} keyword search query string\n\t */\n\tconst handleSearchStringChange = (keyword, isUrl = false) => {\n\t\tif (abortControllerRef.current) {\n\t\t\tabortControllerRef.current.abort();\n\t\t}\n\n\t\tif (keyword.trim() === '') {\n\t\t\tsetIsLoading(false);\n\t\t\tsetSearchResults([]);\n\t\t\tabortControllerRef.current = null;\n\t\t\treturn;\n\t\t}\n\n\t\tabortControllerRef.current = new AbortController();\n\n\t\tsetIsLoading(true);\n\n\t\tconst searchQuery = `wp/v2/search/?search=${keyword}&subtype=${contentTypes.join(\n\t\t\t',',\n\t\t)}&type=${mode}&_embed&per_page=${perPage}`;\n\n\t\tif (searchCache[searchQuery]) {\n\t\t\tabortControllerRef.current = null;\n\n\t\t\tsetSearchResults(filterResults(searchCache[searchQuery]));\n\t\t\tsetIsLoading(false);\n\t\t} else if (isUrl) {\n\t\t\tconsole.log('isUrl', keyword);\n\t\t\tgetPostByUrl(keyword)\n\t\t\t\t.then((post) => {\n\t\t\t\t\tif (mounted.current) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tID,\n\t\t\t\t\t\t\tpost_title,\n\t\t\t\t\t\t\tpost_type,\n\t\t\t\t\t\t\tpermalink,\n\t\t\t\t\t\t} = post;\n\t\t\t\t\t\tabortControllerRef.current = null;\n\n\t\t\t\t\t\tconst result = [{\n\t\t\t\t\t\t\tid: ID,\n\t\t\t\t\t\t\tsubtype: post_type,\n\t\t\t\t\t\t\ttitle: post_title,\n\t\t\t\t\t\t\ttype: \"post\",\n\t\t\t\t\t\t\turl: permalink,\n\t\t\t\t\t\t}];\n\n\t\t\t\t\t\tconsole.log(\"this is where we should do our stuff...\", result, post);\n\n\t\t\t\t\t\tsearchCache[searchQuery] = result;\n\n\t\t\t\t\t\tsetSearchResults(filterResults(result));\n\n\t\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t).catch((error, code) => {\n\t\t\t\tconsole.log(\"Hey this is a url error, we didnt find a matching post... now what?\", keyword);\n\t\t\t\t// Stop spinning.\n\t\t\t\tsetIsLoading(false);\n\t\t\t});\n\t\t} else {\n\t\t\tapiFetch({\n\t\t\t\tpath: searchQuery,\n\t\t\t\tsignal: abortControllerRef.current.signal\n\t\t\t}).then((results) => {\n\t\t\t\tif (mounted.current === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(\"search Results\", results);\n\n\t\t\t\tabortControllerRef.current = null;\n\n\t\t\t\tsearchCache[searchQuery] = results;\n\n\t\t\t\tsetSearchResults(filterResults(results));\n\n\t\t\t\tsetIsLoading(false);\n\t\t\t}).catch((error, code) => {\n\t\t\t\t// fetch_error means the request was aborted\n\t\t\t\tif (error.code !== 'fetch_error') {\n\t\t\t\t\tsetSearchResults([]);\n\t\t\t\t\tabortControllerRef.current = null;\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tmounted.current = false;\n\t\t};\n\t}, []);\n\n\tuseEffect(()=>{\n\t\tif ( '' !== searchString ) {\n\t\t\tconst isUrl = searchString.match(/^(http|https):\\/\\//);\n\t\t\tsetSearchStringIsUrl(isUrl);\n\t\t\thandleSearchStringChange(searchString, isUrl);\n\t\t}\n\t}, [searchString]);\n\n\tconst listCSS = css`\n\t\t/* stylelint-disable */\n\t\tmax-height: 350px;\n\t\toverflow-y: auto;\n\t`;\n\n\treturn (\n\t\t<NavigableMenu onNavigate={handleOnNavigate} orientation=\"vertical\">\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex'\n\t\t\t}}>\n\t\t\t\t<div style={{\n\t\t\t\t\tflexGrow: '1',\n\t\t\t\t}}>\n\t\t\t\t\t{ 'minimal' === style && (\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\t\tonChange={(keyword)=> setSearchInput(keyword)}\n\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{ 'search' === style && (\n\t\t\t\t\t\t<SearchControl\n\t\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\t\tonChange={(keyword)=> setSearchInput(keyword)}\n\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{isLoading && (\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tright: 'minimal' === style ? '8px' : '50px',\n\t\t\t\t\t\tmarginTop: 'minimal' === style ? '27px' : '10px',\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{hasSearchString ? (\n\t\t\t\t<ul\n\t\t\t\t\tclassName={`${NAMESPACE}-list`}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginTop: '0',\n\t\t\t\t\t\tmarginBottom: '0',\n\t\t\t\t\t\tmarginLeft: '0',\n\t\t\t\t\t\tpaddingLeft: '0',\n\t\t\t\t\t\tlistStyle: 'none',\n\t\t\t\t\t}}\n\t\t\t\t\tcss={listCSS}\n\t\t\t\t>\n\t\t\t\t\t{!isLoading && !hasSearchResults && false === searchStringIsUrl && (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`${NAMESPACE}-list-item components-button`}\n\t\t\t\t\t\t\tstyle={{ color: 'inherit', cursor: 'default', paddingLeft: '3px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('Nothing found.', 'prc-block-components')}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isLoading && !hasSearchResults && searchStringIsUrl && (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tclassName={`${NAMESPACE}-list-item components-button`}\n\t\t\t\t\t\t\tstyle={{ color: 'inherit', cursor: 'default', paddingLeft: '3px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('Press enter to change url.', 'prc-block-components')}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isLoading && searchResults.map((item, index) => {\n\t\t\t\t\t\tif (!item.title.length) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tclassName={`${NAMESPACE}-list-item`}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: '0',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<SearchItem\n\t\t\t\t\t\t\t\t\tonClick={() => handleItemSelection(item)}\n\t\t\t\t\t\t\t\t\tsearchTerm={searchString}\n\t\t\t\t\t\t\t\t\tsuggestion={item}\n\t\t\t\t\t\t\t\t\tcontentTypes={contentTypes}\n\t\t\t\t\t\t\t\t\tisSelected={selectedItem === index + 1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t) : null}\n\t\t</NavigableMenu>\n\t);\n};\n\nexport { ContentSearch };\n","/**\n * External Dependencies\n */\nimport styled from '@emotion/styled';\nimport { sortableHandle } from 'react-sortable-hoc';\n\n/**\n * WordPress Dependencies\n */\nimport { safeDecodeURI, filterURLForDisplay } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * SVG Drag Handle\n */\nconst DragHandle = sortableHandle(() => (\n\t<svg\n\t\tstyle={{ marginRight: '5px', cursor: 'grab', flexShrink: 0 }}\n\t\twidth=\"18\"\n\t\theight=\"18\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 18 18\"\n\t\trole=\"img\"\n\t\taria-hidden=\"true\"\n\t\tfocusable=\"false\"\n\t>\n\t\t<path d=\"M5 4h2V2H5v2zm6-2v2h2V2h-2zm-6 8h2V8H5v2zm6 0h2V8h-2v2zm-6 6h2v-2H5v2zm6 0h2v-2h-2v2z\" />\n\t</svg>\n));\n\nconst Wrapper = styled('div')`\n\tbutton {\n\t\tdisplay: block;\n\t\tpadding: 2px 8px 6px 8px;\n\t\tmargin-left: auto;\n\t\tfont-size: 2em;\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tbackground-color: transparent;\n\n\t\t&:hover {\n\t\t\tbackground-color: #ccc;\n\t\t}\n\t}\n`;\n\n\n/**\n * PickedItem\n *\n * @param {Object} props react props\n * @return {*} React JSX\n */\nconst PickedItem = ({ item, isOrderable = false, handleItemDelete, mode }) => {\n\tconst type = mode === 'post' ? 'postType' : 'taxonomy';\n\n\t// This will return undefined while the item data is being fetched. If the item comes back\n\t// empty, it will return null, which is handled in the effect below.\n\tconst preparedItem = useSelect(\n\t\t(select) => {\n\t\t\tconst { getEntityRecord, hasFinishedResolution } = select('core');\n\n\t\t\tconst getEntityRecordParameters = [type, item.type, item.id];\n\t\t\tconst result = getEntityRecord(...getEntityRecordParameters);\n\n\t\t\tif (result) {\n\t\t\t\tconsole.log(\"Has Item\", result);\n\t\t\t\tconst newItem = {\n\t\t\t\t\ttitle: mode === 'post' ? result.title.rendered : result.name,\n\t\t\t\t\turl: result.link,\n\t\t\t\t\tid: result.id,\n\t\t\t\t};\n\n\t\t\t\tif (item.uuid) {\n\t\t\t\t\tnewItem.uuid = item.uuid;\n\t\t\t\t}\n\n\t\t\t\treturn newItem;\n\t\t\t}\n\n\t\t\tif (hasFinishedResolution('getEntityRecord', getEntityRecordParameters)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t},\n\t\t[item.id, type],\n\t);\n\n\t// If `getEntityRecord` did not return an item, pass it to the delete callback.\n\tuseEffect(() => {\n\t\tif (preparedItem === null) {\n\t\t\thandleItemDelete(item);\n\t\t}\n\t}, [item, handleItemDelete, preparedItem]);\n\n\treturn preparedItem ? (\n\t\t<Wrapper\n\t\t\tstyle={{\n\t\t\t\tborder: '2px dashed #ddd',\n\t\t\t\tpaddingTop: '10px',\n\t\t\t\tpaddingBottom: '10px',\n\t\t\t\tpaddingLeft: isOrderable ? '3px' : '8px',\n\t\t\t}}\n\t\t\tclassName=\"block-editor-link-control__search-item is-entity\"\n\t\t>\n\t\t\t{isOrderable ? <DragHandle /> : ''}\n\t\t\t<span className=\"block-editor-link-control__search-item-header\">\n\t\t\t\t<span className=\"block-editor-link-control__search-item-title\">\n\t\t\t\t\t{decodeEntities(preparedItem.title)}\n\t\t\t\t</span>\n\t\t\t\t<span aria-hidden className=\"block-editor-link-control__search-item-info\">\n\t\t\t\t\t{filterURLForDisplay(safeDecodeURI(preparedItem.url)) || ''}\n\t\t\t\t</span>\n\t\t\t</span>\n\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\thandleItemDelete(preparedItem);\n\t\t\t\t}}\n\t\t\t\taria-label={__('Delete item', '10up-block-components')}\n\t\t\t>\n\t\t\t\t&times;\n\t\t\t</button>\n\t\t</Wrapper>\n\t) : (\n\t\t<div />\n\t);\n};\n\nexport default PickedItem;","/**\n * External Dependencies\n */\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\n/**\n * Internal Dependencies\n */\nimport PickedItem from './picked-item';\n\nconst SortableList = SortableContainer(({ items, isOrderable, handleItemDelete, mode, ChildComponent = false }) => {\n\tconst ItemComponent = false !== ChildComponent ? (isOrderable ? SortableElement(ChildComponent) : ChildComponent) : isOrderable ? SortableElement(PickedItem) : PickedItem;\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tfontFamily:\n\t\t\t\t\t'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif',\n\t\t\t}}\n\t\t>\n\t\t\t{items.map((item, index) => {\n\t\t\t\tconst itemKey = item.uuid ? item.uuid : item.id;\n\t\t\t\treturn <ItemComponent\n\t\t\t\t\tisOrderable={isOrderable && items.length > 1 ? isOrderable : false}\n\t\t\t\t\tkey={`item-${itemKey}`}\n\t\t\t\t\tindex={index}\n\t\t\t\t\thandleItemDelete={handleItemDelete}\n\t\t\t\t\tsortIndex={index}\n\t\t\t\t\titem={item}\n\t\t\t\t\tmode={mode}\n\t\t\t\t\ttotalItems={items.length}\n\t\t\t\t/>\n\t\t\t})}\n\t\t</div>\n\t);\n});\n\nexport default SortableList;","/**\n * External Dependencies\n */\nimport { v4 as uuidv4 } from 'uuid';\nimport arrayMove from 'array-move';\nimport styled from '@emotion/styled';\n\n/**\n * WordPress Dependencies\n */\nimport { select } from '@wordpress/data';\nimport { useState, useEffect, useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button, ButtonGroup, Modal } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { ContentSearch } from '../content-search';\nimport SortableList from './sortable-list';\n\nconst NAMESPACE = 'prc-content-picker';\n\n/**\n * Unfortunately, we had to use !important because on PickedItem we couldn't @emotion/styled css\n * as it was breaking sortability from react-sortable-hoc\n */\nconst StyleWrapper = styled('div')`\n\t& .block-editor-link-control__search-item {\n\t\tborder: none !important;\n\t\tcursor: default;\n\n\t\t&:hover {\n\t\t\tbackground: transparent;\n\t\t}\n\t}\n`;\n\n/**\n * Content Picker\n */\nconst ContentPicker = ({\n\tlabel,\n\tplaceholder,\n\tmode = 'post',\n\tcontentTypes = ['post', 'page'],\n\tonPickChange = (ids) => {\n        console.log('Content picker list change', ids); // eslint-disable-line no-console\n    },\n\tmaxContentItems = 1,\n\tisOrderable = false,\n\tsinglePickedLabel = __('You have selected the following item:', 'prc-block-components'),\n\tmultiPickedLabel = __('You have selected the following items:', 'prc-block-components'),\n\tvalue = [],\n\tuniqueContentItems = true,\n\texcludeCurrentPost = true,\n\tperPage = 50,\n\tPickedItemChild = false,\n\tsearchStyle = 'search',\n}) => {\n\tconst [content, setContent] = useState(value);\n\n\tconst currentPostId = select('core/editor')?.getCurrentPostId();\n\n\tuseEffect(()=> {\n\t\tconsole.log(\"Init content state\", value);\n\t}, []);\n\n\t// Run onPickChange callback when content changes.\n\tuseEffect(() => {\n\t\tif ( content !== value && content.length !== 0 ) {\n\t\t\tconsole.log(\"useEffect onPickChange->\", content); // eslint-disable-line no-console\n\t\t\tonPickChange(content);\n\t\t}\n\t}, [content]);\n\n\tconst handleSelect = (item, isUrl = false) => {\n\t\tconsole.log(\"handleSelect->\", item, isUrl); // eslint-disable-line no-console\n\t\tif ( true === isUrl ) {\n\t\t\tsetContent((previousContent) => [\n\t\t\t\t{\n\t\t\t\t\tuuid: uuidv4(),\n\t\t\t\t\ttype: 'subtype' in item ? item.subtype : item.type,\n\t\t\t\t\turl: item.url,\n\t\t\t\t},\n\t\t\t\t...previousContent,\n\t\t\t]);\n\t\t} else {\n\t\t\tsetContent((previousContent) => [\n\t\t\t\t{\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tuuid: uuidv4(),\n\t\t\t\t\ttype: 'subtype' in item ? item.subtype : item.type,\n\t\t\t\t\turl: item.url,\n\t\t\t\t},\n\t\t\t\t...previousContent,\n\t\t\t]);\n\t\t}\n\t};\n\n\tconst onDeleteItem = (deletedItem) => {\n\t\tsetContent((previousContent) => {\n\t\t\treturn previousContent.filter(({ id, uuid }) => {\n\t\t\t\tif (deletedItem.uuid) {\n\t\t\t\t\treturn uuid !== deletedItem.uuid;\n\t\t\t\t} else {\n\t\t\t\t\treturn id !== deletedItem.id;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n\n\tconst excludeItems = useMemo(() => {\n\t\tconst items = uniqueContentItems ? [...content] : [];\n\n\t\tif (excludeCurrentPost && currentPostId) {\n\t\t\titems.push({\n\t\t\t\tid: currentPostId\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}, [content, currentPostId, excludeCurrentPost, uniqueContentItems]);\n\n\treturn (\n\t\t<div className={`${NAMESPACE}`}>\n\t\t\t{(!content.length || (content.length && content.length < maxContentItems)) && (\n\t\t\t\t<ContentSearch\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\texcludeItems={excludeItems}\n\t\t\t\t\tonSelectItem={handleSelect}\n\t\t\t\t\tcontentTypes={contentTypes}\n\t\t\t\t\tmode={mode}\n\t\t\t\t\tperPage={perPage}\n\t\t\t\t\tstyle={searchStyle}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{Boolean(content?.length) > 0 && (\n\t\t\t\t<StyleWrapper>\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: '15px',\n\t\t\t\t\t\t\tmarginBottom: '2px',\n\t\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{content.length > 1 ? multiPickedLabel : singlePickedLabel}\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<SortableList\n\t\t\t\t\t\titems={content}\n\t\t\t\t\t\tuseDragHandle\n\t\t\t\t\t\thandleItemDelete={onDeleteItem}\n\t\t\t\t\t\tisOrderable={isOrderable}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\tonSortEnd={({ oldIndex, newIndex }) => {\n\t\t\t\t\t\t\tconst newContent = [...arrayMove(content, oldIndex, newIndex)];\n\t\t\t\t\t\t\tconsole.log(\"newContent?\", newContent);\n\t\t\t\t\t\t\tsetContent(newContent);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tChildComponent={PickedItemChild}\n\t\t\t\t\t/>\n\t\t\t\t</StyleWrapper>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport { ContentPicker };\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    Button,\n    Placeholder as WPComPlaceholder,\n    Spinner,\n} from '@wordpress/components';\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\n import { ContentPicker } from '../content-picker';\n\nconst ContentPlaceholder = ({\n    blockProps,\n    onChange,\n    onSkip,\n    mode = 'post',\n    contentTypes = [ 'stub' ],\n    label = __('Search for a post', 'prc-block-components'),\n    placeholder = __('Search for a post or pate in a url...', 'prc-block-components'),\n    value = [],\n    loadingComponent = false,\n    children,\n}) => {\n    return (\n        <div {...blockProps}>\n            <WPComPlaceholder\n                label={`${label}:`}\n                isColumnLayout\n            >\n                {false !== loadingComponent && (\n                    <div style={{\n                        textAlign: 'center',\n                    }}>\n                        <Spinner />\n                        <p className=\"sans-serif\">\n                            Loading object...\n                        </p>\n                    </div>\n                )}\n                {false === loadingComponent && (\n                    <Fragment>\n                        {children}\n                        <ContentPicker\n                            onPickChange={ (pickedContent) => {\n                                console.log('Step1:', pickedContent);\n                                onChange(pickedContent);\n                            } }\n                            mode={mode}\n                            label={`${label} or enter a url:`}\n                            placeholder={placeholder}\n                            contentTypes={contentTypes}\n                            value={value}\n                        />\n                        <Button\n                            isLink\n                            onClick={()=>{\n                                onSkip();\n                            }}\n                            text={__('Skip')}\n                            style={{\n                                paddingLeft: '9px'\n                            }}\n                        />\n                    </Fragment>\n                )}\n            </WPComPlaceholder>\n        </div>\n    );\n}\n\nexport { ContentPlaceholder };","const DEFAULT_STATE = [];\n\nconst reducer = (state = DEFAULT_STATE, action) => {\n    // Cloned is used in reorder, setItem, and setItemProp:\n    const cloned = [...state];\n    // eslint-disable-next-line default-case\n    switch (action.type) {\n        case 'SEED':\n            return [...action.items];\n        case 'APPEND':\n            return [...state, ...action.items];\n        case 'PREPEND':\n            return [...action.items, ...state];\n        case 'INSERT':\n            return [\n                ...state.slice(0, action.index),\n                ...action.items,\n                ...state.slice(action.index),\n            ];\n        case 'APPLY':\n            return state.map((item, index) => action.fn(item, index));\n        case 'REMOVE':\n            return state.filter((_, index) => !action.indexes.includes(index));\n        case 'REORDER':\n            // eslint-disable-next-line no-case-declarations\n            const item = state[action.from];\n\n            cloned.splice(action.from, 1);\n            cloned.splice(action.to, 0, item);\n\n            return cloned;\n        case 'SET_ITEM':\n            cloned[action.index] = action.item;\n            return cloned;\n        case 'SET_ITEM_PROP':\n            cloned[action.index] = {\n                ...cloned[action.index],\n                [action.prop]: action.value,\n            };\n            return cloned;\n    }\n\n    return state;\n};\n\nexport default reducer;\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport { ToolbarButton, Popover } from '@wordpress/components';\n\n/**\n * Link control in a toolbar button that defaults to searching for topic terms\n */\nconst LinkToolbarButton = ({\n    url,\n    onChange,\n    query = { type: 'term', subtype: 'topic' },\n}) => {\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    return (\n        <Fragment>\n            <ToolbarButton\n                aria-expanded={isLinkOpen}\n                aria-haspopup=\"true\"\n                label={__('Set Link')}\n                icon=\"admin-links\"\n                onClick={() => setIsLinkOpen(!isLinkOpen)}\n                showTooltip\n            />\n            {true === isLinkOpen && (\n                <Popover\n                    position=\"bottom center\"\n                    onClose={() => setIsLinkOpen(false)}\n                >\n                    <LinkControl\n                        className=\"wp-block-navigation-link__inline-link-input\"\n                        value={{ url }}\n                        showInitialSuggestions\n                        suggestionsQuery={query}\n                        onChange={p => onChange(p)}\n                        settings={[]}\n                    />\n                </Popover>\n            )}\n        </Fragment>\n    );\n};\n\nexport default LinkToolbarButton;\n","/**\n * External Dependencies\n */\nimport { Icon } from 'semantic-ui-react';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { Flex, FlexItem, FlexBlock, ToolbarGroup } from '@wordpress/components';\nimport { BlockControls, RichText } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport LinkToolbarButton from '../link-toolbar-button';\n\nconst CaretHeadingLink = ({\n\turl,\n\theading,\n\theadingSize = 'h2',\n\tdisableIcon = false,\n\tsetAttributes,\n}) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<LinkToolbarButton\n\t\t\t\t\t\turl={url}\n\t\t\t\t\t\tonChange={p => {\n\t\t\t\t\t\t\tsetAttributes({ url: p.url });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t\t<Flex style={{ paddingBottom: '1em' }}>\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName={headingSize}\n\t\t\t\t\t\tvalue={heading}\n\t\t\t\t\t\tonChange={h => setAttributes({ heading: h })}\n\t\t\t\t\t\tplaceholder=\"Heading...\"\n\t\t\t\t\t\tformattingControls={[]}\n\t\t\t\t\t\tkeepPlaceholderOnFocus\n\t\t\t\t\t\tclassName=\"sans-serif\"\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t{true !== disableIcon && (\n\t\t\t\t\t<FlexBlock>\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tname=\"chevron right\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tstyle={{ marginLeft: '0.5em' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexBlock>\n\t\t\t\t)}\n\t\t\t</Flex>\n\t\t</Fragment>\n\t);\n};\n\nexport default CaretHeadingLink;\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { select, dispatch } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\nimport { createBlock } from '@wordpress/blocks';\n\nconst BlockInserterButton = ({\n\tlabel = '',\n\tblockName,\n\tclientId,\n\tclassName,\n\tattributes = {},\n}) => {\n\tconst handleClick = () => {\n\t\tconst currentBlock = select('core/block-editor').getBlock(clientId);\n\t\tconsole.log('debug info...', currentBlock.innerBlocks.length);\n\t\tconst nextIndex =\n\t\t\t0 === currentBlock.innerBlocks.length\n\t\t\t\t? 0\n\t\t\t\t: currentBlock.innerBlocks.length + 1;\n\t\tconst newBlock = createBlock(blockName, attributes);\n\t\tdispatch('core/block-editor').insertBlock(\n\t\t\tnewBlock,\n\t\t\tnextIndex,\n\t\t\tclientId,\n\t\t);\n\t};\n\treturn (\n\t\t<Button\n\t\t\tlabel={__(label)}\n\t\t\ttooltipPosition=\"bottom\"\n\t\t\tonClick={handleClick}\n\t\t\tclassName=\"block-editor-button-block-appender\"\n\t\t>\n\t\t\t{__(label)}\n\t\t</Button>\n\t);\n};\n\nexport default BlockInserterButton;\n","/**\n * WordPress Dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n    Dropdown,\n    Toolbar,\n    ToolbarButton,\n    ToolbarGroup,\n    Path,\n    SVG,\n} from '@wordpress/components';\nimport { DOWN } from '@wordpress/keycodes';\n\nconst HeadingLevelIcon = ({ level, isPressed = false }) => {\n    const levelToPath = {\n        1: 'M9 5h2v10H9v-4H5v4H3V5h2v4h4V5zm6.6 0c-.6.9-1.5 1.7-2.6 2v1h2v7h2V5h-1.4z',\n        2: 'M7 5h2v10H7v-4H3v4H1V5h2v4h4V5zm8 8c.5-.4.6-.6 1.1-1.1.4-.4.8-.8 1.2-1.3.3-.4.6-.8.9-1.3.2-.4.3-.8.3-1.3 0-.4-.1-.9-.3-1.3-.2-.4-.4-.7-.8-1-.3-.3-.7-.5-1.2-.6-.5-.2-1-.2-1.5-.2-.4 0-.7 0-1.1.1-.3.1-.7.2-1 .3-.3.1-.6.3-.9.5-.3.2-.6.4-.8.7l1.2 1.2c.3-.3.6-.5 1-.7.4-.2.7-.3 1.2-.3s.9.1 1.3.4c.3.3.5.7.5 1.1 0 .4-.1.8-.4 1.1-.3.5-.6.9-1 1.2-.4.4-1 .9-1.6 1.4-.6.5-1.4 1.1-2.2 1.6V15h8v-2H15z',\n        3: 'M12.1 12.2c.4.3.8.5 1.2.7.4.2.9.3 1.4.3.5 0 1-.1 1.4-.3.3-.1.5-.5.5-.8 0-.2 0-.4-.1-.6-.1-.2-.3-.3-.5-.4-.3-.1-.7-.2-1-.3-.5-.1-1-.1-1.5-.1V9.1c.7.1 1.5-.1 2.2-.4.4-.2.6-.5.6-.9 0-.3-.1-.6-.4-.8-.3-.2-.7-.3-1.1-.3-.4 0-.8.1-1.1.3-.4.2-.7.4-1.1.6l-1.2-1.4c.5-.4 1.1-.7 1.6-.9.5-.2 1.2-.3 1.8-.3.5 0 1 .1 1.6.2.4.1.8.3 1.2.5.3.2.6.5.8.8.2.3.3.7.3 1.1 0 .5-.2.9-.5 1.3-.4.4-.9.7-1.5.9v.1c.6.1 1.2.4 1.6.8.4.4.7.9.7 1.5 0 .4-.1.8-.3 1.2-.2.4-.5.7-.9.9-.4.3-.9.4-1.3.5-.5.1-1 .2-1.6.2-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1l1.1-1.4zM7 9H3V5H1v10h2v-4h4v4h2V5H7v4z',\n        4: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm10-2h-1v2h-2v-2h-5v-2l4-6h3v6h1v2zm-3-2V7l-2.8 4H16z',\n        5: 'M12.1 12.2c.4.3.7.5 1.1.7.4.2.9.3 1.3.3.5 0 1-.1 1.4-.4.4-.3.6-.7.6-1.1 0-.4-.2-.9-.6-1.1-.4-.3-.9-.4-1.4-.4H14c-.1 0-.3 0-.4.1l-.4.1-.5.2-1-.6.3-5h6.4v1.9h-4.3L14 8.8c.2-.1.5-.1.7-.2.2 0 .5-.1.7-.1.5 0 .9.1 1.4.2.4.1.8.3 1.1.6.3.2.6.6.8.9.2.4.3.9.3 1.4 0 .5-.1 1-.3 1.4-.2.4-.5.8-.9 1.1-.4.3-.8.5-1.3.7-.5.2-1 .3-1.5.3-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1-.1-.1 1-1.5 1-1.5zM9 15H7v-4H3v4H1V5h2v4h4V5h2v10z',\n        6: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm8.6-7.5c-.2-.2-.5-.4-.8-.5-.6-.2-1.3-.2-1.9 0-.3.1-.6.3-.8.5l-.6.9c-.2.5-.2.9-.2 1.4.4-.3.8-.6 1.2-.8.4-.2.8-.3 1.3-.3.4 0 .8 0 1.2.2.4.1.7.3 1 .6.3.3.5.6.7.9.2.4.3.8.3 1.3s-.1.9-.3 1.4c-.2.4-.5.7-.8 1-.4.3-.8.5-1.2.6-1 .3-2 .3-3 0-.5-.2-1-.5-1.4-.9-.4-.4-.8-.9-1-1.5-.2-.6-.3-1.3-.3-2.1s.1-1.6.4-2.3c.2-.6.6-1.2 1-1.6.4-.4.9-.7 1.4-.9.6-.3 1.1-.4 1.7-.4.7 0 1.4.1 2 .3.5.2 1 .5 1.4.8 0 .1-1.3 1.4-1.3 1.4zm-2.4 5.8c.2 0 .4 0 .6-.1.2 0 .4-.1.5-.2.1-.1.3-.3.4-.5.1-.2.1-.5.1-.7 0-.4-.1-.8-.4-1.1-.3-.2-.7-.3-1.1-.3-.3 0-.7.1-1 .2-.4.2-.7.4-1 .7 0 .3.1.7.3 1 .1.2.3.4.4.6.2.1.3.3.5.3.2.1.5.2.7.1z',\n    };\n    if (!levelToPath.hasOwnProperty(level)) {\n        return null;\n    }\n\n    return (\n        <SVG\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            isPressed={isPressed}\n        >\n            <Path d={levelToPath[level]} />\n        </SVG>\n    );\n};\n\nconst POPOVER_PROPS = {\n    className: 'block-library-heading-level-dropdown',\n    isAlternate: true,\n};\n\nconst HeadingLevelToolbar = ({ selectedLevel, levels = [2, 3], onChange }) => {\n    console.log('HeadingLevelToolbar', selectedLevel);\n    return (\n        <ToolbarGroup>\n            <Dropdown\n                popoverProps={POPOVER_PROPS}\n                renderToggle={({ onToggle, isOpen }) => {\n                    const openOnArrowDown = event => {\n                        if (!isOpen && event.keyCode === DOWN) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            onToggle();\n                        }\n                    };\n\n                    return (\n                        <ToolbarButton\n                            aria-expanded={isOpen}\n                            aria-haspopup=\"true\"\n                            icon={<HeadingLevelIcon level={selectedLevel} />}\n                            label={__('Change heading level')}\n                            onClick={onToggle}\n                            onKeyDown={openOnArrowDown}\n                            showTooltip\n                        />\n                    );\n                }}\n                renderContent={() => (\n                    <Toolbar\n                        className=\"block-library-heading-level-toolbar\"\n                        label={__('Change heading level')}\n                    >\n                        <ToolbarGroup\n                            isCollapsed={false}\n                            controls={levels.map(targetLevel => {\n                                const isActive = targetLevel === selectedLevel;\n                                return {\n                                    icon: (\n                                        <HeadingLevelIcon\n                                            level={targetLevel}\n                                            isPressed={isActive}\n                                        />\n                                    ),\n                                    title: sprintf(\n                                        // translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n                                        __('Heading %d'),\n                                        targetLevel,\n                                    ),\n                                    isActive,\n                                    onClick() {\n                                        onChange(targetLevel);\n                                    },\n                                };\n                            })}\n                        />\n                    </Toolbar>\n                )}\n            />\n        </ToolbarGroup>\n    );\n};\n\nexport default HeadingLevelToolbar;\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\nconst ifMatchSetAttribute = (\n    needle,\n    haystack,\n    attrKey,\n    attrValue,\n    setAttributes,\n) => {\n    if (needle === haystack) {\n        setAttributes({ [attrKey]: attrValue });\n    }\n};\n\nconst randomId = () => {\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return `_${Math.random().toString(36).substr(2, 9)}`;\n};\n\nconst getTermsByLetter = (taxonomy, letter) => {\n\treturn new Promise(resolve => {\n\t\tapiFetch({\n\t\t\tpath: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n\t\t}).then(terms => {\n\t\t\tresolve(terms);\n\t\t});\n\t});\n};\n\nconst getTerms = (taxonomy, perPage = 25) => {\n\treturn new Promise(resolve => {\n\t\tconst data = {};\n\t\tapiFetch({\n\t\t\tpath: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n\t\t}).then(terms => {\n\t\t\tfor (let index = 0; index < terms.length; index++) {\n\t\t\t\tconst slug = terms[index].slug.replace(\n\t\t\t\t\t`${taxonomy.toLowerCase()}_`,\n\t\t\t\t\t'',\n\t\t\t\t);\n\t\t\t\tdata[terms[index].id] = {\n\t\t\t\t\tid: terms[index].id,\n\t\t\t\t\tname: terms[index].name,\n\t\t\t\t\tparent: terms[index].parent,\n\t\t\t\t\tslug,\n\t\t\t\t};\n\t\t\t}\n\t\t\tresolve(data);\n\t\t});\n\t});\n};\n\nconst getTermsAsOptions = (\n\ttaxonomy,\n\tperPage,\n\ttermValue = 'slug',\n\tsortByLabel = true,\n) => {\n\treturn new Promise(resolve => {\n\t\tgetTerms(taxonomy, perPage).then(data => {\n\t\t\tconst labelOptions = [];\n\n\t\t\tObject.keys(data).forEach(key => {\n\t\t\t\tconst termObj = data[key];\n\n\t\t\t\tlet value = termObj[termValue];\n\n\t\t\t\tlet label = termObj.name;\n\t\t\t\tif (undefined !== termObj.parent && 0 !== termObj.parent) {\n\t\t\t\t\tlabel = ` -- ${label}`;\n\t\t\t\t}\n\n\t\t\t\tlabelOptions.push({\n\t\t\t\t\tvalue,\n\t\t\t\t\tlabel,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (false !== sortByLabel) {\n\t\t\t\tlabelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\t\t\t}\n\n\t\t\tresolve(labelOptions);\n\t\t});\n\t});\n};\n\nconst getTermsAsTree = taxonomy => {\n\treturn new Promise(resolve => {\n\t\tgetTerms(taxonomy).then(data => {\n\t\t\tconst treeData = [];\n\t\t\t// Convert data from object of objects to array of objects.\n\t\t\tconst convertedData = Object.keys(data).map(i => data[i]);\n\t\t\t// Filter out the parent terms first\n\t\t\tconst parentTerms = convertedData.filter(e => 0 === e.parent);\n\t\t\tparentTerms.forEach(e => {\n\t\t\t\t// Get children by filtering for terms with parent matching this id in loop.\n\t\t\t\tconst c = convertedData.filter(f => f.parent === e.id);\n\t\t\t\tconst children = [];\n\t\t\t\t// Construct children array.\n\t\t\t\tc.forEach(cT => {\n\t\t\t\t\tchildren.push({\n\t\t\t\t\t\tname: cT.name,\n\t\t\t\t\t\tid: cT.id,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t// Finally, push the fully structured parent -> child relationship to the tree data.\n\t\t\t\ttreeData.push({\n\t\t\t\t\tname: e.name,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tchildren,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tresolve(treeData);\n\t\t});\n\t});\n};\n\n\nexport {\n\tgetTerms,\n\tgetTermsByLetter,\n\tgetTermsAsOptions,\n\tgetTermsAsTree,\n\tifMatchSetAttribute,\n\trandomId,\n};\n","const mailChimpInterests = [\n    {\n        label: 'Weekly roundup of all new publications',\n        value: '7c1390ba46',\n    },\n    {\n        label: 'Quarterly update from the President',\n        value: 'a33430a835',\n    },\n    {\n        label: '--',\n        value: false,\n    },\n    {\n        label: 'Global Attitudes & Trends',\n        value: '9203343b04',\n    },\n    {\n        label: 'Internet, Science & Tech',\n        value: 'ea87b26abe',\n    },\n    {\n        label: 'Media & News Daily Briefing',\n        value: '1d2638430b',\n    },\n    {\n        label: 'Hispanic Trends',\n        value: '0e7495c7b2',\n    },\n    {\n        label: 'Religion - Weekly newsletter',\n        value: 'a7d4f3268f',\n    },\n    {\n        label: 'Religion - Daily religion headlines',\n        value: '1a647764b2',\n    },\n    {\n        label: 'Social & Demographic Trends',\n        value: '3836f62305',\n    },\n    {\n        label: 'Methods',\n        value: '6d1e80bbaf',\n    },\n    {\n        label: 'Politics',\n        value: 'fa5fdbc701',\n    },\n    {\n        label: '--',\n        value: false,\n    },\n    {\n        label: 'Mini-course - U.S. Immigration',\n        value: 'xxx',\n    },\n    {\n        label: 'Mini-course - U.S. Census',\n        value: 'xxxx',\n    },\n    {\n        label: 'Mini-course - Muslims and Islam',\n        value: 'xxxxx',\n    },\n];\n\nexport {\n\tmailChimpInterests\n};\n","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"ReactDOM\"]; }());","(function() { module.exports = window[\"lodash\"]; }());","module.exports = regeneratorRuntime;","(function() { module.exports = window[\"wp\"][\"keycodes\"]; }());","const colors = {\n  general: ['#436983', '#bf3927', '#756a7e', '#ea9e2c'],\n  'politics-main': ['#d1a730', '#a55a26', '#949d48'],\n  'global-main': ['#949d48', '#006699', '#a55a26'],\n  'religion-main': ['#0090bf', '#a55a26', '#949d48'],\n  'social-trends-main': ['#377668', '#d1a730', '#949d48'],\n  'journalism-main': ['#733d47', '#d1a730', '#949d48'],\n  'internet-main': ['#006699', '#949d48', '#d1a730'],\n  'hispanic-main': ['#a55a26', '#d1a730', '#949d48'],\n  'politics-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'global-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'religion-spectrum': [\n    '#0090C0',\n    '#C9DEEE',\n    '#9DC7E1',\n    '#71B2D6',\n    '#0073A5',\n    '#00557E',\n  ],\n  'journalism-spectrum': [\n    '#733D47',\n    '#E8D3D7',\n    '#D1A8AF',\n    '#BC7B86',\n    '#552E35',\n    '#391E22',\n  ],\n  'social-trends-spectrum': [\n    '#387668',\n    '#D1E9E4',\n    '#A2D2C8',\n    '#64B6AA',\n    '#005645',\n    '#003A2C',\n  ],\n  'hispanic-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'internet-spectrum': [\n    '#006699',\n    '#C9D1E1',\n    '#9DAECB',\n    '#7591B7',\n    '#004A75',\n    '#002748',\n  ],\n  'blue-spectrum': [\n    '#456A83',\n    '#D5E1E9',\n    '#ACC4D3',\n    '#82A6BF',\n    '#335062',\n    '#213441',\n  ],\n  'green-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'purple-spectrum': [\n    '#746A7E',\n    '#E3E1E5',\n    '#C7C1CB',\n    '#ACA4B1',\n    '#584F5E',\n    '#3A343F',\n  ],\n  'medium-brown-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'light-brown-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'orange-spectrum': [\n    '#EA9E2C',\n    '#F9EAD4',\n    '#F5D6A9',\n    '#F1C37F',\n    '#BB792A',\n    '#7C5220',\n  ],\n  'red-spectrum': [\n    '#BF3B27',\n    '#F5D4CF',\n    '#EBABA2',\n    '#E37F73',\n    '#902D1E',\n    '#5F1D14',\n  ],\n};\n\nconst colorNames = [\n  { label: 'General', value: 'general' },\n  { label: 'Politics Main', value: 'politics-main' },\n  { label: 'Global Main', value: 'global-main' },\n  { label: 'Religion Main', value: 'religion-main' },\n  {\n    label: 'Social Trends Main',\n    value: 'social-trends-main',\n  },\n  { label: 'Journalism Main', value: 'journalism-main' },\n  { label: 'Internet Main', value: 'internet-main' },\n  { label: 'Hispanic Main', value: 'hispanic-main' },\n  {\n    label: 'Politics Spectrum',\n    value: 'politics-spectrum',\n  },\n  { label: 'Global Spectrum', value: 'global-spectrum' },\n  {\n    label: 'Religion Spectrum',\n    value: 'religion-spectrum',\n  },\n  {\n    label: 'Social Trends Spectrum',\n    value: 'social-trends-spectrum',\n  },\n  {\n    label: 'Journalism Spectrum',\n    value: 'journalism-spectrum',\n  },\n  {\n    label: 'Internet Spectrum',\n    value: 'internet-spectrum',\n  },\n  {\n    label: 'Hispanic Spectrum',\n    value: 'hispanic-spectrum',\n  },\n  { label: 'Blue Spectrum', value: 'blue-spectrum' },\n  { label: 'Green Spectrum', value: 'green-spectrum' },\n  { label: 'Purple Spectrum', value: 'purple-spectrum' },\n  {\n    label: 'Medium Brown Spectrum',\n    value: 'medium-brown-spectrum',\n  },\n  {\n    label: 'Light Brown Spectrum',\n    value: 'light-brown-spectrum',\n  },\n  { label: 'Orange Spectrum', value: 'orange-spectrum' },\n  { label: 'Red Spectrum', value: 'red-spectrum' },\n];\n\nexport { colors, colorNames };\n","/**\n * Wordpress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n/**\n * External dependencies\n */\nimport html2canvas from 'html2canvas';\nimport horizontalBarConfig from '@pewresearch/pew-chart-builder/dist/Templates/horizontalBar';\nimport verticalBarConfig from '@pewresearch/pew-chart-builder/dist/Templates/verticalBar';\nimport lineConfig from '@pewresearch/pew-chart-builder/dist/Templates/line';\nimport scatterConfig from '@pewresearch/pew-chart-builder/dist/Templates/scatter';\n// Transform data from table block into json useable for chart builder\nexport const formattedData = (data, scale, chartType) => {\n    const { body, tableHeaders } = data;\n    const seriesData = [];\n    const scaleData = (data, scale) => {\n        if (\n            chartType === 'bar' ||\n            chartType === 'stacked-bar' ||\n            chartType === 'pie' ||\n            chartType === 'dot-plot'\n        ) {\n            return data;\n        }\n        if (scale === 'time') {\n            return new Date(data).getTime();\n        }\n        return parseFloat(data);\n    };\n    for (var i = 1; i < tableHeaders.length; i++) {\n        var series = body\n            .filter((row) => !isNaN(parseFloat(row.cells[i].content)))\n            .map((row) => ({\n                x: scaleData(row.cells[0].content, scale),\n                y: parseFloat(row.cells[i].content),\n                category: tableHeaders[i],\n                yLabel: `${parseFloat(row.cells[i].content)}`,\n            }));\n        seriesData.push(series);\n    }\n    return seriesData;\n};\n\nexport const stringToArrayOfNums = (str) => {\n    return str\n        .split(',')\n        .map(Number)\n        .filter((num) => !isNaN(num));\n};\n\nexport const getDomain = (min, max, type, scale, axis, orientation) => {\n    if (isNaN(min) || isNaN(max)) {\n        return [0, 100];\n    }\n    // x axis is a bit of a misnomer for bar types. It refers exclusively to the dependent axis.\n    if (type === 'bar' && axis === 'x') {\n        return null;\n    }\n    if (type === 'stacked-bar' && axis === 'x') {\n        return null;\n    }\n    if (type === 'dot-plot' && axis === 'x') {\n        return null;\n    }\n    // likewise, no domain for a pie chart\n    if (type === 'pie') {\n        return null;\n    }\n    if (scale === 'time' && axis === 'x') {\n        return [new Date(min, 0), new Date(max, 0)];\n    }\n    return [parseFloat(min), parseFloat(max)];\n};\n\nexport const getTicks = (ticks, scale) => {\n    if (scale === 'time') {\n        return ticks.map((tick) => new Date(`${tick}`));\n    }\n    return ticks;\n};\n\nexport const formatNum = (num, output) => {\n    if (typeof num === 'string' && output === 'integer') {\n        return parseInt(num);\n    }\n    if (typeof num === 'string' && output === 'float') {\n        return parseFloat(num);\n    }\n    return num;\n};\n\nexport const uploadToMediaLibrary = (blob, name, type) => {\n    uploadMedia({\n        filesList: [\n            new File([blob], name, {\n                type,\n            }),\n        ],\n        onFileChange: ([fileObj]) => {\n            console.log({ fileObj });\n            const { editPost } = dispatch('core/editor');\n            editPost({ featured_media: fileObj.id });\n        },\n        onError: console.error,\n    });\n};\n\nexport const createHTMLCanvas = (clientId) => {\n    const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n    html2canvas(blockEl).then((canvas) => {\n        canvas.toBlob(\n            function (blob) {\n                uploadToMediaLibrary(\n                    blob,\n                    `chart-${clientId}-${Date.now()}.png`,\n                    'image/png',\n                );\n            },\n            'image/png',\n            1,\n        );\n    });\n};\n\nexport const createSvg = (clientId) => {\n    const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n    const svg = blockEl.querySelector('svg');\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    console.log(svg.outerHTML);\n    var blob = new Blob([svg.outerHTML], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    console.log({ blob, url });\n    upload(blob, `chart-${clientId}-${Date.now()}.svg`, 'image/svg+xml');\n};\n\nexport const formatLegacyAttrs = (legacyMeta, attributes) => {\n    console.log({ legacyMeta });\n    const checkEmptyStr = (legacyAttr, attr) =>\n        legacyAttr.length !== 0 ? legacyAttr : attr;\n    const getLegacyConfig = (type) => {\n        switch (type) {\n            case 'bar':\n                return verticalBarConfig;\n            case 'column':\n                return horizontalBarConfig;\n            case 'line':\n                return lineConfig;\n            case 'area':\n                return lineConfig;\n            case 'scatter':\n                return scatterConfig;\n            case 'pie':\n                return verticalBarConfig;\n            default:\n                return verticalBarConfig;\n        }\n    };\n    const legacyConfig = getLegacyConfig(legacyMeta['cb_type']);\n    const { layout, legend, bar, labels } = legacyConfig;\n    return {\n        chartType: layout.type,\n        chartOrientation: layout.orientation,\n        width: layout.width,\n        height: layout.height,\n        paddingTop: layout.padding.top,\n        paddingRight: layout.padding.right,\n        paddingBottom: layout.padding.bottom,\n        paddingLeft: layout.padding.left,\n        xScale: legacyMeta['cb_xaxis_type'] === 'datetime' ? 'time' : 'linear',\n        xLabel: checkEmptyStr(legacyMeta['cb_xaxis_label'], attributes.xLabel),\n        yLabel: checkEmptyStr(legacyMeta['cb_yaxis_label'], attributes.yLabel),\n        yMaxDomain: checkEmptyStr(\n            legacyMeta['cb_yaxis_max_value'],\n            attributes.yMaxDomain,\n        ),\n        metaSubtitle: checkEmptyStr(\n            legacyMeta['cb_subtitle'],\n            attributes.metaSubtitle,\n        ),\n        lineNodes: legacyMeta['cb_hide_markers'],\n        tooltipActive: legacyMeta['cb_enable_inline_tooltips'],\n        labelPositionDX: labels.labelPositionDX,\n        labelPositionDY: labels.labelPositionDY,\n        isConvertedChart: false,\n    };\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    PanelRow,\n    TextControl,\n    ToggleControl,\n    SelectControl,\n    Flex,\n    FlexItem,\n    __experimentalNumberControl as NumberControl,\n    ColorPicker,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst XAxisControls = ({ attributes, setAttributes }) => {\n    const {\n        chartType,\n        xAxisActive,\n        xScale,\n        xScaleFormat,\n        xMinDomain,\n        xMaxDomain,\n        xDomainPadding,\n        xTickNum,\n        xTickExact,\n        xLabel,\n        xAxisStroke,\n        xGridStroke,\n    } = attributes;\n    return (\n        <PanelBody title={__('Independent Axis Configuration')}>\n            <PanelRow>\n                The independent axis is almost always the x-axis, except in\n                cases of horizontal bar charts or stack bar charts, where the\n                independent values are plotted on the y-axis.\n            </PanelRow>\n            <ToggleControl\n                label=\"X-axis active\"\n                help={xAxisActive ? 'Has x-axis.' : 'No x-axis.'}\n                checked={xAxisActive}\n                onChange={() => setAttributes({ xAxisActive: !xAxisActive })}\n            />\n            <TextControl\n                label={__('Label')}\n                value={xLabel}\n                onChange={(val) => setAttributes({ xLabel: val })}\n            />\n            <SelectControl\n                label={__('X-axis scale')}\n                value={xScale}\n                options={[\n                    {\n                        value: 'linear',\n                        label: 'Linear',\n                    },\n                    {\n                        value: 'time',\n                        label: 'Time',\n                    },\n                ]}\n                onChange={(type) => {\n                    setAttributes({\n                        xScale: type,\n                    });\n                }}\n            />\n            {xScale === 'time' && (\n                <SelectControl\n                    label={__('X-axis scale format')}\n                    value={xScaleFormat}\n                    options={[\n                        {\n                            value: 'yyyy',\n                            label: 'yyyy',\n                        },\n                        {\n                            value: 'mm/yyyy',\n                            label: 'mm/yyyy',\n                        },\n                        {\n                            value: 'mm/dd/yyyy',\n                            label: 'mm/dd/yyyy',\n                        },\n                    ]}\n                    onChange={(type) => {\n                        setAttributes({ xScaleFormat: type });\n                    }}\n                />\n            )}\n            <PanelRow>Domain</PanelRow>\n            <Flex>\n                <FlexItem>\n                    <NumberControl\n                        label={__('Minimum')}\n                        value={xMinDomain}\n                        disabled={\n                            chartType === 'stacked-bar' ||\n                            chartType === 'bar' ||\n                            chartType === 'pie'\n                        }\n                        disableUnits\n                        disabledUnits\n                        onChange={(val) => {\n                            setAttributes({\n                                xMinDomain: formatNum(val, 'integer'),\n                            });\n                        }}\n                    />\n                </FlexItem>\n                <FlexItem>\n                    <NumberControl\n                        label={__('Maximum')}\n                        value={xMaxDomain}\n                        disabled={\n                            chartType === 'stacked-bar' ||\n                            chartType === 'bar' ||\n                            chartType === 'pie'\n                        }\n                        disableUnits\n                        disabledUnits\n                        onChange={(val) => {\n                            setAttributes({\n                                xMaxDomain: formatNum(val, 'integer'),\n                            });\n                        }}\n                    />\n                </FlexItem>\n            </Flex>\n            <NumberControl\n                label={__('Domain Padding')}\n                help={__(\n                    'Determines the space between the first tick and the end of the axis',\n                )}\n                value={xDomainPadding}\n                disableUnits={true}\n                disabledUnits={true}\n                onChange={(val) =>\n                    setAttributes({ xDomainPadding: formatNum(val, 'integer') })\n                }\n            />\n            <PanelRow>Axis Ticks</PanelRow>\n            <NumberControl\n                label={__('Number of ticks')}\n                value={xTickNum}\n                disableUnits={true}\n                disabledUnits={true}\n                onChange={(val) =>\n                    setAttributes({ xTickNum: formatNum(val, 'integer') })\n                }\n                help={__(\n                    'Note: This is return approximately the number of ticks requested, deferring to number that will evenly space ticks on the bar.',\n                )}\n            />\n            <TextControl\n                label={__('Specfic Ticks')}\n                value={xTickExact}\n                onChange={(val) => setAttributes({ xTickExact: val })}\n                help={__(\n                    'List of numbers seperated by commas (eg. 0, 50, 100). Setting this value will override the \"Number of Ticks\" parameter',\n                )}\n            />\n            <PanelRow>\n                <strong>Axis Styles</strong>\n            </PanelRow>\n            <PanelRow>{__('Axis Stroke')}</PanelRow>\n            <ColorPicker\n                color={xAxisStroke}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        xAxisStroke: color.hex,\n                    })\n                }\n            />\n            <PanelRow> {__('Grid Stroke')}</PanelRow>\n            <ColorPicker\n                color={xGridStroke}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        xGridStroke: color.hex,\n                    })\n                }\n            />\n        </PanelBody>\n    );\n};\n\nexport default XAxisControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    PanelRow,\n    TextControl,\n    ToggleControl,\n    Flex,\n    FlexItem,\n    __experimentalNumberControl as NumberControl,\n    ColorPicker,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst YAxisControls = ({ attributes, setAttributes }) => {\n    const {\n        yAxisActive,\n        yLabel,\n        yMinDomain,\n        yMaxDomain,\n        yDomainPadding,\n        yTickNum,\n        yTickExact,\n        showYMinDomainLabel,\n        yAxisStroke,\n        yGridStroke,\n    } = attributes;\n    return (\n        <PanelBody title={__('Dependent Axis Configuration')}>\n            <PanelRow>\n                Dependent variables are properties that change in response to a\n                change in another property. As such, the dependent axis is\n                usually the y-axis.\n            </PanelRow>\n            <ToggleControl\n                label=\"Y-axis active\"\n                help={yAxisActive ? 'Has y-axis.' : 'No y-axis.'}\n                checked={yAxisActive}\n                onChange={() => setAttributes({ yAxisActive: !yAxisActive })}\n            />\n            <TextControl\n                label={__('Label')}\n                value={yLabel}\n                onChange={(val) => setAttributes({ yLabel: val })}\n            />\n            <PanelRow>Y Domain</PanelRow>\n            <Flex>\n                <FlexItem>\n                    <NumberControl\n                        label={__('Minimum')}\n                        value={yMinDomain}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(val) =>\n                            setAttributes({\n                                yMinDomain: formatNum(val, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n                <FlexItem>\n                    <NumberControl\n                        label={__('Maximum')}\n                        value={yMaxDomain}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(val) =>\n                            setAttributes({\n                                yMaxDomain: formatNum(val, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n            </Flex>\n            <NumberControl\n                label={__('Domain Padding')}\n                help={__(\n                    'Determines the space between the first tick and the end of the axis',\n                )}\n                value={yDomainPadding}\n                disableUnits={true}\n                disabledUnits={true}\n                onChange={(val) =>\n                    setAttributes({ yDomainPadding: formatNum(val, 'integer') })\n                }\n            />\n            <PanelRow>Axis Ticks</PanelRow>\n            <NumberControl\n                label={__('Number of ticks')}\n                value={yTickNum}\n                disableUnits={true}\n                disabledUnits={true}\n                min={1}\n                onChange={(val) =>\n                    setAttributes({ yTickNum: formatNum(val, 'integer') })\n                }\n                help={__(\n                    'Note: This is return approximately the number of ticks requested, deferring to number that will evenly space ticks on the bar.',\n                )}\n            />\n            <ToggleControl\n                label=\"Show min domain label\"\n                help={__(\n                    \"Forces the minimum domain value's lable to appear on axis. May overlap with x axis.\",\n                )}\n                checked={showYMinDomainLabel}\n                onChange={() =>\n                    setAttributes({ showYMinDomainLabel: !showYMinDomainLabel })\n                }\n            />\n            <TextControl\n                label={__('Specfic Ticks')}\n                value={yTickExact}\n                onChange={(val) => setAttributes({ yTickExact: val })}\n                help={__(\n                    'List of numbers seperated by commas (eg. 0, 50, 100). Setting this value will override the \"Number of ticks\" parameter',\n                )}\n            />\n            <PanelRow>\n                <strong>Axis Styles</strong>\n            </PanelRow>\n            <PanelRow>{__('Axis Stroke')}</PanelRow>\n            <ColorPicker\n                color={yAxisStroke}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        yAxisStroke: color.hex,\n                    })\n                }\n            />\n            <PanelRow> {__('Grid Stroke')}</PanelRow>\n            <ColorPicker\n                color={yGridStroke}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        yGridStroke: color.hex,\n                    })\n                }\n            />\n        </PanelBody>\n    );\n};\n\nexport default YAxisControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow, SelectControl } from '@wordpress/components';\n\nconst DataControls = ({ attributes, setAttributes }) => {\n    const { sortOrder } = attributes;\n    return (\n        <PanelBody title={__('Data Sorting')} initialOpen={false}>\n            <PanelRow>\n                For data that is categorical, we can sort the data in a number\n                of ways (eg. not linear or time scale. Think stacked bar charts,\n                grouped bar charts, dot plots, etc.).\n            </PanelRow>\n            <PanelRow>\n                Selecting a sort will sort the dependent variable of your\n                dataset (this will almost always be the first column of your\n                table). The underlying library is a little finnicky re: sorting,\n                so you may have to try a couple permutations to find the order\n                you want.\n            </PanelRow>\n            <PanelRow>\n                <ul>\n                    <li>Ascending: usually returns data sorted A &#8594; Z</li>\n                    <li>Descending: usually returns data sorted Z &#8594; A</li>\n                    <li>No sort: returns data as it is input in the table</li>\n                    <li>\n                        Reverse: for some chart types, not sorting will return\n                        the data in reverse order. Choose this option to reverse\n                        the reverse :)\n                    </li>\n                </ul>\n            </PanelRow>\n            <SelectControl\n                label={__('Sort Order')}\n                value={sortOrder}\n                options={[\n                    {\n                        value: 'ascending',\n                        label: 'Ascending',\n                    },\n                    {\n                        value: 'descending',\n                        label: 'Descending',\n                    },\n                    {\n                        value: 'none',\n                        label: 'No Sort',\n                    },\n                    {\n                        value: 'reverse',\n                        label: 'Reverse',\n                    },\n                ]}\n                onChange={(type) => {\n                    setAttributes({\n                        sortOrder: type,\n                    });\n                }}\n            />\n        </PanelBody>\n    );\n};\n\nexport default DataControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    PanelRow,\n    ToggleControl,\n    SelectControl,\n    __experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst LineControls = ({ attributes, setAttributes, chartType }) => {\n    const {\n        lineInterpolation,\n        lineStrokeWidth,\n        lineNodes,\n        nodeSize,\n        nodeStroke,\n        areaFillOpacity,\n    } = attributes;\n    return (\n        <PanelBody title={__('Line/Area Chart Configuration')}>\n            <SelectControl\n                label={__('Interpolation')}\n                options={[\n                    { label: 'Basis', value: 'basis' },\n                    { label: 'Bundle', value: 'bundle' },\n                    { label: 'Cardinal', value: 'cardinal' },\n                    { label: 'Catmull-Rom', value: 'catmullRom' },\n                    { label: 'Linear', value: 'linear' },\n                    { label: 'Monotone X', value: 'monotoneX' },\n                    { label: 'Monotone Y', value: 'monotoneY' },\n                    { label: 'Natural', value: 'natural' },\n                    { label: 'Step', value: 'step' },\n                    { label: 'Step After', value: 'stepAfter' },\n                    { label: 'Step Before', value: 'stepBefore' },\n                ]}\n                value={lineInterpolation}\n                onChange={(value) =>\n                    setAttributes({ lineInterpolation: value })\n                }\n            />\n            <NumberControl\n                min={1}\n                label={__('Line Stroke Width')}\n                value={lineStrokeWidth}\n                onChange={(value) =>\n                    setAttributes({\n                        lineStrokeWidth: formatNum(value, 'integer'),\n                    })\n                }\n            />\n            <PanelRow>Line Nodes</PanelRow>\n            <ToggleControl\n                label=\"Line nodes\"\n                help={\n                    lineNodes\n                        ? 'Shows data point nodes on chart.'\n                        : 'No data point nodes.'\n                }\n                checked={lineNodes}\n                onChange={() => setAttributes({ lineNodes: !lineNodes })}\n            />\n            <NumberControl\n                disabled={!lineNodes}\n                min={1}\n                label={__('Line Node Size')}\n                value={nodeSize}\n                onChange={(value) =>\n                    setAttributes({ nodeSize: formatNum(value, 'integer') })\n                }\n            />\n            <NumberControl\n                disabled={!lineNodes}\n                min={1}\n                label={__('Line Node Stroke')}\n                value={nodeStroke}\n                onChange={(value) =>\n                    setAttributes({\n                        nodeStroke: formatNum(value, 'integer'),\n                    })\n                }\n            />\n            <PanelRow>Area</PanelRow>\n            <NumberControl\n                disabled={!chartType === 'area'}\n                label={__('Fill Opacity')}\n                step={0.1}\n                value={areaFillOpacity}\n                onChange={(value) =>\n                    setAttributes({\n                        areaFillOpacity: formatNum(value, 'float'),\n                    })\n                }\n            />\n        </PanelBody>\n    );\n};\n\nexport default LineControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    __experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst BarControls = ({ attributes, setAttributes }) => {\n    const { barWidth, barGroupOffset } = attributes;\n    return (\n        <PanelBody title={__('Bar Chart Configuration')} initialOpen={false}>\n            <NumberControl\n                label={__('Bar Width')}\n                value={barWidth}\n                onChange={(value) =>\n                    setAttributes({ barWidth: formatNum(value, 'integer') })\n                }\n            />\n            <NumberControl\n                label={__('Grouped Bar Offset')}\n                help={__('Determines space between bars in a group.')}\n                value={barGroupOffset}\n                onChange={(value) =>\n                    setAttributes({\n                        barGroupOffset: formatNum(value, 'integer'),\n                    })\n                }\n            />\n        </PanelBody>\n    );\n};\n\nexport default BarControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport {\n    PanelBody,\n    PanelRow,\n    ToggleControl,\n    SelectControl,\n    Flex,\n    FlexItem,\n    __experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst LabelControls = ({ attributes, setAttributes, chartType }) => {\n    const {\n        chartOrientation,\n        labelsActive,\n        labelPositionDY,\n        labelPositionDX,\n        labelToFixedDecimal,\n        barLabelPosition,\n        barLabelCutoff,\n        barLabelCutoffMobile,\n    } = attributes;\n    return (\n        <PanelBody title={__('Labels')} initialOpen={false}>\n            <ToggleControl\n                label=\"Labels Active\"\n                checked={labelsActive}\n                onChange={() => setAttributes({ labelsActive: !labelsActive })}\n            />\n            <PanelRow>Label Positioning</PanelRow>\n            <PanelRow>\n                Determines the position of label relative to it's parent node\n            </PanelRow>\n            <Flex>\n                <FlexItem>\n                    <NumberControl\n                        label={__('DX')}\n                        value={labelPositionDX}\n                        onChange={(value) =>\n                            setAttributes({\n                                labelPositionDX: formatNum(value, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n                <FlexItem>\n                    <NumberControl\n                        label={__('DY')}\n                        value={labelPositionDY}\n                        onChange={(value) =>\n                            setAttributes({\n                                labelPositionDY: formatNum(value, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n            </Flex>\n            <NumberControl\n                label={__('Label value to fixed decimals')}\n                value={labelToFixedDecimal}\n                onChange={(value) =>\n                    setAttributes({\n                        labelToFixedDecimal: formatNum(value, 'integer'),\n                    })\n                }\n            />\n            {(chartType === 'bar' || chartType === 'stacked-bar') && (\n                <Fragment>\n                    <SelectControl\n                        label={__('Label Positioning')}\n                        help={__(\n                            'For bar charts, determines whether the label for a bar will appear inside or outside the bar. If inside is selected, chart builder will attempt to place the label inside the bar, and adjust label color based on the bar color. Please choose a break point that will force render the label outside the bar if the value is too small, overriding your designated DX or DY values.',\n                        )}\n                        value={barLabelPosition}\n                        options={[\n                            {\n                                value: 'inside',\n                                label: 'Inside',\n                            },\n                            {\n                                value: 'outside',\n                                label: 'Outside',\n                            },\n                        ]}\n                        onChange={(value) => {\n                            setAttributes({\n                                barLabelPosition: value,\n                            });\n                        }}\n                    />\n                    <NumberControl\n                        label={__('Label Break Point')}\n                        disabled={barLabelPosition === 'outside'}\n                        min={0}\n                        value={barLabelCutoff}\n                        onChange={(value) =>\n                            setAttributes({\n                                barLabelCutoff: formatNum(value, 'float'),\n                            })\n                        }\n                    />\n                    <NumberControl\n                        label={__('Label Break Point - Mobile')}\n                        disabled={\n                            barLabelPosition === 'outside' &&\n                            chartOrientation === 'vertical'\n                        }\n                        min={0}\n                        value={barLabelCutoffMobile}\n                        onChange={(value) =>\n                            setAttributes({\n                                barLabelCutoffMobile: formatNum(value, 'float'),\n                            })\n                        }\n                    />\n                </Fragment>\n            )}\n        </PanelBody>\n    );\n};\n\nexport default LabelControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    PanelRow,\n    TextControl,\n    ToggleControl,\n    SelectControl,\n    Flex,\n    FlexItem,\n    __experimentalNumberControl as NumberControl,\n    ColorPicker,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst LegendControls = ({ attributes, setAttributes }) => {\n    const {\n        legendActive,\n        legendOrientation,\n        legendTitle,\n        legendOffsetX,\n        legendOffsetY,\n        legendMarkerStyle,\n        legendBorderStroke,\n        legendFill,\n    } = attributes;\n    return (\n        <PanelBody title={__('Legend')} initialOpen={false}>\n            <ToggleControl\n                label=\"Legend Active\"\n                checked={legendActive}\n                onChange={() => setAttributes({ legendActive: !legendActive })}\n            />\n            <PanelRow>Legend Positioning</PanelRow>\n            <PanelRow>\n                Determines the position of legend relative to the chart\n                container\n            </PanelRow>\n\n            <Flex>\n                <FlexItem>\n                    <NumberControl\n                        label={__('DX')}\n                        value={legendOffsetX}\n                        onChange={(value) =>\n                            setAttributes({\n                                legendOffsetX: formatNum(value, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n                <FlexItem>\n                    <NumberControl\n                        label={__('DY')}\n                        value={legendOffsetY}\n                        onChange={(value) =>\n                            setAttributes({\n                                legendOffsetY: formatNum(value, 'integer'),\n                            })\n                        }\n                    />\n                </FlexItem>\n            </Flex>\n            <TextControl\n                label={__('Legend Title')}\n                value={legendTitle}\n                onChange={(value) => setAttributes({ legendTitle: value })}\n            />\n            <SelectControl\n                label={__('Orientation')}\n                value={legendOrientation}\n                options={[\n                    {\n                        value: 'horizontal',\n                        label: 'Horizontal',\n                    },\n                    {\n                        value: 'vertical',\n                        label: 'Vertical',\n                    },\n                ]}\n                onChange={(type) => {\n                    setAttributes({\n                        legendOrientation: type,\n                    });\n                }}\n            />\n            <SelectControl\n                label={__('Marker Style')}\n                value={legendMarkerStyle}\n                options={[\n                    {\n                        value: 'square',\n                        label: 'Square',\n                    },\n                    {\n                        value: 'circle',\n                        label: 'Circle',\n                    },\n                    {\n                        value: 'diamond',\n                        label: 'Diamond',\n                    },\n                    {\n                        value: 'plus',\n                        label: 'Plus',\n                    },\n                    {\n                        value: 'minus',\n                        label: 'Minus',\n                    },\n                    {\n                        value: 'star',\n                        label: 'Star',\n                    },\n                    {\n                        value: 'triangleDown',\n                        label: 'Triangle Down',\n                    },\n                    {\n                        value: 'triangleUp',\n                        label: 'Triangle Up',\n                    },\n                ]}\n                onChange={(type) => {\n                    setAttributes({\n                        legendMarkerStyle: type,\n                    });\n                }}\n            />\n            <PanelRow>{__('Border Stroke')}</PanelRow>\n            <ColorPicker\n                color={legendBorderStroke}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        legendBorderStroke: color.hex,\n                    })\n                }\n            />\n            <PanelRow> {__('Fill')}</PanelRow>\n            <ColorPicker\n                color={legendFill}\n                onChangeComplete={(color) =>\n                    setAttributes({\n                        legendFill: color.hex,\n                    })\n                }\n            />\n        </PanelBody>\n    );\n};\n\nexport default LegendControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, TextControl, ToggleControl } from '@wordpress/components';\n\nconst TooltipControls = ({ attributes, setAttributes }) => {\n    const { tooltipFormat, tooltipActive } = attributes;\n    return (\n        <PanelBody title={__('Tooltip')} initialOpen={false}>\n            <ToggleControl\n                label={__('Show Tooltip')}\n                checked={tooltipActive}\n                onChange={() =>\n                    setAttributes({ tooltipActive: !tooltipActive })\n                }\n            />\n            <TextControl\n                label={__('Tooltip Format')}\n                help={__(\n                    \"Tooltip formatter is a string that takes two variables. The first variable(%1$s) corresponds with the x value of a node, and the second(%2$s), the y value. (eg. '%1$s: %2$s people' would return something like '2010: 500 people')\",\n                )}\n                disabled={!tooltipActive}\n                value={tooltipFormat}\n                placeholder={'%1$s: %2$s'}\n                onChange={(val) => setAttributes({ tooltipFormat: val })}\n            />\n        </PanelBody>\n    );\n};\n\nexport default TooltipControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    TextareaControl,\n    TextControl,\n    ToggleControl,\n    PanelBody,\n} from '@wordpress/components';\n\nconst TextFieldControls = ({ attributes, setAttributes }) => {\n    const {\n        metaTextActive,\n        metaTitle,\n        metaSubtitle,\n        metaNote,\n        metaSource,\n        metaTag,\n    } = attributes;\n    return (\n        <PanelBody title={__('Text Fields')} initialOpen={false}>\n            <ToggleControl\n                label={__('Text Fields Active')}\n                help={__(\n                    'Enables title, subtitle, note, source, and tag fields for chart.',\n                )}\n                checked={metaTextActive}\n                onChange={() =>\n                    setAttributes({ metaTextActive: !metaTextActive })\n                }\n            />\n            <TextControl\n                label={__('Title')}\n                value={metaTitle}\n                onChange={(val) => setAttributes({ metaTitle: val })}\n            />\n            <TextControl\n                label={__('Subtitle')}\n                value={metaSubtitle}\n                onChange={(val) => setAttributes({ metaSubtitle: val })}\n            />\n            <TextareaControl\n                label={__('Note')}\n                help=\"Enter some text\"\n                value={metaNote}\n                onChange={(val) => setAttributes({ metaNote: val })}\n            />\n            <TextareaControl\n                label={__('Source')}\n                help=\"Enter some text\"\n                value={metaSource}\n                onChange={(val) => setAttributes({ metaSource: val })}\n            />\n            <TextControl\n                label={__('Tag')}\n                value={metaTag}\n                onChange={(val) => setAttributes({ metaTag: val })}\n            />\n        </PanelBody>\n    );\n};\n\nexport default TextFieldControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    SelectControl,\n    __experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n/**\n * Internal dependencies\n */\nimport { formatNum } from '../utils/helpers';\n\nconst NodeControls = ({ attributes, setAttributes }) => {\n    const { nodeSize, nodeStroke, nodeFill } = attributes;\n    return (\n        <PanelBody title={__('Node Styles')} initialOpen={false}>\n            <NumberControl\n                min={1}\n                label={__('Node Size')}\n                value={nodeSize}\n                onChange={(value) =>\n                    setAttributes({ nodeSize: formatNum(value, 'integer') })\n                }\n            />\n            <NumberControl\n                min={1}\n                label={__('Node Stroke')}\n                value={nodeStroke}\n                onChange={(value) =>\n                    setAttributes({\n                        nodeStroke: formatNum(value, 'integer'),\n                    })\n                }\n            />\n            <SelectControl\n                label={__('Node Fill')}\n                options={[\n                    { label: 'Inherit', value: 'inherit' },\n                    { label: 'White', value: 'white' },\n                ]}\n                value={nodeFill}\n                onChange={(value) => setAttributes({ nodeFill: value })}\n            />\n        </PanelBody>\n    );\n};\n\nexport default NodeControls;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n    PanelBody,\n    PanelRow,\n    SelectControl,\n    RangeControl,\n    __experimentalNumberControl as NumberControl,\n    ExternalLink,\n    FormTokenField,\n    Button,\n    TextControl,\n} from '@wordpress/components';\nimport { uploadMedia } from '@wordpress/media-utils';\nimport { dispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n/**\n * External dependencies\n */\nimport html2canvas from 'html2canvas';\n/**\n * Internal dependencies\n */\nimport { colorNames } from '../utils/colors';\nimport { formatNum } from '../utils/helpers';\nimport XAxisControls from './XAxisControls';\nimport YAxisControls from './YAxisControls';\nimport DataControls from './DataControls';\nimport LineControls from './LineControls';\nimport BarControls from './BarControls';\nimport LabelControls from './LabelControls';\nimport LegendControls from './LegendControls';\nimport TooltipControls from './TooltipControls';\nimport TextFieldControls from './TextFieldControls';\nimport NodeControls from './NodeControls';\n\nconst { editPost } = dispatch('core/editor');\n\nconst ChartControls = ({ attributes, setAttributes, clientId }) => {\n    const [imageLoading, setImageLoading] = useState(false);\n    const [svgLoading, setSVGLoading] = useState(false);\n    const {\n        chartType,\n        chartOrientation,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        height,\n        width,\n        colorValue,\n        customColors,\n        pngUrl,\n        pngId,\n    } = attributes;\n    const upload = (blob, name, type) => {\n        uploadMedia({\n            filesList: [\n                new File([blob], name, {\n                    type,\n                }),\n            ],\n            onFileChange: ([fileObj]) => {\n                console.log({ fileObj });\n                setAttributes({\n                    pngUrl: fileObj.url,\n                    pngId: fileObj.id,\n                });\n                editPost({ featured_media: fileObj.id });\n                setImageLoading(false);\n            },\n            onError: console.error,\n        });\n    };\n    const createSvg = () => {\n        setSVGLoading(true);\n        const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n        const svg = blockEl.querySelector('svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        var blob = new Blob([svg.outerHTML], { type: 'image/svg+xml' });\n        const url = URL.createObjectURL(blob);\n        const downloadLink = document.createElement('a');\n        downloadLink.href = url;\n        downloadLink.download = `chart-${clientId}.svg`;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n        setSVGLoading(false);\n    };\n    const createCanvas = () => {\n        setImageLoading(true);\n        const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n        const resizerEl = blockEl.querySelector(\n            '.components-resizable-box__container',\n        );\n        resizerEl.classList.remove('has-show-handle');\n        html2canvas(blockEl).then((canvas) => {\n            canvas.toBlob(\n                function (blob) {\n                    upload(\n                        blob,\n                        `chart-${clientId}-${Date.now()}.png`,\n                        'image/png',\n                    );\n                },\n                'image/png',\n                1,\n            );\n            resizerEl.classList.add('has-show-handle');\n        });\n    };\n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Chart Configuration')}>\n                    {chartType === 'bar' && (\n                        <SelectControl\n                            label={__('Chart Orientation (Bar charts only)')}\n                            value={chartOrientation}\n                            options={[\n                                {\n                                    value: 'vertical',\n                                    label: 'Vertical',\n                                },\n                                {\n                                    value: 'horizontal',\n                                    label: 'Horizontal',\n                                },\n                            ]}\n                            onChange={(orientation) => {\n                                setAttributes({\n                                    chartOrientation: orientation,\n                                });\n                            }}\n                        />\n                    )}\n                    <RangeControl\n                        label={__('Width')}\n                        withInputField\n                        min={0}\n                        max={1080}\n                        value={parseInt(width)}\n                        onChange={(width) =>\n                            setAttributes({\n                                width: formatNum(width, 'integer'),\n                            })\n                        }\n                    />\n                    <RangeControl\n                        label={__('Height')}\n                        withInputField\n                        min={0}\n                        max={1200}\n                        value={parseInt(height)}\n                        onChange={(height) =>\n                            setAttributes({\n                                height: formatNum(height, 'integer'),\n                            })\n                        }\n                    />\n                    <NumberControl\n                        label={__('Padding Top')}\n                        value={paddingTop}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(value) => {\n                            setAttributes({\n                                paddingTop: formatNum(value, 'integer'),\n                            });\n                        }}\n                    />\n                    <NumberControl\n                        label={__('Padding Right')}\n                        value={paddingRight}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(value) => {\n                            setAttributes({\n                                paddingRight: formatNum(value, 'integer'),\n                            });\n                        }}\n                    />\n                    <NumberControl\n                        label={__('Padding Bottom')}\n                        value={paddingBottom}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(value) => {\n                            setAttributes({\n                                paddingBottom: formatNum(value, 'integer'),\n                            });\n                        }}\n                    />\n                    <NumberControl\n                        label={__('Padding Left')}\n                        value={paddingLeft}\n                        disableUnits={true}\n                        disabledUnits={true}\n                        onChange={(value) => {\n                            setAttributes({\n                                paddingLeft: formatNum(value, 'integer'),\n                            });\n                        }}\n                    />\n                    <SelectControl\n                        label={__('Color Pallette')}\n                        value={colorValue}\n                        options={colorNames}\n                        help={__(\n                            \"Sets a predefined color pallette for the chart's color scale. If you wish to define your own colors. Use the Custom Colors input below, which will override all preset colors.\",\n                        )}\n                        onChange={(colors) => {\n                            setAttributes({ colorValue: colors });\n                        }}\n                    />\n                    <FormTokenField\n                        label={__('Custom Colors')}\n                        value={customColors || []}\n                        placeholder={'#000000'}\n                        onChange={(colors) =>\n                            setAttributes({ customColors: colors })\n                        }\n                    />\n                    <ExternalLink href=\"https://codepen.io/benjiwo/pen/GdBNPP\">\n                        Pew Research Color Guide\n                    </ExternalLink>\n                </PanelBody>\n                <TextFieldControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                <XAxisControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                <YAxisControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                <DataControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                <LabelControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                    chartType={chartType}\n                />\n                <LegendControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                <TooltipControls\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n                {(chartType === 'bar' || chartType === 'stacked-bar') && (\n                    <BarControls\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                    />\n                )}\n                {(chartType === 'line' || chartType === 'area') && (\n                    <LineControls\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        chartType={chartType}\n                    />\n                )}\n                {(chartType === 'line' ||\n                    chartType === 'area' ||\n                    chartType === 'dot-plot' ||\n                    chartType === 'scatter') && (\n                    <NodeControls\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        chartType={chartType}\n                    />\n                )}\n                <PanelBody title=\"Image Exports\" initialOpen={false}>\n                    <PanelRow>\n                        <Button\n                            isSecondary\n                            isBusy={svgLoading}\n                            onClick={createSvg}\n                        >\n                            Download SVG\n                        </Button>\n                    </PanelRow>\n                    <PanelRow>\n                        <Button\n                            isSecondary\n                            isBusy={imageLoading}\n                            onClick={createCanvas}\n                        >\n                            Upload Chart PNG to Media Library\n                        </Button>\n                    </PanelRow>\n                    <PanelRow>\n                        {imageLoading && (\n                            <p>\n                                Creating image. This will take several moments\n                                ...\n                            </p>\n                        )}\n                        {svgLoading && <p>Preparing SVG ...</p>}\n                    </PanelRow>\n                    {pngUrl.length > 0 && (\n                        <>\n                            <PanelRow>\n                                <TextControl\n                                    label={__('PNG URL')}\n                                    value={pngUrl}\n                                />\n                            </PanelRow>\n                            <PanelRow>\n                                <ExternalLink href={pngUrl}>\n                                    Preview Image\n                                </ExternalLink>\n                            </PanelRow>\n                        </>\n                    )}\n                </PanelBody>\n            </InspectorControls>\n        </>\n    );\n};\n\nexport default ChartControls;\n","/**\n * WordPress dependencies\n */\nimport { ResizableBox } from '@wordpress/components';\nimport { useEffect } from '@wordpress/element';\nimport { select, useSelect } from '@wordpress/data';\n/**\n * External dependencies\n */\nimport {\n    ChartBuilderWrapper,\n    masterConfig,\n    ChartBuilderTextWrapper,\n} from '@pewresearch/pew-chart-builder/dist';\nimport { ifMatchSetAttribute } from '@prc-app/shared';\n\n/**\n * Internal dependencies\n */\nimport { colors } from '../utils/colors';\nimport {\n    stringToArrayOfNums,\n    getDomain,\n    getTicks,\n    formattedData,\n    formatLegacyAttrs,\n} from '../utils/helpers';\nimport ChartControls from './ChartControls';\n\nconst setChartTypeByClassName = (className, setAttributes) => {\n    ifMatchSetAttribute(\n        'is-style-bar',\n        className,\n        'chartType',\n        'bar',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-stacked-bar',\n        className,\n        'chartType',\n        'stacked-bar',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-line',\n        className,\n        'chartType',\n        'line',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-scatter',\n        className,\n        'chartType',\n        'scatter',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-pie',\n        className,\n        'chartType',\n        'pie',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-area',\n        className,\n        'chartType',\n        'area',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-dot-plot',\n        className,\n        'chartType',\n        'dot-plot',\n        setAttributes,\n    );\n};\n\nconst edit = ({\n    attributes,\n    setAttributes,\n    toggleSelection,\n    clientId,\n    isSelected,\n}) => {\n    const {\n        isConvertedChart,\n        className,\n        chartType,\n        chartOrientation,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        paddingLeft,\n        height,\n        width,\n        sortOrder,\n        colorValue,\n        customColors,\n        barWidth,\n        barGroupOffset,\n        barLabelPosition,\n        barLabelCutoff,\n        barLabelCutoffMobile,\n        tooltipActive,\n        tooltipFormat,\n        lineInterpolation,\n        lineStrokeWidth,\n        lineNodes,\n        nodeSize,\n        nodeStroke,\n        nodeFill,\n        areaFillOpacity,\n        xAxisActive,\n        xLabel,\n        xScale,\n        xScaleFormat,\n        xMinDomain,\n        xMaxDomain,\n        xDomainPadding,\n        xTickNum,\n        xTickExact,\n        xAxisStroke,\n        xGridStroke,\n        yAxisStroke,\n        yGridStroke,\n        yAxisActive,\n        yLabel,\n        yMinDomain,\n        yMaxDomain,\n        yDomainPadding,\n        showYMinDomainLabel,\n        yTickNum,\n        yTickExact,\n        labelsActive,\n        labelPositionDX,\n        labelPositionDY,\n        legendActive,\n        legendOrientation,\n        legendTitle,\n        legendOffsetX,\n        legendOffsetY,\n        legendMarkerStyle,\n        legendBorderStroke,\n        legendFill,\n        metaTextActive,\n        metaTitle,\n        metaSubtitle,\n        metaNote,\n        metaSource,\n        metaTag,\n    } = attributes;\n    // update chart type using styles\n    useEffect(() => {\n        if (isConvertedChart) {\n            console.log('converting ...');\n            const legacyMeta = select('core/editor').getEditedPostAttribute(\n                'meta',\n            );\n            const legacyAttrs = formatLegacyAttrs(legacyMeta, attributes);\n            setAttributes(legacyAttrs);\n        }\n        setChartTypeByClassName(className, setAttributes);\n    }, [className, isConvertedChart]);\n    const xTicks = stringToArrayOfNums(xTickExact);\n    const yTicks = stringToArrayOfNums(yTickExact);\n    const config = {\n        ...masterConfig,\n        layout: {\n            ...masterConfig.layout,\n            type: chartType === 'area' ? 'line' : chartType,\n            orientation: chartOrientation,\n            width: width,\n            height: height,\n            padding: {\n                top: paddingTop,\n                right: paddingRight,\n                bottom: paddingBottom,\n                left: paddingLeft,\n            },\n        },\n        xAxis: {\n            ...masterConfig.xAxis,\n            active: xAxisActive,\n            label: xLabel,\n            scale: xScale,\n            dateFormat: xScaleFormat,\n            domain: getDomain(\n                xMinDomain,\n                xMaxDomain,\n                chartType,\n                xScale,\n                'x',\n                chartOrientation,\n            ),\n            // domain: [new Date(1970, 0), new Date(2024, 0)],\n            padding: 50,\n            tickCount: xTickNum,\n            tickValues: xTicks.length <= 1 ? null : getTicks(xTicks, xScale),\n            domainPadding: xDomainPadding,\n            axis: {\n                stroke: xAxisStroke,\n            },\n            grid: {\n                stroke: xGridStroke,\n            },\n        },\n        yAxis: {\n            ...masterConfig.yAxis,\n            padding: 20,\n            active: yAxisActive,\n            label: yLabel,\n            domain: getDomain(\n                yMinDomain,\n                yMaxDomain,\n                chartType,\n                'linear',\n                'y',\n                chartOrientation,\n            ),\n            tickCount: yTickNum,\n            tickValues: yTicks.length <= 1 ? null : yTicks,\n            domainPadding: yDomainPadding,\n            showZero: showYMinDomainLabel,\n            axis: {\n                stroke: yAxisStroke,\n            },\n            grid: {\n                stroke: yGridStroke,\n            },\n        },\n        dataRender: {\n            ...masterConfig.dataRender,\n            xScale: xScale,\n            yScale: 'linear',\n            xFormat: xScaleFormat,\n            yFormat: null,\n            sortKey: 'x',\n            sortOrder: sortOrder,\n        },\n        tooltip: {\n            active: tooltipActive,\n            format: tooltipFormat,\n        },\n        animate: {\n            active: true,\n            duration: 500,\n        },\n        line: {\n            ...masterConfig.line,\n            interpolation: lineInterpolation,\n            showPoints: lineNodes,\n            showArea: chartType === 'area' ? true : false,\n            strokeWidth: lineStrokeWidth,\n            pointSize: nodeSize,\n            pointStrokeWidth: nodeStroke,\n            areaFillOpacity: areaFillOpacity,\n        },\n        scatter: {\n            pointSize: nodeSize,\n        },\n        nodes: {\n            size: nodeSize,\n            fill: nodeFill,\n            strokeWidth: nodeStroke,\n        },\n        legend: {\n            ...masterConfig.legend,\n            active: legendActive,\n            orientation: legendOrientation,\n            title: legendTitle,\n            offsetX: legendOffsetX,\n            offsetY: legendOffsetY,\n            markerStyle: legendMarkerStyle,\n            borderStroke: legendBorderStroke,\n            fill: legendFill,\n        },\n        bar: {\n            width: barWidth,\n            barToSpaceRatio: 0.8,\n            groupOffset: barGroupOffset,\n        },\n        colors: customColors.length > 0 ? customColors : colors[colorValue],\n        labels: {\n            ...masterConfig.labels,\n            active: labelsActive,\n            color: 'black',\n            fontWeight: 200,\n            fontSize: 12,\n            labelPositionDX: labelPositionDX,\n            labelPositionDY: labelPositionDY,\n            pieLabelRadius: 60,\n            labelBarPosition: barLabelPosition,\n            labelCutoff: barLabelPosition === 'inside' ? barLabelCutoff : null,\n            labelCutoffMobile:\n                barLabelPosition === 'inside' ? barLabelCutoffMobile : null,\n        },\n        metadata: {\n            ...masterConfig.metadata,\n            active: metaTextActive,\n            title: metaTitle,\n            subtitle: metaSubtitle,\n            note: metaNote,\n            source: metaSource,\n            tag: metaTag,\n        },\n    };\n    const parentBlockId = select(\n        'core/block-editor',\n    ).getBlockParentsByBlockName(\n        clientId,\n        'prc-block/chart-builder-data-wrapper',\n    )[0];\n    const tableData = useSelect((select) => {\n        const tableBlock = select('core/block-editor')\n            .getBlocks(parentBlockId)\n            .find((block) => block.name === 'core/table');\n        const tableHeaders = tableBlock.attributes.head[0].cells.map(\n            (c) => c.content,\n        );\n        const body = tableBlock.attributes.body;\n        return { tableHeaders, body };\n    }, []);\n\n    const tableJson = formattedData(tableData, xScale, chartType);\n    const tableCategories = tableData.tableHeaders;\n    let chartData;\n    let renderedChart;\n    if (tableCategories) {\n        //Who needs splice? Use array literals to get all items in array after the first item :)\n        const [, ...rest] = tableCategories;\n        config.dataRender.categories = rest;\n    }\n    // For now, let's force pie charts to only use the first array of data, as they can only contain one series of data by rule.\n    // Passing addtl data will break tool (bad).\n    console.log({ attributes, config, clientId, tableJson });\n    if (tableJson) {\n        switch (chartType) {\n            case 'pie':\n                chartData = tableJson;\n                break;\n            default:\n                chartData = tableJson;\n                break;\n        }\n        renderedChart = (\n            <ChartBuilderWrapper config={config} data={chartData} />\n        );\n    }\n    return (\n        <>\n            <ChartBuilderTextWrapper\n                active={config.metadata.active}\n                width={config.layout.width}\n                horizontalRules={config.layout.horizontalRules}\n                title={config.metadata.title}\n                subtitle={config.metadata.subtitle}\n                note={config.metadata.note}\n                source={config.metadata.source}\n                tag={config.metadata.tag}\n            >\n                <ResizableBox\n                    size={{\n                        height,\n                        width,\n                    }}\n                    minHeight=\"50\"\n                    minWidth=\"50\"\n                    enable={{\n                        top: false,\n                        right: false,\n                        bottom: false,\n                        left: false,\n                        topRight: false,\n                        bottomRight: isSelected ? true : false,\n                        bottomLeft: false,\n                        topLeft: false,\n                    }}\n                    onResizeStop={(event, direction, elt, delta) => {\n                        setAttributes({\n                            height: parseInt(\n                                parseInt(height) + parseInt(delta.height),\n                                10,\n                            ),\n                            width: parseInt(\n                                parseInt(width) + parseInt(delta.width),\n                                10,\n                            ),\n                        });\n                        toggleSelection(true);\n                    }}\n                    onResizeStart={() => {\n                        toggleSelection(false);\n                    }}\n                >\n                    <ChartControls\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        parentBlock={parentBlockId}\n                        clientId={clientId}\n                    />\n                    {renderedChart}\n                    <canvas id=\"canvas\" width=\"800\" height=\"400\"></canvas>\n                </ResizableBox>\n            </ChartBuilderTextWrapper>\n        </>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\n\nimport { Fragment } from '@wordpress/element';\n\n/** Returns a server side block callback */\nconst save = ({ attributes }) => {\n    return <Fragment></Fragment>;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport './styles.css';\n\nconst { name } = metadata;\nconst settings = {\n    title: __('Chart'),\n    icon: 'chart-line',\n    description: __('Chart element for Chart Builder.'),\n    keywords: [__('chart')],\n    example: {\n        attributes: {\n            chartType: 'bar',\n            className: 'is-style-bar',\n        },\n    },\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n"],"sourceRoot":""}