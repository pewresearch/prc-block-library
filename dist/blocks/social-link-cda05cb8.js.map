{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///external \"React\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.components\"","webpack:///./src/social-link/edit.js","webpack:///./src/social-link/index.js","webpack:///./src/social-link/save.js","webpack:///external \"wp.data\"","webpack:///external \"wp.blocks\""],"names":["module","exports","wp","element","i18n","React","blockEditor","components","edit","attributes","setAttributes","className","isSelected","description","clientId","context","title","label","icon","blockProps","url","useBlockProps","classnames","__","value","onChange","descriptionValue","help","titleValue","autoComplete","options","i","Icon","name","metadata","settings","shareIcon","__experimentalLabel","merge","leftAttributes","rightLabel","save","Content","registerBlockType","data","blocks"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUC,GAAGE,M,iBCApBJ,EAAOC,QAAUI,O,gBCAjBL,EAAOC,QAAUC,GAAGI,a,qdCApBN,EAAOC,QAAUC,GAAGK,Y,+KC0FLC,EA3DF,SAAC,GAOP,IANHC,EAME,EANFA,WACAC,EAKE,EALFA,cACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,WAIQC,GADN,EAFFC,SAEE,EADFC,QAEiDN,EAAzCI,aAAoBG,GAAqBP,EAA5BQ,MAA4BR,EAArBO,OAAOE,EAAcT,EAAdS,KAC7BC,GAD2CV,EAARW,IACtBC,wBAAc,CAC7BV,UAAWW,IAAW,OAAQX,EAAW,CACrC,cAAeC,OAIvB,OACI,oBAAC,WAAD,KACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWI,MAAOO,aAAG,kBACjB,oBAAC,kBAAD,CACIC,MAAOX,GAAe,GACtBY,SAAU,SAAAC,GACNhB,EAAc,CAAEG,YAAaa,KAEjCT,MAAOM,aAAG,eACVI,KAAMJ,aACF,qFAGR,oBAAC,cAAD,CACIC,MAAOR,GAAS,GAChBS,SAAU,SAAAG,GACNlB,EAAc,CAAEM,MAAOY,KAE3BX,MAAOM,aAAG,cACVM,aAAa,QAEjB,oBAAC,gBAAD,CACIZ,MAAM,cACNO,MAAON,EACPY,QAAS,CACL,CAAEb,MAAO,yBAA0BO,MAAO,IAC1C,CAAEP,MAAO,WAAYO,MAAO,YAC5B,CAAEP,MAAO,UAAWO,MAAO,WAC3B,CAAEP,MAAO,WAAYO,MAAO,YAC5B,CAAEP,MAAO,QAASO,MAAO,UAE7BC,SAAU,SAAAM,GAAC,OAAIrB,EAAc,CAAEQ,KAAMa,SAKjD,0BAASZ,EACL,oBAACa,EAAA,EAAD,CAAMC,KAAMf,O,6kBCtEpBe,EAASC,EAATD,KAEFE,EAAW,CACbnB,MAAOO,aAAG,eACVL,KAAMkB,IACNvB,YAAaU,aACT,6EAkBJc,oBAAqB,qBAAGpB,OACxBqB,MAvBa,SAuBPC,EAvBO,GAuBsC,IAAD,IAA1BtB,MAAOuB,OAAmB,MAAN,GAAM,EAC9C,OAAO,EAAP,KACOD,GADP,IAEItB,MAAOsB,EAAetB,MAAQuB,KAGtChC,OACAiC,KCzCW,WACX,OAAO,oBAAC,cAAYC,QAAb,QD2CXC,4BAAkBV,EAAD,OAAYC,GAAaC,K,gBEjD1CnC,EAAOC,QAAUC,GAAG0C,M,gBCApB5C,EAAOC,QAAUC,GAAG2C,S","file":"blocks/social-link-cda05cb8.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","module.exports = React;","module.exports = wp.blockEditor;","module.exports = wp.components;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { Icon } from 'semantic-ui-react';\n/**\n * WordPress dependencies\n */\nimport {\n    useSelect,\n    useDispatch,\n    withDispatch,\n    withSelect,\n} from '@wordpress/data';\nimport {\n    PanelBody,\n    SelectControl,\n    TextControl,\n    TextareaControl,\n    ToolbarButton,\n    ToolbarGroup,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\n\nconst isStyle = (needle, haystack) => {\n    const arr = haystack.split(' ');\n    return arr.includes(needle);\n};\n\nconst edit = ({\n    attributes,\n    setAttributes,\n    className,\n    isSelected,\n    clientId,\n    context,\n}) => {\n    const { description, label, title, icon, url } = attributes;\n    const blockProps = useBlockProps({\n        className: classnames('item', className, {\n            'is-selected': isSelected,\n        }),\n    });\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Link settings')}>\n                    <TextareaControl\n                        value={description || ''}\n                        onChange={descriptionValue => {\n                            setAttributes({ description: descriptionValue });\n                        }}\n                        label={__('Description')}\n                        help={__(\n                            'The description will be displayed in the menu if the current theme supports it.',\n                        )}\n                    />\n                    <TextControl\n                        value={title || ''}\n                        onChange={titleValue => {\n                            setAttributes({ title: titleValue });\n                        }}\n                        label={__('Link title')}\n                        autoComplete=\"off\"\n                    />\n                    <SelectControl\n                        label=\"Select Icon\"\n                        value={icon}\n                        options={[\n                            { label: '(Click to select icon)', value: '' },\n                            { label: 'Facebook', value: 'facebook' },\n                            { label: 'Twitter', value: 'twitter' },\n                            { label: 'LinkedIn', value: 'linkedin' },\n                            { label: 'Print', value: 'print' },\n                        ]}\n                        onChange={i => setAttributes({ icon: i })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <Icon name={icon} />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { share as shareIcon } from '@wordpress/icons';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Social Link'),\n    icon: shareIcon,\n    description: __(\n        'Add a link to a social network to a profile or to share the current post.',\n    ),\n    // variations: [\n    //     {\n    //         name: 'link',\n    //         isDefault: true,\n    //         title: __('Link'),\n    //         description: __('A link to a URL.'),\n    //         attributes: {},\n    //     },\n    //     {\n    //         name: 'post',\n    //         icon: postIcon,\n    //         title: __('Post Link'),\n    //         description: __('A link to a post.'),\n    //         attributes: { type: 'post' },\n    //     },\n    // ],\n    __experimentalLabel: ({ label }) => label,\n    merge(leftAttributes, { label: rightLabel = '' }) {\n        return {\n            ...leftAttributes,\n            label: leftAttributes.label + rightLabel,\n        };\n    },\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save() {\n    return <InnerBlocks.Content />;\n}\n","module.exports = wp.data;","module.exports = wp.blocks;"],"sourceRoot":""}