{"version":3,"sources":["webpack:///external \"React\"","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"data\"]","webpack:///./node_modules/classnames/index.js","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"primitives\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///./node_modules/@wordpress/icons/build-module/library/share.js","webpack:///./src/social-link/edit.js","webpack:///./src/social-link/index.js","webpack:///./src/social-link/save.js"],"names":["module","exports","window","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","viewBox","xmlns","d","edit","attributes","setAttributes","className","isSelected","description","title","label","icon","blockProps","url","useBlockProps","classnames","useSelect","select","bitly","getEditedPostAttribute","postTitle","postId","getCurrentPostId","shortUrl","useEffect","console","log","__","value","onChange","descriptionValue","help","titleValue","autoComplete","options","Icon","name","metadata","settings","shareIcon","__experimentalLabel","merge","leftAttributes","rightLabel","save","Content","registerBlockType"],"mappings":"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","file":"blocks/social-link-bea14331.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}}else if(argType==='object'){if(arg.toString===Object.prototype.toString){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}else{classes.push(arg.toString());}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{Path,SVG}from'@wordpress/primitives';var share=createElement(SVG,{viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\"},createElement(Path,{d:\"M9 11.8l6.1-4.5c.1.4.4.7.9.7h2c.6 0 1-.4 1-1V5c0-.6-.4-1-1-1h-2c-.6 0-1 .4-1 1v.4l-6.4 4.8c-.2-.1-.4-.2-.6-.2H6c-.6 0-1 .4-1 1v2c0 .6.4 1 1 1h2c.2 0 .4-.1.6-.2l6.4 4.8v.4c0 .6.4 1 1 1h2c.6 0 1-.4 1-1v-2c0-.6-.4-1-1-1h-2c-.5 0-.8.3-.9.7L9 12.2v-.4z\"}));export default share;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { Icon } from 'semantic-ui-react';\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n    PanelBody,\n    SelectControl,\n    TextControl,\n    TextareaControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { Fragment, useEffect } from '@wordpress/element';\n\nconst edit = ({ attributes, setAttributes, className, isSelected }) => {\n    const { description, label, title, icon, url } = attributes;\n    const blockProps = useBlockProps({\n        className: classnames('item', className, {\n            'is-selected': isSelected,\n        }),\n    });\n\n    const { postId, postTitle, shortUrl } = useSelect(select => {\n        const { bitly } = select('core/editor').getEditedPostAttribute('meta');\n        return {\n            postTitle: select('core/editor').getEditedPostAttribute('title'),\n            postId: select('core/editor').getCurrentPostId(),\n            shortUrl: bitly,\n        };\n    });\n\n    useEffect(() => {\n        console.log('shortUrl', shortUrl, postId);\n        setAttributes({ url: shortUrl, title: postTitle });\n    }, [postId, postTitle]);\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Link settings')}>\n                    <TextareaControl\n                        value={description || ''}\n                        onChange={descriptionValue => {\n                            setAttributes({ description: descriptionValue });\n                        }}\n                        label={__('Description')}\n                        help={__(\n                            'The description will be displayed in the menu if the current theme supports it.',\n                        )}\n                    />\n                    <TextControl\n                        value={title || ''}\n                        onChange={titleValue => {\n                            setAttributes({ title: titleValue });\n                        }}\n                        label={__('Link title')}\n                        autoComplete=\"off\"\n                    />\n                    <SelectControl\n                        label=\"Select Icon\"\n                        value={icon}\n                        options={[\n                            { label: '(Click to select icon)', value: '' },\n                            { label: 'Facebook', value: 'facebook' },\n                            { label: 'Twitter', value: 'twitter' },\n                            { label: 'LinkedIn', value: 'linkedin' },\n                            { label: 'Print', value: 'print' },\n                        ]}\n                        onChange={i => setAttributes({ icon: i })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <Icon name={icon} />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { share as shareIcon } from '@wordpress/icons';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Social Link'),\n    icon: shareIcon,\n    description: __(\n        'Add a link to a social network to a profile or to share the current post.',\n    ),\n    // variations: [\n    //     {\n    //         name: 'link',\n    //         isDefault: true,\n    //         title: __('Link'),\n    //         description: __('A link to a URL.'),\n    //         attributes: {},\n    //     },\n    //     {\n    //         name: 'post',\n    //         icon: postIcon,\n    //         title: __('Post Link'),\n    //         description: __('A link to a post.'),\n    //         attributes: { type: 'post' },\n    //     },\n    // ],\n    __experimentalLabel: ({ label }) => label,\n    merge(leftAttributes, { label: rightLabel = '' }) {\n        return {\n            ...leftAttributes,\n            label: leftAttributes.label + rightLabel,\n        };\n    },\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nexport default function save() {\n    return <InnerBlocks.Content />;\n}\n"],"sourceRoot":""}