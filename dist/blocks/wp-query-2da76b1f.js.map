{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/wp-query/edit.js","webpack:///./src/wp-query/save.js","webpack:///./src/wp-query/index.js","webpack:///external \"wp.blockEditor\"","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///external \"wp.data\"","webpack:///external \"wp.blocks\""],"names":["module","exports","wp","element","i18n","path","replace","window","concat","ALLOWED","edit","attributes","setAttributes","className","blockProps","clientId","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","renderAppender","InnerBlocks","ButtonBlockAppender","save","name","metadata","settings","title","__","description","registerBlockType","blockEditor","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","data","blocks"],"mappings":";;;;;;;;;;;;;;;;;sHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUC,GAAGE,M,gCCSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,0ICQ5CI,EAAU,CAAC,wBAaFC,EAXF,SAAC,GAAuD,EAArDC,WAAqD,EAAzCC,cAA0C,IAA3BC,EAA0B,EAA1BA,UACjCC,GAD2D,EAAfC,SAC/BC,wBAAc,CAAEH,eAC7BI,EAAmBC,4CAAoBJ,EAAY,CACrDK,cAAeV,EACfW,YAAa,WACbC,eAAgBC,cAAYC,sBAGhC,OAAO,0BAASN,ICpBLO,EAFF,SAAC,GAAD,EAAGb,WAAH,OAAoB,oBAAC,WAAD,O,6kBCOzBc,EAASC,EAATD,KAEFE,EAAW,CACbC,MAAOC,aAAG,SACVC,YAAaD,aACT,0FAEJnB,OACAc,QAGJO,4BAAkBN,EAAD,OAAYC,GAAaC,K,gBCxB1C3B,EAAOC,QAAUC,GAAG8B,a,+BCAL,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,gBCAAlC,EAAOC,QAAUC,GAAGwC,M,ibCApB1C,EAAOC,QAAUC,GAAGyC,S","file":"blocks/wp-query-2da76b1f.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    InnerBlocks,\n    InspectorControls,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    __experimentalBlockVariationPicker,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\nconst ALLOWED = ['prc-block/story-item'];\n\nconst edit = ({ attributes, setAttributes, className, clientId }) => {\n    const blockProps = useBlockProps({ className });\n    const innerBlocksProps = useInnerBlocksProps(blockProps, {\n        allowedBlocks: ALLOWED,\n        orientation: 'vertical',\n        renderAppender: InnerBlocks.ButtonBlockAppender,\n    });\n\n    return <div {...innerBlocksProps} />;\n};\n\nexport default edit;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = ({ attributes }) => <Fragment />;\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Query'),\n    description: __(\n        'Query posts by format, topic, region, and/or date. Posts are displayed as Story Items.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = wp.data;","module.exports = wp.blocks;"],"sourceRoot":""}