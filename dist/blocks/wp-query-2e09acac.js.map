{"version":3,"sources":["webpack:///external \"React\"","webpack:///./node_modules/classnames/index.js","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///external [\"wp\",\"primitives\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///external [\"wp\",\"components\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external \"lodash\"","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external \"moment\"","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"keycodes\"]","webpack:///external \"ReactDOM\"","webpack:///./node_modules/@wordpress/icons/build-module/library/post-list.js","webpack:///./node_modules/@wordpress/icons/build-module/library/close-small.js","webpack:///./src/wp-query/taxQuery.js","webpack:///./src/wp-query/fetch.js","webpack:///./src/wp-query/controls.js","webpack:///./src/wp-query/edit.js","webpack:///./src/wp-query/save.js","webpack:///./src/wp-query/index.js","webpack:///external [\"wp\",\"blocks\"]"],"names":["module","exports","window","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","_typeof","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","_slicedToArray","arr","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","value","err","unsupportedIterableToArray","nonIterableRest","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","slice","constructor","name","from","test","_arrayWithHoles","_nonIterableRest","TypeError","moment","viewBox","xmlns","d","TaxonomyField","index","label","taxonomy","options","taxQuery","setAttributes","isLink","icon","closeSmall","onClick","tmpData","data","splice","lable","__","style","margin","onChange","val","showInitialSuggestions","suggestionsQuery","type","subtype","id","title","url","terms","settings","TaxQuery","relation","useState","setOptions","useEffect","selectedTaxonomies","map","nextOptions","includes","disabled","toLowerCase","split","s","charAt","toUpperCase","substring","getLabel","marginTop","marginBottom","help","checked","isSecondary","isSmall","fetchPosts","attributes","Promise","resolve","console","log","request","method","path","apiFetch","then","results","forEach","result","dateString","excerpt","date","timestamp","format","link","image","Fields","postsPerPage","storyItemDisableExcerpt","storyItemImageSlot","storyItemImageSize","className","min","max","required","Controls","posts","setPosts","clientId","postId","busy","toggleBusy","clickHandler","setTimeout","tmp","filter","e","undefined","isBusy","isPrimary","isColumnLayout","Posts","labelTaxonomy","isPubListing","isColumns","p","imageSlot","args","extra","postID","emphasis","isChartArt","imageSize","horizontal","stacked","enableHeader","enableMeta","enableExcerpt","enableExtra","inLoop","enableAltTaxonomy","headerSize","edit","classnames","blockProps","useBlockProps","useSelect","select","getCurrentPostId","isInteger","save","Content","metadata","description","registerBlockType"],"mappings":"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","file":"blocks/wp-query-2e09acac.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}}else if(argType==='object'){if(arg.toString===Object.prototype.toString){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}else{classes.push(arg.toString());}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","(function() { module.exports = window[\"wp\"][\"components\"]; }());","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"lodash\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","module.exports = moment;","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"keycodes\"]; }());","(function() { module.exports = window[\"ReactDOM\"]; }());","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{Path,SVG}from'@wordpress/primitives';var postList=createElement(SVG,{viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\"},createElement(Path,{d:\"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H6c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h12c.3 0 .5.2.5.5v12zM7 11h2V9H7v2zm0 4h2v-2H7v2zm3-4h7V9h-7v2zm0 4h7v-2h-7v2z\"}));export default postList;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var closeSmall=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\"}));export default closeSmall;","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch, select } from '@wordpress/data';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    SelectControl,\n    ToggleControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\nimport { closeSmall } from '@wordpress/icons';\n\nconst TaxonomyField = ({\n    index,\n    label,\n    taxonomy = false,\n    value,\n    options,\n    taxQuery,\n    setAttributes,\n}) => {\n    const onRemove = () => {\n        const tmpData = taxQuery;\n        tmpData.data.splice(index, 1);\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTaxonomyChange = val => {\n        const tmpData = taxQuery;\n        tmpData.data[index].taxonomy = val;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTermChange = val => {\n        const { id, title, url } = val;\n        const tmpData = taxQuery;\n        tmpData.data[index].terms = id;\n        tmpData.data[index].title = title;\n        tmpData.data[index].value = url;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    return (\n        <div>\n            <Flex>\n                <FlexBlock>\n                    <strong>{label}</strong>\n                </FlexBlock>\n                <FlexItem>\n                    <Button\n                        isLink\n                        icon={closeSmall}\n                        onClick={onRemove}\n                        lable={__(`Remove taxonomy argument`)}\n                    />\n                </FlexItem>\n            </Flex>\n            {false === taxonomy && (\n                <div style={{ margin: '16px' }}>\n                    <SelectControl\n                        value={taxonomy}\n                        options={options}\n                        onChange={onTaxonomyChange}\n                    />\n                </div>\n            )}\n            {false !== taxonomy && null === value && (\n                <LinkControl\n                    label={__(`Term`)}\n                    value={value}\n                    showInitialSuggestions\n                    suggestionsQuery={{ type: 'term', subtype: taxonomy }}\n                    onChange={onTermChange}\n                    settings={[]}\n                />\n            )}\n            <HorizontalRule />\n        </div>\n    );\n};\n\nconst TaxQuery = ({ taxQuery, setAttributes }) => {\n    const { relation, data } = taxQuery;\n    const [options, setOptions] = useState([\n        { label: 'Select a Taxonomy', value: false },\n        { label: 'Topics', value: 'topic' },\n        { label: 'Formats', value: 'formats' },\n        { label: 'Research Areas', value: 'research-areas' },\n    ]);\n\n    const toggleRelation = () => {\n        const tmpData = taxQuery;\n        if ('OR' === tmpData.relation) {\n            tmpData.relation = 'AND';\n        } else {\n            tmpData.relation = 'OR';\n        }\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n\n    const getLabel = val => {\n        const { taxonomy, title } = val;\n        let label =\n            false === taxonomy ? `Choose Taxonomy` : `Choose ${taxonomy} Term`;\n        if (null !== title && false !== taxonomy) {\n            label = `${taxonomy}: ${title}`;\n        }\n        return label\n            .toLowerCase()\n            .split(' ')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n    };\n\n    /**\n     * Disable any taxonomy options that are already selected.\n     */\n    useEffect(() => {\n        // Go gather up selected taxonomies from taxQuery.data,\n        const selectedTaxonomies = data.map(({ taxonomy }) => taxonomy);\n        const nextOptions = options.map(o => {\n            if (selectedTaxonomies.includes(o.value)) {\n                o.disabled = true;\n            } else {\n                o.disabled = false;\n            }\n            return o;\n        });\n        setOptions(nextOptions);\n    }, [taxQuery]);\n    // Dont offer to change relation unless if data has more than one\n\n    return (\n        <Fragment>\n            <div>\n                {data.map((d, index) => {\n                    const { taxonomy, value } = d;\n                    const label = getLabel(d);\n                    return (\n                        <TaxonomyField\n                            index={index}\n                            label={__(label)}\n                            taxonomy={taxonomy}\n                            value={value}\n                            options={options}\n                            taxQuery={taxQuery}\n                            setAttributes={setAttributes}\n                        />\n                    );\n                })}\n                {2 <= data.length && (\n                    <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n                        <ToggleControl\n                            label=\"Query Relation (OR|AND)\"\n                            help={\n                                'AND' === relation\n                                    ? 'AND (restrictive: restricts content)'\n                                    : 'OR (expansive: expands content)'\n                            }\n                            checked={'AND' === relation}\n                            onChange={toggleRelation}\n                        />\n                    </div>\n                )}\n            </div>\n            <Button\n                isSecondary\n                isSmall\n                onClick={() => {\n                    const tmpData = taxQuery;\n                    tmpData.data.push({\n                        taxonomy: false,\n                        terms: null,\n                        value: null,\n                    });\n                    setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n                }}\n            >\n                Add Taxonomy\n            </Button>\n        </Fragment>\n    );\n};\n\nexport default TaxQuery;\n","import * as moment from 'moment';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst fetchPosts = attributes => {\n    const formatDate = dateString => {\n        const defaultFormat = 'MMM D, YYYY';\n        const date = moment(dateString).format(defaultFormat);\n        return date;\n    };\n\n    return new Promise(resolve => {\n        const data = [];\n        console.log('fetchPosts?', attributes);\n\n        const request = {\n            method: 'POST',\n            path: '/prc-api/v2/block/wp-query',\n            data: attributes,\n        };\n\n        apiFetch(request).then(results => {\n            console.log(results);\n            // eslint-disable-next-line no-plusplus\n            results.forEach(result => {\n                const d = {\n                    id: result.id,\n                    title: result.title,\n                    excerpt: result.excerpt,\n                    date: formatDate(result.timestamp),\n                    link: result.link,\n                    label: result.label,\n                    image: result.image,\n                };\n                data.push(d);\n            });\n            resolve(data);\n        });\n    });\n};\n\nexport default fetchPosts;\n","/* eslint-disable radix */\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    PanelBody,\n    Placeholder,\n    RangeControl,\n    SelectControl,\n    ToggleControl,\n    TextControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport TaxQuery from './taxQuery';\nimport fetchPosts from './fetch';\n\nconst Fields = ({ attributes, setAttributes, disabled }) => {\n    const {\n        postsPerPage,\n        storyItemDisableExcerpt,\n        storyItemImageSlot,\n        storyItemImageSize,\n        taxQuery,\n    } = attributes;\n\n    return (\n        <Fragment>\n            <div>\n                <h4 className=\"sans-serif\">Story Item Settings</h4>\n                <ToggleControl\n                    label=\"Disable Images\"\n                    checked={'disabled' === storyItemImageSlot}\n                    onChange={() =>\n                        setAttributes({\n                            storyItemImageSlot:\n                                !'disabled' === storyItemImageSlot,\n                        })\n                    }\n                    disabled={disabled}\n                />\n                <ToggleControl\n                    label=\"Disable Excerpt\"\n                    checked={storyItemDisableExcerpt}\n                    onChange={() =>\n                        setAttributes({\n                            storyItemDisableExcerpt: !storyItemDisableExcerpt,\n                        })\n                    }\n                    disabled={disabled}\n                />\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Query Arguments</h4>\n                <RangeControl\n                    label={__('Number of posts')}\n                    value={postsPerPage}\n                    onChange={val => setAttributes({ postsPerPage: val })}\n                    min={3}\n                    max={10}\n                    required\n                    disabled={disabled}\n                />\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Taxonomy Query Arguments</h4>\n                <TaxQuery taxQuery={taxQuery} setAttributes={setAttributes} />\n            </div>\n\n            <HorizontalRule />\n        </Fragment>\n    );\n};\n\nconst Controls = ({ attributes, setAttributes, posts, setPosts, clientId }) => {\n    const { postId, postsPerPage } = attributes;\n    const [busy, toggleBusy] = useState(false);\n\n    const clickHandler = () => {\n        toggleBusy(true);\n        fetchPosts(attributes).then(data => {\n            setTimeout(() => {\n                toggleBusy(false);\n                const tmp = data.filter((e, index) => {\n                    return index <= postsPerPage - 1;\n                });\n                setPosts(tmp);\n            }, 3600);\n        });\n    };\n\n    useEffect(() => {\n        console.log('initial load', postId);\n        if (undefined !== postId) {\n            fetchPosts(attributes).then(data => {\n                setTimeout(() => {\n                    const tmp = data.filter((e, index) => {\n                        return index <= postsPerPage - 1;\n                    });\n                    setPosts(tmp);\n                }, 3600);\n            });\n        }\n    }, [clientId]);\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Query Arguments')}>\n                    <Fields\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        disabled={busy}\n                    />\n                    <Button\n                        isBusy={busy}\n                        isPrimary\n                        onClick={() => clickHandler()}\n                    >\n                        Update\n                    </Button>\n                </PanelBody>\n            </InspectorControls>\n            {false === posts && undefined === postId && (\n                <Placeholder label=\"Configure Query Args\" isColumnLayout>\n                    <div>\n                        <Fields\n                            attributes={attributes}\n                            setAttributes={setAttributes}\n                            disabled={busy}\n                        />\n                        <Button\n                            isBusy={busy}\n                            isPrimary\n                            onClick={() => clickHandler()}\n                        >\n                            Query Posts\n                        </Button>\n                    </div>\n                </Placeholder>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Controls;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { StoryItem } from '@pewresearch/app-components';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { isInteger } from 'lodash';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './controls';\n\nconst Posts = ({ posts, attributes }) => {\n    if (false === posts) {\n        return <Fragment />;\n    }\n\n    const {\n        labelTaxonomy,\n        storyItemDisableExcerpt,\n        storyItemImageSize,\n        storyItemImageSlot,\n        className,\n    } = attributes;\n\n    const isPubListing = 'is-style-pub-listing' === className;\n    const isColumns = 'is-style-columns' === className;\n\n    return (\n        <Fragment>\n            {posts.map(p => {\n                let imageSlot = 'disabled' === storyItemImageSlot;\n                if (isColumns && 'left' === imageSlot) {\n                    imageSlot = 'top';\n                }\n                const args = {\n                    title: p.title,\n                    image: p.image,\n                    excerpt: p.excerpt,\n                    link: p.link,\n                    label: p.label,\n                    date: p.date,\n                    extra: '',\n                    // Post Meta Data:\n                    postID: p.id,\n                    // Item Options\n                    emphasis: false,\n                    // Image Position:\n                    isChartArt: false,\n                    imageSlot,\n                    imageSize: storyItemImageSize,\n                    horizontal: isPubListing,\n                    stacked: isColumns,\n                    // Misc Toggles:\n                    enableHeader: true,\n                    enableMeta: true,\n                    enableExcerpt: !storyItemDisableExcerpt,\n                    enableExtra: false,\n                    inLoop: isPubListing,\n                    enableAltTaxonomy: 'research-areas' === labelTaxonomy,\n                    headerSize: 2,\n                    className:\n                        'left' === storyItemImageSlot\n                            ? 'is-style-left'\n                            : 'is-style-disabled',\n                };\n                if (isColumns) {\n                    return (\n                        <div className=\"column\">\n                            <StoryItem {...args} />\n                        </div>\n                    );\n                }\n                return <StoryItem {...args} />;\n            })}\n        </Fragment>\n    );\n};\n\nconst edit = ({ attributes, setAttributes, clientId }) => {\n    const { className } = attributes;\n\n    const [posts, setPosts] = useState(false);\n\n    const classNames = classnames({\n        'ui equal width divided grid': 'is-style-columns' === className,\n        'ui link divided items': 'is-style-pub-listing' === className,\n    });\n\n    const blockProps = useBlockProps({ className: classNames });\n\n    const { postId } = useSelect(\n        select => {\n            return {\n                postId: select('core/editor').getCurrentPostId(),\n            };\n        },\n        [clientId],\n    );\n\n    useEffect(() => {\n        if (false !== posts && isInteger(postId)) {\n            setAttributes({ postId });\n        }\n    }, [postId, posts]);\n\n    return (\n        <div {...blockProps}>\n            <Controls\n                attributes={attributes}\n                setAttributes={setAttributes}\n                posts={posts}\n                setPosts={setPosts}\n                clientId={clientId}\n            />\n            <Posts posts={posts} attributes={attributes} />\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { postList as icon } from '@wordpress/icons';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Query'),\n    description: __(\n        'Query posts by format, topic, region, and/or date. Posts are displayed as Story Items.',\n    ),\n    icon,\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}