{"version":3,"sources":["webpack:///./src/tabs/panes/edit.js","webpack:///./src/tabs/panes/save.js","webpack:///./src/tabs/panes/index.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["ALLOWED_BLOCKS","Edit","attributes","context","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","templateLock","renderAppender","save","Content","name","metadata","settings","edit","registerBlockType","path","replace","window","concat","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable"],"mappings":";;;;;;;;;;;;;;;;;wLASMA,EAAiB,CAAC,wCAeTC,MAbf,YAAuC,EAAvBC,WAAuB,EAAXC,QAAY,IACjCC,EAAaC,wBAAc,IAE3BC,EAAmBC,8BAAoBH,EAAY,CACxDI,cAAeR,EACfS,YAAa,WACbC,cAAc,EACdC,gBAAgB,IAGjB,OAAO,0BAASL,ICdFM,EAFF,kBAAM,oBAAC,cAAYC,QAAb,O,ykBCQnB,IAAQC,EAASC,EAATD,KAEFE,EAAW,CAChBC,OACAL,QAGDM,4BAAkBJ,EAAD,OAAYC,GAAaC,K,mBCX1B,IAAIG,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,gBCVpCI,EAAOC,QAAUH,OAAW,GAAQ,M,spBCApCE,EAAOC,QAAUH,OAAW,GAAe,a,gBCA3CE,EAAOC,QAAUH,OAAW,GAAU,Q,+BCArC,SAASI,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC","file":"blocks/tabs-panes-6abdd17e.js","sourcesContent":["/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\nconst ALLOWED_BLOCKS = ['prc-block/topic-index-condensed-page'];\n\nfunction Edit({ attributes, context }) {\n\tconst blockProps = useBlockProps({});\n\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\torientation: 'vertical',\n\t\ttemplateLock: false,\n\t\trenderAppender: false,\n\t});\n\n\treturn <div {...innerBlocksProps} />;\n}\n\nexport default Edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => <InnerBlocks.Content />;\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n\tedit,\n\tsave,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}