{"version":3,"sources":["webpack:///external \"React\"","webpack:///./src/staff-listing/edit.js","webpack:///./src/staff-listing/save.js","webpack:///./src/staff-listing/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///external [\"wp\",\"primitives\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"htmlEntities\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///external [\"wp\",\"coreData\"]","webpack:///external [\"wp\",\"date\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external \"regeneratorRuntime\"","webpack:///external \"ReactDOM\"","webpack:///external [\"wp\",\"keycodes\"]","webpack:///external [\"wp\",\"mediaUtils\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"data\"]"],"names":["module","exports","window","capitalize","s","replace","w","c","toUpperCase","SelectTerms","taxonomy","attribute","selected","setAttributes","useState","selectedTerms","setSelectedTerms","options","setOptions","useEffect","getTermsAsOptions","then","terms","toSend","label","map","option","key","value","checked","includes","onChange","filter","term","edit","attributes","staffTypes","expertise","researchTeams","staff","staffPosts","setStaffPosts","loading","setLoading","blockProps","useBlockProps","t","e","r","payload","staff_types","join","areas_of_expertise","research_teams","apiFetch","path","addQueryArgs","d","console","log","loadPosts","title","icon","__","Object","keys","length","class","name","job_title","save","metadata","settings","registerBlockType","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","from","test","_arrayWithHoles","isArray","_nonIterableRest","TypeError","_toConsumableArray","arrayLikeToArray","iterableToArray","_iterableToArray","iter","regeneratorRuntime"],"mappings":"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","file":"blocks/staff-listing-e028f4bd.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","/**\n * External Dependencies\n */\nimport { getTermsAsOptions } from '@prc-app/shared';\n/**\n * WordPress Dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport {addQueryArgs} from '@wordpress/url';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\nimport { BaseControl, CheckboxControl, CardDivider, Placeholder, Spinner, PanelBody } from '@wordpress/components';\n\nconst capitalize = (s) => {\n\tif (typeof s !== 'string') {\n\t\treturn '';\n\t}\n\treturn s.replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))\n}\n\nconst SelectTerms = ({taxonomy = 'staff-type', attribute ='staffTypes', selected = [], setAttributes}) => {\n\tconst [selectedTerms, setSelectedTerms] = useState(selected);\n\tconst [options, setOptions] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetTermsAsOptions(taxonomy).then(terms => {\n\t\t\tsetOptions(terms);\n\t\t});\n\t}, [taxonomy]);\n\n\tuseEffect(()=>{\n\t\tconst toSend = {};\n\t\ttoSend[attribute] = [...selectedTerms];\n\t\tsetAttributes(toSend);\n\t}, [selectedTerms]);\n\n\treturn (\n\t\t<BaseControl label={capitalize(taxonomy.replace('-', ' '))}>\n\t\t\t{options.map(option => {\n\t\t\t\treturn (\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tkey={option.value}\n\t\t\t\t\t\tlabel={option.label}\n\t\t\t\t\t\tchecked={selectedTerms.includes(option.value)}\n\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\tif (selectedTerms.includes(option.value)) {\n\t\t\t\t\t\t\t\tsetSelectedTerms(selectedTerms.filter(term => term !== option.value));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetSelectedTerms([...selectedTerms, option.value]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<CardDivider/>\n\t\t</BaseControl>\n\t);\n}\n\nconst edit = ({ attributes, setAttributes }) => {\n    const { staffTypes, expertise, researchTeams } = attributes;\n\tconst [staffPosts, setStaffPosts] = useState({'executive-team': [], 'managing-directors': [], staff: []});\n\tconst [loading, setLoading] = useState(true);\n\n    const blockProps = useBlockProps();\n\n\tconst loadPosts = (t = [], e = [], r = []) => {\n\t\tconst payload = {\n\t\t\tstaff_types: t.join(','),\n\t\t\tareas_of_expertise: e.join(','),\n\t\t\tresearch_teams: r.join(',')\n\t\t}\n\t\tsetLoading(true);\n\t\tapiFetch({\n            path: addQueryArgs('/prc-api/v2/blocks/staff-listing', payload),\n        }).then(d => {\n\t\t\tconsole.log(d);\n\t\t\tsetStaffPosts({...staffPosts, ...d});\n        });\n\t}\n\n\tuseEffect(()=>{\n\t\tloadPosts(staffTypes, expertise, researchTeams);\n\t},[staffTypes, expertise, researchTeams]);\n\n\tuseEffect(()=>{\n\t\tconsole.log('staffPosts changed', staffPosts);\n\t\tsetLoading(false);\n\t},[staffPosts]);\n\n    return (\n\t\t<Fragment>\n\t\t\t<InspectorControls>\n                <PanelBody title=\"Staff Listing Options\">\n\t\t\t\t\t<SelectTerms taxonomy=\"staff-type\" attribute=\"staffTypes\" selected={staffTypes} setAttributes={setAttributes} />\n\t\t\t\t\t<SelectTerms taxonomy=\"areas-of-expertise\" attribute=\"expertise\" selected={expertise} setAttributes={setAttributes} />\n\t\t\t\t\t<SelectTerms taxonomy=\"research-teams\" attribute=\"researchTeams\" selected={researchTeams} setAttributes={setAttributes} />\n                </PanelBody>\n            </InspectorControls>\n\t\t\t<div {...blockProps} >\n\t\t\t\t{loading && (\n\t\t\t\t\t<Placeholder\n\t\t\t\t\t\ticon=\"\"\n\t\t\t\t\t\tlabel={__('Staff Listing')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span><Spinner />{` Loading Staff Database...`}</span>\n\t\t\t\t\t</Placeholder>\n\t\t\t\t)}\n\t\t\t\t{false === loading && Object.keys(staffPosts).map(term => {\n\t\t\t\t\tif ( staffPosts[term].length <= 0 ) {\n\t\t\t\t\t\treturn <Fragment/>\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<h2>{capitalize(term.replace('-', ' '))}</h2>\n\t\t\t\t\t\t<div class=\"ui list\">\n\t\t\t\t\t\t\t{staffPosts[term].map(staff => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<div class=\"item sans-serif\">\n\t\t\t\t\t\t\t\t\t\t<p><strong>{staff.name}</strong>, {staff.job_title}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default edit;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\n\nconst save = () => {\n    return <Fragment />;\n};\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"htmlEntities\"]; }());","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","(function() { module.exports = window[\"wp\"][\"coreData\"]; }());","(function() { module.exports = window[\"wp\"][\"date\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","module.exports = regeneratorRuntime;","(function() { module.exports = window[\"ReactDOM\"]; }());","(function() { module.exports = window[\"wp\"][\"keycodes\"]; }());","(function() { module.exports = window[\"wp\"][\"mediaUtils\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());"],"sourceRoot":""}