{"version":3,"sources":["webpack:///external [\"wp\",\"domReady\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/paragraph/index.js","webpack:///external [\"wp\",\"blocks\"]"],"names":["module","exports","window","path","replace","concat","registerBlockStyle","name","label","isDefault","domReady","blockEditorRoot","document","querySelector","style","counterReset"],"mappings":";;;;;;;;;;;;;;;;;wHAAcA,EAAOC,QAAUC,OAAW,GAAY,U,mBCStC,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOF,K,iHCClDG,6BAAmB,iBAAkB,CACpC,CACCC,KAAM,GACNC,MAAO,UACPC,WAAW,GAEZ,CACCF,KAAM,iBACNC,MAAO,oBAaTE,KAAS,WATqB,IACvBC,KAAkBC,SAASC,cAChC,yDAGAF,EAAgBG,MAAMC,aAAe,e,gBC5BzBf,EAAOC,QAAUC,OAAW,GAAU,S","file":"blocks/paragraph-b85acbaa.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"domReady\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { registerBlockStyle } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\n\nregisterBlockStyle('core/paragraph', [\n\t{\n\t\tname: '',\n\t\tlabel: 'Default',\n\t\tisDefault: true,\n\t},\n\t{\n\t\tname: 'has-big-number',\n\t\tlabel: 'Has Big Number',\n\t},\n]);\n\nconst addCounterResetToBody = () => {\n\tconst blockEditorRoot = document.querySelector(\n\t\t'.block-editor-block-list__layout.is-root-container',\n\t);\n\tif (blockEditorRoot) {\n\t\tblockEditorRoot.style.counterReset = 'section';\n\t}\n};\n\ndomReady(() => {\n\taddCounterResetToBody();\n});\n","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}