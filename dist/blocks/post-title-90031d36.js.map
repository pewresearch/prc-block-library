{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///./src/post-title/edit.js","webpack:///./src/post-title/save.js","webpack:///./src/post-title/index.js","webpack:///external [\"wp\",\"blocks\"]"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","module","exports","window","path","replace","concat","edit","attributes","className","clientId","setAttributes","blockProps","useBlockProps","title","postTitle","useSelect","select","getEditedPostAttribute","useEffect","save","name","metadata","settings","__","description","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;sIAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,iBCAcQ,EAAOC,QAAUC,OAAW,GAAQ,M,gBCApCF,EAAOC,QAAUC,OAAW,GAAQ,M,mBCSlC,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOF,K,gNCVpCH,EAAOC,QAAUC,OAAW,GAAW,S,gBCAvCF,EAAOC,QAAUC,OAAW,GAAe,a,6ICyB1CI,EArBF,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACvCC,EAAaC,wBAAc,CAC7BJ,cAGIK,EAAUN,EAAVM,MAEFC,EAAYC,qBACd,SAAAC,GACI,OAAOA,EAAO,eAAeC,uBAAuB,WAExD,CAACR,IAOL,OAJAS,qBAAU,WACNR,EAAc,CAAEG,MAAOC,MACxB,CAACA,IAEG,yBAAQH,EAAaE,ICZjBM,EALF,WACT,IAAMR,EAAaC,gBAAcO,OACjC,OAAO,oBAAC,WAAaR,I,ykBCGzB,IAAQS,EAASC,EAATD,KAEFE,EAAW,CACbT,MAAOU,aAAG,kBACVC,YAAaD,aAAG,4BAChBjB,OACAa,QAGJM,4BAAkBL,EAAD,OAAYE,GAAaD,K,gBCnB5BrB,EAAOC,QAAUC,OAAW,GAAU,S","file":"blocks/post-title-90031d36.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","import { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { useBlockProps } from '@wordpress/block-editor';\n\nconst edit = ({ attributes, className, clientId, setAttributes }) => {\n    const blockProps = useBlockProps({\n        className,\n    });\n\n    const { title } = attributes;\n\n    const postTitle = useSelect(\n        select => {\n            return select('core/editor').getEditedPostAttribute('title');\n        },\n        [clientId],\n    );\n\n    useEffect(() => {\n        setAttributes({ title: postTitle });\n    }, [postTitle]);\n\n    return <h1 {...blockProps}>{title}</h1>;\n};\n\nexport default edit;\n","// eslint-disable-next-line import/no-unresolved\nimport { Fragment } from '@wordpress/element';\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/** Returns a server side block callback */\nconst save = () => {\n    const blockProps = useBlockProps.save();\n    return <Fragment {...blockProps} />;\n};\n\nexport default save;\n","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('PRC Post Title'),\n    description: __('Displays the post title.'),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...settings, ...metadata });\n","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}