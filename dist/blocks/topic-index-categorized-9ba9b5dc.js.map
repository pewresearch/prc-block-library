{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"React\"","webpack:///external \"wp.i18n\"","webpack:///./src/topic-index-categorized/edit.js","webpack:///./src/topic-index-categorized/save.js","webpack:///./src/topic-index-categorized/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.components\"","webpack:///external \"wp.blocks\""],"names":["module","exports","wp","element","React","i18n","ALLOWED_BLOCKS","edit","attributes","className","setAttributes","heading","clientId","blockProps","useBlockProps","classnames","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","templateLock","tagName","value","onChange","h","placeholder","formattingControls","keepPlaceholderOnFocus","Icon","name","size","style","marginLeft","save","Content","metadata","settings","title","__","description","category","keywords","registerBlockType","blockEditor","components","blocks"],"mappings":";;;;;;;;;;;;;;;;;sHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUG,O,8MCAjBJ,EAAOC,QAAUC,GAAGG,M,oKCsBdC,EAAiB,CAAC,2BA2DTC,EAzDF,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,cAC3BC,GADyD,EAAfC,SAC9BJ,EAAZG,SAEFE,EAAaC,wBAAc,CAC7BL,UAAWM,IAAWN,KAGpBO,EAAmBC,4CACrB,GACA,CACIC,cAAeZ,EACfa,YAAa,WACbC,cAAc,IAkBtB,OACI,0BAASP,EACL,oBAAC,OAAD,KACI,oBAAC,WAAD,KACI,oBAAC,WAAD,CACIQ,QAAQ,KACRC,MAAOX,EACPY,SAAU,SAAAC,GAAC,OAAId,EAAc,CAAEC,QAASa,KACxCC,YAAY,aACZC,mBAAoB,CAAC,QACrBC,wBAAsB,EACtBlB,UAAU,gBAGlB,oBAAC,YAAD,KACI,oBAACmB,EAAA,EAAD,CACIC,KAAK,gBACLC,KAAK,QACLC,MAAO,CAAEC,WAAY,aAIjC,0BAAShB,KCnENiB,EAJF,WACT,OAAO,oBAAC,cAAYC,QAAb,O,6kBCQHL,EAASM,EAATN,KAEFO,EAAW,CACbC,MAAOC,aAAG,2BACVC,YACI,gEACJC,SAAU,SACVC,SAAU,CAACH,aAAG,eAAgBA,aAAG,eAAgBA,aAAG,UACpD/B,OACA0B,QAGJS,4BAAkBb,EAAD,OAAYM,GAAaC,K,gBC1B1CpC,EAAOC,QAAUC,GAAGyC,a,gBCApB3C,EAAOC,QAAUC,GAAG0C,Y,gBCApB5C,EAAOC,QAAUC,GAAG2C,S","file":"blocks/topic-index-categorized-9ba9b5dc.js","sourcesContent":["module.exports = wp.element;","module.exports = React;","module.exports = wp.i18n;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { Button, Flex, FlexItem, FlexBlock } from '@wordpress/components';\nimport {\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    useBlockProps,\n    RichText,\n} from '@wordpress/block-editor';\n\n/**\n * External dependencies\n */\nimport { Icon } from 'semantic-ui-react';\n\nconst ALLOWED_BLOCKS = ['prc-block/taxonomy-tree'];\n\nconst edit = ({ attributes, className, setAttributes, clientId }) => {\n    const { heading } = attributes;\n\n    const blockProps = useBlockProps({\n        className: classnames(className),\n    });\n\n    const innerBlocksProps = useInnerBlocksProps(\n        {},\n        {\n            allowedBlocks: ALLOWED_BLOCKS,\n            orientation: 'vertical',\n            templateLock: false,\n            // renderAppender: rootClientId => {\n            //     return (\n            //         <Button\n            //             isSecondary\n            //             onClick={() =>\n            //                 console.log(\n            //                     `insert a block for client id:: ${clientId}`,\n            //                 )\n            //             }\n            //         >\n            //             Insert New Tree\n            //         </Button>\n            //     );\n            // },\n        },\n    );\n\n    return (\n        <div {...blockProps}>\n            <Flex>\n                <FlexItem>\n                    <RichText\n                        tagName=\"h2\"\n                        value={heading}\n                        onChange={h => setAttributes({ heading: h })}\n                        placeholder=\"Heading...\"\n                        formattingControls={['link']}\n                        keepPlaceholderOnFocus\n                        className=\"sans-serif\"\n                    />\n                </FlexItem>\n                <FlexBlock>\n                    <Icon\n                        name=\"chevron right\"\n                        size=\"large\"\n                        style={{ marginLeft: '0.5em' }}\n                    />\n                </FlexBlock>\n            </Flex>\n            <div {...innerBlocksProps} />\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Topic Index Categorized'),\n    description:\n        'A collapsible list that allows taxonomy trees to be inserted.',\n    category: 'layout',\n    keywords: [__('Topic Index'), __('Categorized'), __('Topic')],\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","module.exports = wp.components;","module.exports = wp.blocks;"],"sourceRoot":""}