{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///external \"moment\"","webpack:///external \"wp.components\"","webpack:///external \"lodash\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///./node_modules/@wordpress/icons/build-module/library/close-small.js","webpack:///./src/wp-query/taxQuery.js","webpack:///./src/wp-query/fetch.js","webpack:///./src/wp-query/controls.js","webpack:///./src/wp-query/edit.js","webpack:///./src/wp-query/save.js","webpack:///./src/wp-query/index.js","webpack:///external \"wp.blockEditor\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/block-inserter-button/index.js","webpack:///./src/_shared/components/caret-heading-link/index.js","webpack:///./src/_shared/components/heading-level-toolbar/index.js","webpack:///./src/_shared/components/link-toolbar-button/index.js","webpack:///external \"React\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\"","webpack:///./node_modules/@wordpress/primitives/build-module/svg/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"names":["module","exports","wp","element","i18n","moment","components","lodash","apiFetch","url","xmlns","viewBox","d","TaxonomyField","index","label","taxonomy","value","options","taxQuery","setAttributes","isLink","icon","closeSmall","onClick","tmpData","data","splice","lable","__","style","margin","onChange","val","showInitialSuggestions","suggestionsQuery","type","subtype","id","title","terms","settings","TaxQuery","relation","useState","setOptions","useEffect","selectedTaxonomies","map","nextOptions","o","includes","disabled","toLowerCase","split","s","charAt","toUpperCase","substring","join","getLabel","length","marginTop","marginBottom","help","checked","isSecondary","isSmall","push","fetchPosts","attributes","Promise","resolve","console","log","request","method","path","then","results","forEach","result","dateString","excerpt","date","timestamp","format","link","image","Fields","wide","formatTermId","programTermId","postsPerPage","labelTaxonomy","disableImage","formatOptions","setFormatOptions","programOptions","setProgramOptions","initTerms","initData","getTerms","termIds","Object","keys","tmp","termId","name","className","display","flexDirection","flexGrow","paddingRight","parseInt","alignItems","paddingBottom","min","max","required","Controls","setPosts","clientId","busy","toggleBusy","hasInnerBlocks","useSelect","select","getBlocks","clickHandler","setTimeout","isBusy","isPrimary","isColumnLayout","ALLOWED","edit","pinned","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","renderAppender","InnerBlocks","ButtonBlockAppender","posts","replaceInnerBlocks","useDispatch","blocks","innerBlocks","item","args","extra","postID","emphasis","isChartArt","imageSlot","imageSize","horizontal","stacked","enableHeader","enableExcerpt","enableExtra","enableProgramsTaxonomy","headerSize","createBlock","initStoryBlock","toKeep","JSON","parse","postId","filter","e","toCheck","f","b","allowedPerPage","toInsert","concat","save","Content","metadata","description","registerBlockType","blockEditor","perPage","slug","replace","parent","BlockInserterButton","blockName","tooltipPosition","currentBlock","getBlock","nextIndex","newBlock","dispatch","insertBlock","CaretHeadingLink","heading","headingSize","p","tagName","h","placeholder","formattingControls","keepPlaceholderOnFocus","Icon","size","marginLeft","HeadingLevelIcon","level","isPressed","levelToPath","1","2","3","4","5","6","hasOwnProperty","width","height","POPOVER_PROPS","isAlternate","HeadingLevelToolbar","selectedLevel","levels","popoverProps","renderToggle","onToggle","isOpen","aria-expanded","aria-haspopup","onKeyDown","event","keyCode","DOWN","preventDefault","stopPropagation","showTooltip","renderContent","isCollapsed","controls","targetLevel","isActive","sprintf","LinkToolbarButton","query","isLinkOpen","setIsLinkOpen","position","onClose","React","ReactDOM","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","i","arguments","source","key","getOwnPropertyDescriptors","defineProperties","defineProperty","props","_ref","appliedProps","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutProperties","undefined","role","focusable"],"mappings":";;;;;;;;;;;;;;;;;sHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUC,GAAGE,M,ogBCApBJ,EAAOC,QAAUI,Q,gBCAjBL,EAAOC,QAAUC,GAAGI,Y,iBCApBN,EAAOC,QAAUM,Q,iBCAjBP,EAAOC,QAAUC,GAAGM,U,iBCApBR,EAAOC,QAAUC,GAAGO,K,kKCE+S,EAArQ,wBAAc,IAAI,CAACC,MAAM,6BAA6BC,QAAQ,aAAa,wBAAc,IAAK,CAACC,EAAE,qJ,ykBCgB/J,IAAMC,EAAgB,SAAC,GAQhB,IAPHC,EAOE,EAPFA,MACAC,EAME,EANFA,MAME,IALFC,gBAKE,SAJFC,EAIE,EAJFA,MACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,SACAC,EACE,EADFA,cAoBA,OACI,+BACI,oBAAC,OAAD,KACI,oBAAC,YAAD,KACI,kCAASL,IAEb,oBAAC,WAAD,KACI,oBAAC,SAAD,CACIM,QAAM,EACNC,KAAMC,EACNC,QA5BH,WACb,IAAMC,EAAUN,EAChBM,EAAQC,KAAKC,OAAOb,EAAO,GAC3BM,EAAc,CAAED,SAAS,EAAD,KAAOA,GAAaM,MA0B5BG,MAAOC,aAAG,iCAIrB,IAAUb,GACP,2BAAKc,MAAO,CAAEC,OAAQ,SAClB,oBAAC,gBAAD,CACId,MAAOD,EACPE,QAASA,EACTc,SAjCK,SAAAC,GACrB,IAAMR,EAAUN,EAChBM,EAAQC,KAAKZ,GAAOE,SAAWiB,EAC/Bb,EAAc,CAAED,SAAS,EAAD,KAAOA,GAAaM,UAkCvC,IAAUT,GAAY,OAASC,GAC5B,oBAAC,4BAAD,CACIF,MAAOc,aAAG,QACVZ,MAAOA,EACPiB,wBAAsB,EACtBC,iBAAkB,CAAEC,KAAM,OAAQC,QAASrB,GAC3CgB,SAtCK,SAAAC,GAAQ,IACjBK,EAAmBL,EAAnBK,GAAIC,EAAeN,EAAfM,MAAO9B,EAAQwB,EAARxB,IACbgB,EAAUN,EAChBM,EAAQC,KAAKZ,GAAO0B,MAAQF,EAC5Bb,EAAQC,KAAKZ,GAAOyB,MAAQA,EAC5Bd,EAAQC,KAAKZ,GAAOG,MAAQR,EAC5BW,EAAc,CAAED,SAAS,EAAD,KAAOA,GAAaM,MAiChCgB,SAAU,KAGlB,oBAAC,iBAAD,QA4GGC,EAvGE,SAAC,GAAiC,IAA/BvB,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAClBuB,EAAmBxB,EAAnBwB,SAAUjB,EAASP,EAATO,KAD4B,EAEhBkB,mBAAS,CACnC,CAAE7B,MAAO,oBAAqBE,OAAO,GACrC,CAAEF,MAAO,SAAUE,MAAO,SAC1B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,WAAYE,MAAO,cANc,mBAEvCC,EAFuC,KAE9B2B,EAF8B,KAmD9C,OAfAC,qBAAU,WAEN,IAAMC,EAAqBrB,EAAKsB,KAAI,qBAAGhC,YACjCiC,EAAc/B,EAAQ8B,KAAI,SAAAE,GAM5B,OALIH,EAAmBI,SAASD,EAAEjC,OAC9BiC,EAAEE,UAAW,EAEbF,EAAEE,UAAW,EAEVF,KAEXL,EAAWI,KACZ,CAAC9B,IAIA,oBAAC,WAAD,KACI,+BACKO,EAAKsB,KAAI,SAACpC,EAAGE,GAAW,IACbE,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,MACZF,EArCL,SAAAkB,GAAQ,IACbjB,EAAoBiB,EAApBjB,SAAUuB,EAAUN,EAAVM,MACdxB,GACA,IAAUC,EAAV,mCAAmDA,EAAnD,SAIJ,OAHI,OAASuB,IAAS,IAAUvB,IAC5BD,EAAK,UAAMC,EAAN,aAAmBuB,IAErBxB,EACFsC,cACAC,MAAM,KACNN,KAAI,SAAAO,GAAC,OAAIA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,MACjDC,KAAK,KA0BgBC,CAAShD,GACvB,OACI,oBAAC,EAAD,CACIE,MAAOA,EACPC,MAAOc,aAAGd,GACVC,SAAUA,EACVC,MAAOA,EACPC,QAASA,EACTC,SAAUA,EACVC,cAAeA,OAI1B,GAAKM,EAAKmC,QACP,2BAAK/B,MAAO,CAAEgC,UAAW,MAAOC,aAAc,QAC1C,oBAAC,gBAAD,CACIhD,MAAM,0BACNiD,KACI,QAAUrB,EACJ,uCACA,kCAEVsB,QAAS,QAAUtB,EACnBX,SAtED,WACnB,IAAMP,EAAUN,EACZ,OAASM,EAAQkB,SACjBlB,EAAQkB,SAAW,MAEnBlB,EAAQkB,SAAW,KAEvBvB,EAAc,CAAED,SAAS,EAAD,KAAOA,GAAaM,UAoExC,oBAAC,SAAD,CACIyC,aAAW,EACXC,SAAO,EACP3C,QAAS,WACL,IAAMC,EAAUN,EAChBM,EAAQC,KAAK0C,KAAK,CACdpD,UAAU,EACVwB,MAAO,KACPvB,MAAO,OAEXG,EAAc,CAAED,SAAS,EAAD,KAAOA,GAAaM,OAVpD,kB,iCChIG4C,EArCI,SAAAC,GAOf,OAAO,IAAIC,SAAQ,SAAAC,GACf,IAAM9C,EAAO,GACb+C,QAAQC,IAAI,cAAeJ,GAE3B,IAAMK,EAAU,CACZC,OAAQ,OACRC,KAAM,6BACNnD,KAAM4C,GAGV9D,IAASmE,GAASG,MAAK,SAAAC,GACnBN,QAAQC,IAAIK,GAEZA,EAAQC,SAAQ,SAAAC,GACZ,IApBOC,EAoBDtE,EAAI,CACN0B,GAAI2C,EAAO3C,GACXC,MAAO0C,EAAO1C,MACd4C,QAASF,EAAOE,QAChBC,MAxBGF,EAwBcD,EAAOI,UAtBvBhF,EAAO6E,GAAYI,OADV,gBAwBVC,KAAMN,EAAOM,KACbxE,MAAOkE,EAAOlE,MACdyE,MAAOP,EAAOO,OAElB9D,EAAK0C,KAAKxD,MAEd4D,EAAQ9C,UCFd+D,EAAS,SAAC,GAKT,IAJHnB,EAIE,EAJFA,WACAlD,EAGE,EAHFA,cAGE,IAFFsE,YAEE,aADFtC,gBACE,SAEEuC,EAMArB,EANAqB,aACAC,EAKAtB,EALAsB,cACAC,EAIAvB,EAJAuB,aACAC,EAGAxB,EAHAwB,cACAC,EAEAzB,EAFAyB,aACA5E,EACAmD,EADAnD,SAPF,EAUwCyB,mBAAS,IAVjD,mBAUKoD,EAVL,KAUoBC,EAVpB,OAW0CrD,mBAAS,IAXnD,mBAWKsD,EAXL,KAWqBC,EAXrB,KAaIC,EAAY,SAACpF,EAAUqF,GACzB5B,QAAQC,IAAI,YAAaJ,GACzBgC,YAAStF,GAAU8D,MAAK,SAAApD,GACpB,IAAM6E,EAAUC,OAAOC,KAAK/E,GACtBgF,EAAM,CAAC,CAAEzF,MAAO,MAAOF,MAAO,QACpCwF,EAAQvB,SAAQ,SAAA2B,GACZD,EAAItC,KAAK,CACLnD,MAAO0F,EACP5F,MAAOW,EAAKiF,GAAQC,UAG5BP,EAASK,OAajB,OATA5D,qBAAU,WACF,IAAMkD,EAAcnC,QACpBuC,EAAU,UAAWH,GAErB,IAAMC,EAAerC,QACrBuC,EAAU,WAAYD,KAE3B,IAGC,oBAAC,WAAD,KACI,+BACI,0BAAIU,UAAU,cAAd,uBACA,oBAAC,gBAAD,CACI9F,MAAM,iBACNkD,QAAS8B,EACT/D,SAAU,kBACNZ,EAAc,CAAE2E,cAAeA,OAGvC,2BACIjE,OACI,IAAS4D,EACH,CACIoB,QAAS,OACTC,cAAe,OAEnB,IAGV,2BACIjF,OACI,IAAS4D,EACH,CACIsB,SAAU,IACVC,aAAc,OAElB,IAGV,oBAAC,gBAAD,CACIlG,MAAM,SACNE,MAAO0E,EACPzE,QAAS8E,EACThE,SAAU,SAAA2E,GACNvF,EAAc,CACVuE,aAAcuB,SAASP,MAG/BvD,SAAUA,KAGlB,2BACItB,OACI,IAAS4D,EACH,CACIoB,QAAS,OACTK,WAAY,WACZC,cAAe,SAEnB,IAGV,oBAAC,gBAAD,CACIrG,MAAM,eACNkD,QAAS,YAAc6B,EACvB9D,SAAU,kBACNZ,EAAc,CACV0E,cACI,YAAcA,EACR,WACA,iBAM9B,2BACIhE,OACI,IAAS4D,EACH,CACIoB,QAAS,OACTC,cAAe,OAEnB,IAGV,2BACIjF,OACI,IAAS4D,EACH,CACIsB,SAAU,IACVC,aAAc,OAElB,IAGV,oBAAC,gBAAD,CACIlG,MAAM,UACNE,MAAO2E,EACP1E,QAASgF,EACTlE,SAAU,SAAA2E,GACNvF,EAAc,CACVwE,cAAesB,SAASP,MAGhCvD,SAAUA,KAGlB,2BACItB,OACI,IAAS4D,EACH,CACIoB,QAAS,OACTK,WAAY,WACZC,cAAe,SAEnB,IAGV,oBAAC,gBAAD,CACIrG,MAAM,eACNkD,QAAS,aAAe6B,EACxB9D,SAAU,kBACNZ,EAAc,CACV0E,cACI,aAAeA,EACT,UACA,mBAQlC,oBAAC,iBAAD,MAEA,+BACI,0BAAIe,UAAU,cAAd,mBACA,oBAAC,eAAD,CACI9F,MAAOc,aAAG,mBACVZ,MAAO4E,EACP7D,SAAU,SAAAC,GAAG,OAAIb,EAAc,CAAEyE,aAAc5D,KAC/CoF,IAAK,EACLC,IAAK,GACLC,UAAQ,KAIhB,oBAAC,iBAAD,MAEA,+BACI,0BAAIV,UAAU,cAAd,4BACA,oBAAC,EAAD,CAAU1F,SAAUA,EAAUC,cAAeA,KAGjD,oBAAC,iBAAD,QAoEGoG,EA/DE,SAAC,GAAuD,IAArDlD,EAAoD,EAApDA,WAAYlD,EAAwC,EAAxCA,cAAeqG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EACzC9E,oBAAS,GADgC,mBAC7D+E,EAD6D,KACvDC,EADuD,KAE5DC,EAAmBC,qBACvB,SAAAC,GACI,MAAO,CACHF,eACI,EAAIE,EAAO,qBAAqBC,UAAUN,GAAU7D,UAGhE,CAAC6D,IAPGG,eAUFI,EAAe,WACjBL,GAAW,GACXvD,EAAWC,GAAYQ,MAAK,SAAApD,GACxBwG,YAAW,WACPN,GAAW,GACXH,EAAS/F,KACV,UAIX,OACI,oBAAC,WAAD,KACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWa,MAAOV,aAAG,oBACjB,oBAAC,EAAD,CACIyC,WAAYA,EACZlD,cAAeA,EACfgC,SAAUuE,IAEd,oBAAC,SAAD,CACIQ,OAAQR,EACRS,WAAS,EACT5G,QAAS,kBAAMyG,MAHnB,aASP,IAAUJ,GACP,oBAAC,cAAD,CAAa9G,MAAM,uBAAuBsH,gBAAc,GACpD,+BACI,oBAAC,EAAD,CACI/D,WAAYA,EACZlD,cAAeA,EACfgC,SAAUuE,EACVjC,MAAI,IAER,oBAAC,SAAD,CACIyC,OAAQR,EACRS,WAAS,EACT5G,QAAS,kBAAMyG,MAHnB,mBCpQlBK,EAAU,CAAC,wBAgHFC,EAxEF,SAAC,GAAwD,IAAtDjE,EAAqD,EAArDA,WAAYlD,EAAyC,EAAzCA,cAAeyF,EAA0B,EAA1BA,UAAWa,EAAe,EAAfA,SAC1Cc,EAAsDlE,EAAtDkE,OAAQ3C,EAA8CvB,EAA9CuB,aAAcC,EAAgCxB,EAAhCwB,cAAeC,EAAiBzB,EAAjByB,aAEvC0C,EAAaC,wBAAc,CAAE7B,cAE7B8B,EAAmBC,4CAAoB,CACzCC,cAAeP,EACfQ,YAAa,WACbC,eAAgBC,cAAYC,sBARiC,EAWvCrG,oBAAS,GAX8B,mBAW1DsG,EAX0D,KAWnDzB,EAXmD,KAazD0B,EAAuBC,sBAAY,qBAAnCD,mBAbyD,EAezBrB,qBACpC,SAAAC,GACI,IAAMsB,EAAStB,EAAO,qBAAqBC,UAAUN,GACrD,MAAO,CACH4B,YAAaD,EACbxB,eAAgB,EAAIwB,EAAOxF,UAGnC,CAAC6D,IARG4B,EAfyD,EAezDA,YAAazB,EAf4C,EAe5CA,eA4CrB,OAhCA/E,qBAAU,WACN,IAAI,IAAUoG,EAAO,CACjB,IAAIxC,EAAM,GACVwC,EAAMlE,SAAQ,SAAAuE,GACV7C,EAAItC,KArEG,SAACmF,EAAMxD,EAAcD,GACxC,IAAM0D,EAAO,CACTjH,MAAOgH,EAAKhH,MACZiD,MAAO+D,EAAK/D,MACZL,QAASoE,EAAKpE,QACdI,KAAMgE,EAAKhE,KACXxE,MAAOwI,EAAKxI,MACZqE,KAAMmE,EAAKnE,KACXqE,MAAO,GAEPC,OAAQH,EAAKjH,GAEbqH,UAAU,EAEVC,YAAY,EACZC,UAAW,OACXC,UAAW,KACXC,YAAY,EACZC,SAAS,EAETC,cAAc,EACdC,eAAe,EACfC,aAAa,EACbC,wBAAwB,EACxBC,WAAY,EACZxD,UAAW,iBAUf,OARI,IAASd,IACTyD,EAAKK,UAAY,WACjBL,EAAK3C,UAAY,oBACjB2C,EAAKU,eAAgB,GAErB,aAAepE,IACf0D,EAAKY,wBAAyB,GAE3BE,sBAAY,uBAAwBd,GAkCtBe,CAAehB,EAAMxD,EAAcD,OAGhD,IAAM0E,EAAS,GACfC,KAAKC,MAAMlC,GAAQxD,SAAQ,SAAA2F,GACRrB,EAAYsB,QAAO,SAAAC,GAC9B,IAAMC,EAAUpE,EAAIkE,QAChB,SAAAG,GAAC,OAAIA,EAAEzG,WAAWoF,SAAWiB,KAEjC,OACIE,EAAEvG,WAAWoF,SAAWiB,GAAU,GAAKG,EAAQjH,UAGhDmB,SAAQ,SAAAgG,GAAC,OAAIR,EAAOpG,KAAK4G,SAGpC,IAAMC,EAAiBpF,EAAe2E,EAAO3G,OAE7C6C,EAAMA,EAAIkE,QAAO,SAACC,EAAG/J,GACjB,OAAOA,GAASmK,EAAiB,KAGrC,IAAMC,EAAWV,EAAOW,OAAOzE,GAE/ByC,EAAmBzB,EAAUwD,MAElC,CAAChC,IAGA,0BAAST,EACL,oBAAC,EAAD,CACInE,WAAYA,EACZlD,cAAeA,EACfqG,SAAUA,EACVC,SAAUA,KAEb,IAASG,GAAkB,0BAASc,KCnHlCyC,EAJF,WACT,OAAO,oBAAC,cAAYC,QAAb,O,6kBCOHzE,EAAS0E,EAAT1E,KAEFnE,EAAW,CACbF,MAAOV,aAAG,SACV0J,YAAa1J,aACT,0FAEJ0G,OACA6C,QAGJI,4BAAkB5E,EAAD,EAAC,KAAW0E,GAAa7I,K,gBCxB1CzC,EAAOC,QAAUC,GAAGuL,a,qOCadnF,EAAW,SAACtF,GAA4B,IAAlB0K,EAAiB,uDAAP,GAClC,OAAO,IAAInH,SAAQ,SAAAC,GACf,IAAM9C,EAAO,GACblB,IAAS,CACLqE,KAAK,UAAD,OAAY7D,EAAZ,qBAAiC0K,KACtC5G,MAAK,SAAAtC,GACJ,IAAK,IAAI1B,EAAQ,EAAGA,EAAQ0B,EAAMqB,OAAQ/C,IAAS,CAC/C,IAAM6K,EAAOnJ,EAAM1B,GAAO6K,KAAKC,QAAlB,UACN5K,EAASqC,cADH,KAET,IAEJ3B,EAAKc,EAAM1B,GAAOwB,IAAM,CACpBA,GAAIE,EAAM1B,GAAOwB,GACjBsE,KAAMpE,EAAM1B,GAAO8F,KACnBiF,OAAQrJ,EAAM1B,GAAO+K,OACrBF,QAGRnH,EAAQ9C,U,mCCQLoK,EA9Ba,SAAC,GAMtB,IAAD,IALF/K,aAKE,MALM,GAKN,EAJFgL,EAIE,EAJFA,UACArE,EAGE,EAHFA,SAGE,KAFFb,UAEE,EADFvC,mBACE,MADW,GACX,EAYF,OACI,oBAAC,SAAD,CACIvD,MAAOc,aAAGd,GACViL,gBAAgB,SAChBxK,QAfY,WAChB,IAAMyK,EAAelE,iBAAO,qBAAqBmE,SAASxE,GAC1DjD,QAAQC,IAAI,gBAAiBuH,EAAa3C,YAAYzF,QACtD,IAAMsI,EAAYF,EAAa3C,YAAYzF,OAAS,EAC9CuI,EAAW9B,sBAAYyB,EAAWzH,GACxC+H,mBAAS,qBAAqBC,YAC1BF,EACAD,EACAzE,IAQAb,UAAU,sCAEThF,aAAGd,K,uBCyBDwL,EA1CU,SAAC,GAKnB,IAJH9L,EAIE,EAJFA,IACA+L,EAGE,EAHFA,QAGE,IAFFC,mBAEE,MAFY,KAEZ,EADFrL,EACE,EADFA,cAEA,OACI,oBAAC,WAAD,KACI,oBAAC,gBAAD,KACI,oBAAC,eAAD,KACI,oBAAC,EAAD,CACIX,IAAKA,EACLuB,SAAU,SAAA0K,GACNtL,EAAc,CAAEX,IAAKiM,EAAEjM,WAKvC,oBAAC,OAAD,CAAMqB,MAAO,CAAEsF,cAAe,QAC1B,oBAAC,WAAD,KACI,oBAAC,WAAD,CACIuF,QAASF,EACTxL,MAAOuL,EACPxK,SAAU,SAAA4K,GAAC,OAAIxL,EAAc,CAAEoL,QAASI,KACxCC,YAAY,aACZC,mBAAoB,GACpBC,wBAAsB,EACtBlG,UAAU,gBAGlB,oBAAC,YAAD,KACI,oBAACmG,EAAA,EAAD,CACIpG,KAAK,gBACLqG,KAAK,QACLnL,MAAO,CAAEoL,WAAY,e,QCxCvCC,EAAmB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAA+B,IAAxBC,iBAAwB,SACjDC,EAAc,CAChBC,EAAG,4EACHC,EAAG,uYACHC,EAAG,gjBACHC,EAAG,wFACHC,EAAG,2ZACHC,EAAG,unBAEP,OAAKN,EAAYO,eAAeT,GAK5B,oBAAC,MAAD,CACIU,MAAM,KACNC,OAAO,KACPpN,QAAQ,YACRD,MAAM,6BACN2M,UAAWA,GAEX,oBAAC,OAAD,CAAMzM,EAAG0M,EAAYF,MAXlB,MAgBTY,EAAgB,CAClBnH,UAAW,uCACXoH,aAAa,GAiEFC,EA9Da,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,cAA+C,IAAhCC,cAAgC,MAAvB,CAAC,EAAG,GAAmB,EAAfpM,EAAe,EAAfA,SAE3D,OADAyC,QAAQC,IAAI,sBAAuByJ,GAE/B,oBAAC,eAAD,KACI,oBAAC,WAAD,CACIE,aAAcL,EACdM,aAAc,YAA2B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OASvB,OACI,oBAAC,gBAAD,CACIC,gBAAeD,EACfE,gBAAc,OACdpN,KAAM,oBAAC,EAAD,CAAkB8L,MAAOe,IAC/BpN,MAAOc,aAAG,wBACVL,QAAS+M,EACTI,UAfgB,SAAAC,GACfJ,GAAUI,EAAMC,UAAYC,MAC7BF,EAAMG,iBACNH,EAAMI,kBACNT,MAYAU,aAAW,KAIvBC,cAAe,kBACX,oBAAC,UAAD,CACIrI,UAAU,sCACV9F,MAAOc,aAAG,yBAEV,oBAAC,eAAD,CACIsN,aAAa,EACbC,SAAUhB,EAAOpL,KAAI,SAAAqM,GACjB,IAAMC,EAAWD,IAAgBlB,EACjC,MAAO,CACH7M,KACI,oBAAC,EAAD,CACI8L,MAAOiC,EACPhC,UAAWiC,IAGnB/M,MAAOgN,kBAEH1N,aAAG,cACHwN,GAEJC,WACA9N,QAbG,WAcCQ,EAASqN,gB,QCjDlCG,EAnCW,SAAC,GAIpB,IAHH/O,EAGE,EAHFA,IACAuB,EAEE,EAFFA,SAEE,IADFyN,aACE,MADM,CAAErN,KAAM,OAAQC,QAAS,SAC/B,IACkCO,oBAAS,GAD3C,mBACK8M,EADL,KACiBC,EADjB,KAEF,OACI,oBAAC,WAAD,KACI,oBAAC,gBAAD,CACIlB,gBAAeiB,EACfhB,gBAAc,OACd3N,MAAOc,aAAG,YACVP,KAAK,cACLE,QAAS,kBAAMmO,GAAeD,IAC9BT,aAAW,KAEd,IAASS,GACN,oBAAC,UAAD,CACIE,SAAS,gBACTC,QAAS,kBAAMF,GAAc,KAE7B,oBAAC,4BAAD,CACI9I,UAAU,8CACV5F,MAAO,CAAER,OACTyB,wBAAsB,EACtBC,iBAAkBsN,EAClBzN,SAAU,SAAA0K,GAAC,OAAI1K,EAAS0K,IACxBjK,SAAU,Q,gDCnClCzC,EAAOC,QAAU6P,O,iBCAjB9P,EAAOC,QAAU8P,U,gBCAjB/P,EAAOC,QAAUC,GAAGmJ,Q,gBCApBrJ,EAAOC,QAAUC,GAAGwB,M,kJCA4I,SAASsO,EAAQC,EAAOC,GAAgB,IAAIzJ,EAAKD,OAAOC,KAAKwJ,GAAQ,GAAGzJ,OAAO2J,sBAAsB,CAAC,IAAIC,EAAQ5J,OAAO2J,sBAAsBF,GAAWC,IAAeE,EAAQA,EAAQxF,QAAO,SAASyF,GAAK,OAAO7J,OAAO8J,yBAAyBL,EAAOI,GAAKE,eAAc9J,EAAKrC,KAAKoM,MAAM/J,EAAK2J,GAAU,OAAO3J,EAAM,SAASgK,EAAcC,GAAQ,IAAI,IAAIC,EAAE,EAAEA,EAAEC,UAAU/M,OAAO8M,IAAI,CAAC,IAAIE,EAAqB,MAAdD,UAAUD,GAASC,UAAUD,GAAG,GAAMA,EAAE,EAAGX,EAAQxJ,OAAOqK,IAAQ,GAAM7L,SAAQ,SAAS8L,GAAK,YAAgBJ,EAAOI,EAAID,EAAOC,OAAkBtK,OAAOuK,0BAA2BvK,OAAOwK,iBAAiBN,EAAOlK,OAAOuK,0BAA0BF,IAAeb,EAAQxJ,OAAOqK,IAAS7L,SAAQ,SAAS8L,GAAKtK,OAAOyK,eAAeP,EAAOI,EAAItK,OAAO8J,yBAAyBO,EAAOC,OAAW,OAAOJ,EAQ16B,IAQI,EAAK,SAAcQ,GAAO,OAAO,wBAAc,OAAOA,IA8BtD,EAAI,SAAaC,GAAM,IAAItK,EAAUsK,EAAKtK,UAAUwG,EAAU8D,EAAK9D,UAA6E+D,EAAaX,EAAcA,EAAc,GC7CxL,SAAkCI,EAAQQ,GACvD,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IACIC,EAAKH,EADLD,EAAS,OAAAY,EAAA,GAA6BT,EAAQQ,GAGlD,GAAI7K,OAAO2J,sBAAuB,CAChC,IAAIoB,EAAmB/K,OAAO2J,sBAAsBU,GAEpD,IAAKF,EAAI,EAAGA,EAAIY,EAAiB1N,OAAQ8M,IACvCG,EAAMS,EAAiBZ,GACnBU,EAASG,QAAQV,IAAQ,GACxBtK,OAAOiL,UAAUC,qBAAqBC,KAAKd,EAAQC,KACxDJ,EAAOI,GAAOD,EAAOC,IAIzB,OAAOJ,ED6BwFkB,CAAyBT,EAAK,CAAC,YAAY,eAAqE,GAAG,CAACtK,UAAU,IAAWA,EAAU,CAAC,aAAawG,UAAawE,EAAUC,KAAK,MAAM,eAAc,EAAKC,WAAU,IAEjU,OAAO,wBAAc,MAAMX,M","file":"blocks/wp-query-8a9240b2.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","module.exports = moment;","module.exports = wp.components;","module.exports = lodash;","module.exports = wp.apiFetch;","module.exports = wp.url;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var closeSmall=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\"}));export default closeSmall;","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch, select } from '@wordpress/data';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    SelectControl,\n    ToggleControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\nimport { closeSmall } from '@wordpress/icons';\n\nconst TaxonomyField = ({\n    index,\n    label,\n    taxonomy = false,\n    value,\n    options,\n    taxQuery,\n    setAttributes,\n}) => {\n    const onRemove = () => {\n        const tmpData = taxQuery;\n        tmpData.data.splice(index, 1);\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTaxonomyChange = val => {\n        const tmpData = taxQuery;\n        tmpData.data[index].taxonomy = val;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTermChange = val => {\n        const { id, title, url } = val;\n        const tmpData = taxQuery;\n        tmpData.data[index].terms = id;\n        tmpData.data[index].title = title;\n        tmpData.data[index].value = url;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    return (\n        <div>\n            <Flex>\n                <FlexBlock>\n                    <strong>{label}</strong>\n                </FlexBlock>\n                <FlexItem>\n                    <Button\n                        isLink\n                        icon={closeSmall}\n                        onClick={onRemove}\n                        lable={__(`Remove taxonomy argument`)}\n                    />\n                </FlexItem>\n            </Flex>\n            {false === taxonomy && (\n                <div style={{ margin: '16px' }}>\n                    <SelectControl\n                        value={taxonomy}\n                        options={options}\n                        onChange={onTaxonomyChange}\n                    />\n                </div>\n            )}\n            {false !== taxonomy && null === value && (\n                <LinkControl\n                    label={__(`Term`)}\n                    value={value}\n                    showInitialSuggestions\n                    suggestionsQuery={{ type: 'term', subtype: taxonomy }}\n                    onChange={onTermChange}\n                    settings={[]}\n                />\n            )}\n            <HorizontalRule />\n        </div>\n    );\n};\n\nconst TaxQuery = ({ taxQuery, setAttributes }) => {\n    const { relation, data } = taxQuery;\n    const [options, setOptions] = useState([\n        { label: 'Select a Taxonomy', value: false },\n        { label: 'Topics', value: 'topic' },\n        { label: 'Formats', value: 'formats' },\n        { label: 'Programs', value: 'programs' },\n    ]);\n\n    const toggleRelation = () => {\n        const tmpData = taxQuery;\n        if ('OR' === tmpData.relation) {\n            tmpData.relation = 'AND';\n        } else {\n            tmpData.relation = 'OR';\n        }\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n\n    const getLabel = val => {\n        const { taxonomy, title } = val;\n        let label =\n            false === taxonomy ? `Choose Taxonomy` : `Choose ${taxonomy} Term`;\n        if (null !== title && false !== taxonomy) {\n            label = `${taxonomy}: ${title}`;\n        }\n        return label\n            .toLowerCase()\n            .split(' ')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n    };\n\n    /**\n     * Disable any taxonomy options that are already selected.\n     */\n    useEffect(() => {\n        // Go gather up selected taxonomies from taxQuery.data,\n        const selectedTaxonomies = data.map(({ taxonomy }) => taxonomy);\n        const nextOptions = options.map(o => {\n            if (selectedTaxonomies.includes(o.value)) {\n                o.disabled = true;\n            } else {\n                o.disabled = false;\n            }\n            return o;\n        });\n        setOptions(nextOptions);\n    }, [taxQuery]);\n    // Dont offer to change relation unless if data has more than one\n\n    return (\n        <Fragment>\n            <div>\n                {data.map((d, index) => {\n                    const { taxonomy, value } = d;\n                    const label = getLabel(d);\n                    return (\n                        <TaxonomyField\n                            index={index}\n                            label={__(label)}\n                            taxonomy={taxonomy}\n                            value={value}\n                            options={options}\n                            taxQuery={taxQuery}\n                            setAttributes={setAttributes}\n                        />\n                    );\n                })}\n                {2 <= data.length && (\n                    <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n                        <ToggleControl\n                            label=\"Query Relation (OR|AND)\"\n                            help={\n                                'AND' === relation\n                                    ? 'AND (restrictive: restricts content)'\n                                    : 'OR (expansive: expands content)'\n                            }\n                            checked={'AND' === relation}\n                            onChange={toggleRelation}\n                        />\n                    </div>\n                )}\n            </div>\n            <Button\n                isSecondary\n                isSmall\n                onClick={() => {\n                    const tmpData = taxQuery;\n                    tmpData.data.push({\n                        taxonomy: false,\n                        terms: null,\n                        value: null,\n                    });\n                    setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n                }}\n            >\n                Add Taxonomy\n            </Button>\n        </Fragment>\n    );\n};\n\nexport default TaxQuery;\n","import * as moment from 'moment';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst fetchPosts = attributes => {\n    const formatDate = dateString => {\n        const defaultFormat = 'MMM D, YYYY';\n        const date = moment(dateString).format(defaultFormat);\n        return date;\n    };\n\n    return new Promise(resolve => {\n        const data = [];\n        console.log('fetchPosts?', attributes);\n\n        const request = {\n            method: 'POST',\n            path: '/prc-api/v2/block/wp-query',\n            data: attributes,\n        };\n\n        apiFetch(request).then(results => {\n            console.log(results);\n            // eslint-disable-next-line no-plusplus\n            results.forEach(result => {\n                const d = {\n                    id: result.id,\n                    title: result.title,\n                    excerpt: result.excerpt,\n                    date: formatDate(result.timestamp),\n                    link: result.link,\n                    label: result.label,\n                    image: result.image,\n                };\n                data.push(d);\n            });\n            resolve(data);\n        });\n    });\n};\n\nexport default fetchPosts;\n","/* eslint-disable radix */\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport {\n    InspectorControls,\n    __experimentalLinkControl as LinkControl,\n} from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    PanelBody,\n    Placeholder,\n    RangeControl,\n    SelectControl,\n    ToggleControl,\n    TextControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport TaxQuery from './taxQuery';\nimport { getTerms } from '../_shared';\nimport fetchPosts from './fetch';\n\nconst Fields = ({\n    attributes,\n    setAttributes,\n    wide = false,\n    disabled = false,\n}) => {\n    const {\n        formatTermId,\n        programTermId,\n        postsPerPage,\n        labelTaxonomy,\n        disableImage,\n        taxQuery,\n    } = attributes;\n\n    const [formatOptions, setFormatOptions] = useState([]);\n    const [programOptions, setProgramOptions] = useState([]);\n\n    const initTerms = (taxonomy, initData) => {\n        console.log('initTerms', attributes);\n        getTerms(taxonomy).then(data => {\n            const termIds = Object.keys(data);\n            const tmp = [{ value: 'any', label: 'Any' }];\n            termIds.forEach(termId => {\n                tmp.push({\n                    value: termId,\n                    label: data[termId].name,\n                });\n            });\n            initData(tmp);\n        });\n    };\n\n    useEffect(() => {\n        if (0 === formatOptions.length) {\n            initTerms('Formats', setFormatOptions);\n        }\n        if (0 === programOptions.length) {\n            initTerms('Programs', setProgramOptions);\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                <h4 className=\"sans-serif\">Story Item Settings</h4>\n                <ToggleControl\n                    label=\"Disable Images\"\n                    checked={disableImage}\n                    onChange={() =>\n                        setAttributes({ disableImage: !disableImage })\n                    }\n                />\n                <div\n                    style={\n                        true === wide\n                            ? {\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                              }\n                            : {}\n                    }\n                >\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      flexGrow: '1',\n                                      paddingRight: '1em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <SelectControl\n                            label=\"Format\"\n                            value={formatTermId}\n                            options={formatOptions}\n                            onChange={termId => {\n                                setAttributes({\n                                    formatTermId: parseInt(termId),\n                                });\n                            }}\n                            disabled={disabled}\n                        />\n                    </div>\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      display: 'flex',\n                                      alignItems: 'flex-end',\n                                      paddingBottom: '0.2em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <ToggleControl\n                            label=\"Use as Label\"\n                            checked={'formats' === labelTaxonomy}\n                            onChange={() =>\n                                setAttributes({\n                                    labelTaxonomy:\n                                        'formats' === labelTaxonomy\n                                            ? 'programs'\n                                            : 'formats',\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n                <div\n                    style={\n                        true === wide\n                            ? {\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                              }\n                            : {}\n                    }\n                >\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      flexGrow: '1',\n                                      paddingRight: '1em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <SelectControl\n                            label=\"Program\"\n                            value={programTermId}\n                            options={programOptions}\n                            onChange={termId => {\n                                setAttributes({\n                                    programTermId: parseInt(termId),\n                                });\n                            }}\n                            disabled={disabled}\n                        />\n                    </div>\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      display: 'flex',\n                                      alignItems: 'flex-end',\n                                      paddingBottom: '0.2em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <ToggleControl\n                            label=\"Use as Label\"\n                            checked={'programs' === labelTaxonomy}\n                            onChange={() =>\n                                setAttributes({\n                                    labelTaxonomy:\n                                        'programs' === labelTaxonomy\n                                            ? 'formats'\n                                            : 'programs',\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Query Arguments</h4>\n                <RangeControl\n                    label={__('Number of posts')}\n                    value={postsPerPage}\n                    onChange={val => setAttributes({ postsPerPage: val })}\n                    min={3}\n                    max={10}\n                    required\n                />\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Taxonomy Query Arguments</h4>\n                <TaxQuery taxQuery={taxQuery} setAttributes={setAttributes} />\n            </div>\n\n            <HorizontalRule />\n        </Fragment>\n    );\n};\n\nconst Controls = ({ attributes, setAttributes, setPosts, clientId }) => {\n    const [busy, toggleBusy] = useState(false);\n    const { hasInnerBlocks } = useSelect(\n        select => {\n            return {\n                hasInnerBlocks:\n                    0 < select('core/block-editor').getBlocks(clientId).length,\n            };\n        },\n        [clientId],\n    );\n\n    const clickHandler = () => {\n        toggleBusy(true);\n        fetchPosts(attributes).then(data => {\n            setTimeout(() => {\n                toggleBusy(false);\n                setPosts(data);\n            }, 3600);\n        });\n    };\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Query Arguments')}>\n                    <Fields\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        disabled={busy}\n                    />\n                    <Button\n                        isBusy={busy}\n                        isPrimary\n                        onClick={() => clickHandler()}\n                    >\n                        Update\n                    </Button>\n                </PanelBody>\n            </InspectorControls>\n            {false === hasInnerBlocks && (\n                <Placeholder label=\"Configure Query Args\" isColumnLayout>\n                    <div>\n                        <Fields\n                            attributes={attributes}\n                            setAttributes={setAttributes}\n                            disabled={busy}\n                            wide\n                        />\n                        <Button\n                            isBusy={busy}\n                            isPrimary\n                            onClick={() => clickHandler()}\n                        >\n                            Query Posts\n                        </Button>\n                    </div>\n                </Placeholder>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Controls;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    InnerBlocks,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './controls';\n\nconst ALLOWED = ['prc-block/story-item'];\n\nconst initStoryBlock = (item, disableImage, labelTaxonomy) => {\n    const args = {\n        title: item.title,\n        image: item.image,\n        excerpt: item.excerpt,\n        link: item.link,\n        label: item.label,\n        date: item.date,\n        extra: '',\n        // Post Meta Data:\n        postID: item.id,\n        // Item Options\n        emphasis: false,\n        // Image Position:\n        isChartArt: false,\n        imageSlot: 'left',\n        imageSize: 'A3',\n        horizontal: true,\n        stacked: false,\n        // Misc Toggles:\n        enableHeader: true,\n        enableExcerpt: true,\n        enableExtra: false,\n        enableProgramsTaxonomy: false,\n        headerSize: 2,\n        className: 'is-style-left',\n    };\n    if (true === disableImage) {\n        args.imageSlot = 'disabled';\n        args.className = 'is-style-disabled';\n        args.enableExcerpt = false;\n    }\n    if ('programs' === labelTaxonomy) {\n        args.enableProgramsTaxonomy = true;\n    }\n    return createBlock('prc-block/story-item', args);\n};\n\nconst edit = ({ attributes, setAttributes, className, clientId }) => {\n    const { pinned, postsPerPage, labelTaxonomy, disableImage } = attributes;\n\n    const blockProps = useBlockProps({ className });\n\n    const innerBlocksProps = useInnerBlocksProps({\n        allowedBlocks: ALLOWED,\n        orientation: 'vertical', // We should allow toggling this based on layout.\n        renderAppender: InnerBlocks.ButtonBlockAppender,\n    });\n\n    const [posts, setPosts] = useState(false);\n\n    const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n    const { innerBlocks, hasInnerBlocks } = useSelect(\n        select => {\n            const blocks = select('core/block-editor').getBlocks(clientId);\n            return {\n                innerBlocks: blocks,\n                hasInnerBlocks: 0 < blocks.length,\n            };\n        },\n        [clientId],\n    );\n\n    // Go create story item blocks from posts fetched\n    useEffect(() => {\n        if (false !== posts) {\n            let tmp = [];\n            posts.forEach(item => {\n                tmp.push(initStoryBlock(item, disableImage, labelTaxonomy));\n            });\n\n            const toKeep = [];\n            JSON.parse(pinned).forEach(postId => {\n                const toPush = innerBlocks.filter(e => {\n                    const toCheck = tmp.filter(\n                        f => f.attributes.postID === postId,\n                    );\n                    return (\n                        e.attributes.postID === postId && 0 >= toCheck.length\n                    );\n                });\n                toPush.forEach(b => toKeep.push(b));\n            });\n\n            const allowedPerPage = postsPerPage - toKeep.length;\n\n            tmp = tmp.filter((e, index) => {\n                return index <= allowedPerPage - 1;\n            });\n\n            const toInsert = toKeep.concat(tmp);\n\n            replaceInnerBlocks(clientId, toInsert);\n        }\n    }, [posts]);\n\n    return (\n        <div {...blockProps}>\n            <Controls\n                attributes={attributes}\n                setAttributes={setAttributes}\n                setPosts={setPosts}\n                clientId={clientId}\n            />\n            {true === hasInnerBlocks && <div {...innerBlocksProps} />}\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Query'),\n    description: __(\n        'Query posts by format, topic, region, and/or date. Posts are displayed as Story Items.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nimport apiFetch from '@wordpress/api-fetch';\n\nconst getTermsByLetter = (taxonomy, letter) => {\n    return new Promise(resolve => {\n        apiFetch({\n            path: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n        }).then(terms => {\n            resolve(terms);\n        });\n    });\n};\n\nconst getTerms = (taxonomy, perPage = 25) => {\n    return new Promise(resolve => {\n        const data = {};\n        apiFetch({\n            path: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n        }).then(terms => {\n            for (let index = 0; index < terms.length; index++) {\n                const slug = terms[index].slug.replace(\n                    `${taxonomy.toLowerCase()}_`,\n                    '',\n                );\n                data[terms[index].id] = {\n                    id: terms[index].id,\n                    name: terms[index].name,\n                    parent: terms[index].parent,\n                    slug,\n                };\n            }\n            resolve(data);\n        });\n    });\n};\n\nconst getTermsAsOptions = (\n    taxonomy,\n    perPage,\n    termValue = 'name',\n    sortByLabel = true,\n) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n\n                let value = termObj.name;\n                if ('termid' === termValue) {\n                    value = termObj.id;\n                }\n\n                let label = termObj.name;\n                if (undefined !== termObj.parent && 0 !== termObj.parent) {\n                    label = ` -- ${label}`;\n                }\n\n                labelOptions.push({\n                    value,\n                    label,\n                });\n            });\n\n            if (false !== sortByLabel) {\n                labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n            }\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nconst getTermsAsTree = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const treeData = [];\n            // Convert data from object of objects to array of objects.\n            const convertedData = Object.keys(data).map(i => data[i]);\n            // Filter out the parent terms first\n            const parentTerms = convertedData.filter(e => 0 === e.parent);\n            parentTerms.forEach(e => {\n                // Get children by filtering for terms with parent matching this id in loop.\n                const c = convertedData.filter(f => f.parent === e.id);\n                const children = [];\n                // Construct children array.\n                c.forEach(cT => {\n                    children.push({\n                        name: cT.name,\n                        id: cT.id,\n                    });\n                });\n                // Finally, push the fully structured parent -> child relationship to the tree data.\n                treeData.push({\n                    name: e.name,\n                    id: e.id,\n                    children,\n                });\n            });\n\n            resolve(treeData);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsByLetter, getTermsAsOptions, getTermsAsTree };\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { select, dispatch } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\n\nimport { createBlock } from '@wordpress/blocks';\n\nconst BlockInserterButton = ({\n    label = '',\n    blockName,\n    clientId,\n    className,\n    attributes = {},\n}) => {\n    const handleClick = () => {\n        const currentBlock = select('core/block-editor').getBlock(clientId);\n        console.log('debug info...', currentBlock.innerBlocks.length);\n        const nextIndex = currentBlock.innerBlocks.length - 1;\n        const newBlock = createBlock(blockName, attributes);\n        dispatch('core/block-editor').insertBlock(\n            newBlock,\n            nextIndex,\n            clientId,\n        );\n    };\n    return (\n        <Button\n            label={__(label)}\n            tooltipPosition=\"bottom\"\n            onClick={handleClick}\n            className=\"block-editor-button-block-appender\"\n        >\n            {__(label)}\n        </Button>\n    );\n};\n\nexport default BlockInserterButton;\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { Flex, FlexItem, FlexBlock, ToolbarGroup } from '@wordpress/components';\nimport { BlockControls, RichText } from '@wordpress/block-editor';\n\n/**\n * External dependencies\n */\nimport { Icon } from 'semantic-ui-react';\n\n/**\n * Internal dependencies\n */\nimport { LinkToolbarButton } from 'shared';\n\nconst CaretHeadingLink = ({\n    url,\n    heading,\n    headingSize = 'h2',\n    setAttributes,\n}) => {\n    return (\n        <Fragment>\n            <BlockControls>\n                <ToolbarGroup>\n                    <LinkToolbarButton\n                        url={url}\n                        onChange={p => {\n                            setAttributes({ url: p.url });\n                        }}\n                    />\n                </ToolbarGroup>\n            </BlockControls>\n            <Flex style={{ paddingBottom: '1em' }}>\n                <FlexItem>\n                    <RichText\n                        tagName={headingSize}\n                        value={heading}\n                        onChange={h => setAttributes({ heading: h })}\n                        placeholder=\"Heading...\"\n                        formattingControls={[]}\n                        keepPlaceholderOnFocus\n                        className=\"sans-serif\"\n                    />\n                </FlexItem>\n                <FlexBlock>\n                    <Icon\n                        name=\"chevron right\"\n                        size=\"large\"\n                        style={{ marginLeft: '0.5em' }}\n                    />\n                </FlexBlock>\n            </Flex>\n        </Fragment>\n    );\n};\n\nexport default CaretHeadingLink;\n","import { __, sprintf } from '@wordpress/i18n';\nimport {\n    Dropdown,\n    Toolbar,\n    ToolbarButton,\n    ToolbarGroup,\n    Path,\n    SVG,\n} from '@wordpress/components';\nimport { DOWN } from '@wordpress/keycodes';\n\nconst HeadingLevelIcon = ({ level, isPressed = false }) => {\n    const levelToPath = {\n        1: 'M9 5h2v10H9v-4H5v4H3V5h2v4h4V5zm6.6 0c-.6.9-1.5 1.7-2.6 2v1h2v7h2V5h-1.4z',\n        2: 'M7 5h2v10H7v-4H3v4H1V5h2v4h4V5zm8 8c.5-.4.6-.6 1.1-1.1.4-.4.8-.8 1.2-1.3.3-.4.6-.8.9-1.3.2-.4.3-.8.3-1.3 0-.4-.1-.9-.3-1.3-.2-.4-.4-.7-.8-1-.3-.3-.7-.5-1.2-.6-.5-.2-1-.2-1.5-.2-.4 0-.7 0-1.1.1-.3.1-.7.2-1 .3-.3.1-.6.3-.9.5-.3.2-.6.4-.8.7l1.2 1.2c.3-.3.6-.5 1-.7.4-.2.7-.3 1.2-.3s.9.1 1.3.4c.3.3.5.7.5 1.1 0 .4-.1.8-.4 1.1-.3.5-.6.9-1 1.2-.4.4-1 .9-1.6 1.4-.6.5-1.4 1.1-2.2 1.6V15h8v-2H15z',\n        3: 'M12.1 12.2c.4.3.8.5 1.2.7.4.2.9.3 1.4.3.5 0 1-.1 1.4-.3.3-.1.5-.5.5-.8 0-.2 0-.4-.1-.6-.1-.2-.3-.3-.5-.4-.3-.1-.7-.2-1-.3-.5-.1-1-.1-1.5-.1V9.1c.7.1 1.5-.1 2.2-.4.4-.2.6-.5.6-.9 0-.3-.1-.6-.4-.8-.3-.2-.7-.3-1.1-.3-.4 0-.8.1-1.1.3-.4.2-.7.4-1.1.6l-1.2-1.4c.5-.4 1.1-.7 1.6-.9.5-.2 1.2-.3 1.8-.3.5 0 1 .1 1.6.2.4.1.8.3 1.2.5.3.2.6.5.8.8.2.3.3.7.3 1.1 0 .5-.2.9-.5 1.3-.4.4-.9.7-1.5.9v.1c.6.1 1.2.4 1.6.8.4.4.7.9.7 1.5 0 .4-.1.8-.3 1.2-.2.4-.5.7-.9.9-.4.3-.9.4-1.3.5-.5.1-1 .2-1.6.2-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1l1.1-1.4zM7 9H3V5H1v10h2v-4h4v4h2V5H7v4z',\n        4: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm10-2h-1v2h-2v-2h-5v-2l4-6h3v6h1v2zm-3-2V7l-2.8 4H16z',\n        5: 'M12.1 12.2c.4.3.7.5 1.1.7.4.2.9.3 1.3.3.5 0 1-.1 1.4-.4.4-.3.6-.7.6-1.1 0-.4-.2-.9-.6-1.1-.4-.3-.9-.4-1.4-.4H14c-.1 0-.3 0-.4.1l-.4.1-.5.2-1-.6.3-5h6.4v1.9h-4.3L14 8.8c.2-.1.5-.1.7-.2.2 0 .5-.1.7-.1.5 0 .9.1 1.4.2.4.1.8.3 1.1.6.3.2.6.6.8.9.2.4.3.9.3 1.4 0 .5-.1 1-.3 1.4-.2.4-.5.8-.9 1.1-.4.3-.8.5-1.3.7-.5.2-1 .3-1.5.3-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1-.1-.1 1-1.5 1-1.5zM9 15H7v-4H3v4H1V5h2v4h4V5h2v10z',\n        6: 'M9 15H7v-4H3v4H1V5h2v4h4V5h2v10zm8.6-7.5c-.2-.2-.5-.4-.8-.5-.6-.2-1.3-.2-1.9 0-.3.1-.6.3-.8.5l-.6.9c-.2.5-.2.9-.2 1.4.4-.3.8-.6 1.2-.8.4-.2.8-.3 1.3-.3.4 0 .8 0 1.2.2.4.1.7.3 1 .6.3.3.5.6.7.9.2.4.3.8.3 1.3s-.1.9-.3 1.4c-.2.4-.5.7-.8 1-.4.3-.8.5-1.2.6-1 .3-2 .3-3 0-.5-.2-1-.5-1.4-.9-.4-.4-.8-.9-1-1.5-.2-.6-.3-1.3-.3-2.1s.1-1.6.4-2.3c.2-.6.6-1.2 1-1.6.4-.4.9-.7 1.4-.9.6-.3 1.1-.4 1.7-.4.7 0 1.4.1 2 .3.5.2 1 .5 1.4.8 0 .1-1.3 1.4-1.3 1.4zm-2.4 5.8c.2 0 .4 0 .6-.1.2 0 .4-.1.5-.2.1-.1.3-.3.4-.5.1-.2.1-.5.1-.7 0-.4-.1-.8-.4-1.1-.3-.2-.7-.3-1.1-.3-.3 0-.7.1-1 .2-.4.2-.7.4-1 .7 0 .3.1.7.3 1 .1.2.3.4.4.6.2.1.3.3.5.3.2.1.5.2.7.1z',\n    };\n    if (!levelToPath.hasOwnProperty(level)) {\n        return null;\n    }\n\n    return (\n        <SVG\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            isPressed={isPressed}\n        >\n            <Path d={levelToPath[level]} />\n        </SVG>\n    );\n};\n\nconst POPOVER_PROPS = {\n    className: 'block-library-heading-level-dropdown',\n    isAlternate: true,\n};\n\nconst HeadingLevelToolbar = ({ selectedLevel, levels = [2, 3], onChange }) => {\n    console.log('HeadingLevelToolbar', selectedLevel);\n    return (\n        <ToolbarGroup>\n            <Dropdown\n                popoverProps={POPOVER_PROPS}\n                renderToggle={({ onToggle, isOpen }) => {\n                    const openOnArrowDown = event => {\n                        if (!isOpen && event.keyCode === DOWN) {\n                            event.preventDefault();\n                            event.stopPropagation();\n                            onToggle();\n                        }\n                    };\n\n                    return (\n                        <ToolbarButton\n                            aria-expanded={isOpen}\n                            aria-haspopup=\"true\"\n                            icon={<HeadingLevelIcon level={selectedLevel} />}\n                            label={__('Change heading level')}\n                            onClick={onToggle}\n                            onKeyDown={openOnArrowDown}\n                            showTooltip\n                        />\n                    );\n                }}\n                renderContent={() => (\n                    <Toolbar\n                        className=\"block-library-heading-level-toolbar\"\n                        label={__('Change heading level')}\n                    >\n                        <ToolbarGroup\n                            isCollapsed={false}\n                            controls={levels.map(targetLevel => {\n                                const isActive = targetLevel === selectedLevel;\n                                return {\n                                    icon: (\n                                        <HeadingLevelIcon\n                                            level={targetLevel}\n                                            isPressed={isActive}\n                                        />\n                                    ),\n                                    title: sprintf(\n                                        // translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n                                        __('Heading %d'),\n                                        targetLevel,\n                                    ),\n                                    isActive,\n                                    onClick() {\n                                        onChange(targetLevel);\n                                    },\n                                };\n                            })}\n                        />\n                    </Toolbar>\n                )}\n            />\n        </ToolbarGroup>\n    );\n};\n\nexport default HeadingLevelToolbar;\n","import { __ } from '@wordpress/i18n';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport { ToolbarButton, Popover } from '@wordpress/components';\n\n/**\n * Link control in a toolbar button that defaults to searching for topic terms\n */\nconst LinkToolbarButton = ({\n    url,\n    onChange,\n    query = { type: 'term', subtype: 'topic' },\n}) => {\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    return (\n        <Fragment>\n            <ToolbarButton\n                aria-expanded={isLinkOpen}\n                aria-haspopup=\"true\"\n                label={__('Set Link')}\n                icon=\"admin-links\"\n                onClick={() => setIsLinkOpen(!isLinkOpen)}\n                showTooltip\n            />\n            {true === isLinkOpen && (\n                <Popover\n                    position=\"bottom center\"\n                    onClose={() => setIsLinkOpen(false)}\n                >\n                    <LinkControl\n                        className=\"wp-block-navigation-link__inline-link-input\"\n                        value={{ url }}\n                        showInitialSuggestions\n                        suggestionsQuery={query}\n                        onChange={p => onChange(p)}\n                        settings={[]}\n                    />\n                </Popover>\n            )}\n        </Fragment>\n    );\n};\n\nexport default LinkToolbarButton;\n","module.exports = React;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.data;","import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/**\n * External dependencies\n */import classnames from'classnames';/**\n * WordPress dependencies\n */import{createElement}from'@wordpress/element';/** @typedef {{isPressed?: boolean} & import('react').ComponentPropsWithoutRef<'svg'>} SVGProps */ /**\n * @param {import('react').ComponentPropsWithoutRef<'circle'>} props\n *\n * @return {JSX.Element} Circle component\n */export var Circle=function Circle(props){return createElement('circle',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'g'>} props\n *\n * @return {JSX.Element} G component\n */export var G=function G(props){return createElement('g',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'path'>} props\n *\n * @return {JSX.Element} Path component\n */export var Path=function Path(props){return createElement('path',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'polygon'>} props\n *\n * @return {JSX.Element} Polygon component\n */export var Polygon=function Polygon(props){return createElement('polygon',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'rect'>} props\n *\n * @return {JSX.Element} Rect component\n */export var Rect=function Rect(props){return createElement('rect',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'defs'>} props\n *\n * @return {JSX.Element} Defs component\n */export var Defs=function Defs(props){return createElement('defs',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'radialGradient'>} props\n *\n * @return {JSX.Element} RadialGradient component\n */export var RadialGradient=function RadialGradient(props){return createElement('radialGradient',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'linearGradient'>} props\n *\n * @return {JSX.Element} LinearGradient component\n */export var LinearGradient=function LinearGradient(props){return createElement('linearGradient',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'stop'>} props\n *\n * @return {JSX.Element} Stop component\n */export var Stop=function Stop(props){return createElement('stop',props);};/**\n *\n * @param {SVGProps} props isPressed indicates whether the SVG should appear as pressed.\n *                         Other props will be passed through to svg component.\n *\n * @return {JSX.Element} Stop component\n */export var SVG=function SVG(_ref){var className=_ref.className,isPressed=_ref.isPressed,props=_objectWithoutProperties(_ref,[\"className\",\"isPressed\"]);var appliedProps=_objectSpread(_objectSpread({},props),{},{className:classnames(className,{'is-pressed':isPressed})||undefined,role:'img','aria-hidden':true,focusable:false});// Disable reason: We need to have a way to render HTML tag for web.\n// eslint-disable-next-line react/forbid-elements\nreturn createElement(\"svg\",appliedProps);};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}