{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"lodash\"","webpack:///external \"wp.i18n\"","webpack:///./src/menu-link/edit.js","webpack:///./src/menu-link/save.js","webpack:///./src/menu-link/variations.js","webpack:///./src/menu-link/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.compose\"","webpack:///external \"wp.components\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\""],"names":["module","exports","wp","element","lodash","i18n","getSuggestionsQuery","type","subtype","compose","withSelect","select","ownProps","getClientIdsOfDescendants","getBlockAttributes","hasSelectedInnerBlock","getSelectedBlockClientId","getBlockParentsByBlockName","clientId","getSettings","hasDescendants","length","isImmediateParentOfSelectedBlock","selectedBlockHasDescendants","withDispatch","dispatch","registry","insertLinkBlock","insertBlock","navItems","insertionPoint","createBlock","attributes","context","isSelected","setAttributes","insertBlocksAfter","mergeBlocks","onReplace","label","opensInNewTab","url","description","rel","title","subMenuEnabled","link","useState","isLinkOpen","setIsLinkOpen","listItemRef","useRef","isDraggingWithin","elementRef","setIsDraggingWithin","useEffect","ownerDocument","current","handleDragStart","event","handleDragEnter","handleDragEnd","contains","target","addEventListener","removeEventListener","useIsDraggingWithin","itemLabelPlaceholder","__","ref","isDraggingBlocks","useSelect","isURL","prependHTTP","test","focus","selection","defaultView","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","selectLabelText","placeCaretAtHorizontalEdge","blockProps","useBlockProps","className","classnames","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","__experimentalCaptureToolbars","templateLock","bindGlobal","shortcuts","rawShortcut","primary","name","icon","linkIcon","shortcut","displayShortcut","onClick","moreIcon","value","onChange","descriptionValue","help","titleValue","autoComplete","relValue","checked","identifier","labelValue","onMerge","__unstableOnSplitAtEnd","aria-label","placeholder","keepPlaceholderOnFocus","withoutInteractiveFormatting","allowedFormats","position","onClose","showInitialSuggestions","noDirectEntry","noURLSuggestion","suggestionsQuery","normalizedTitle","normalizedURL","newTitle","newURL","newOpensInNewTab","id","encodeURI","replace","escape","save","Content","isDefault","postIcon","pageIcon","categoryIcon","tagIcon","metadata","settings","variations","__experimentalLabel","edit","registerBlockType","blockEditor","components","blocks","data"],"mappings":"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","file":"blocks/menu-link-a394d1a6.js","sourcesContent":["module.exports = wp.element;","module.exports = lodash;","module.exports = wp.i18n;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { escape, get, head, find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n    useSelect,\n    useDispatch,\n    withDispatch,\n    withSelect,\n} from '@wordpress/data';\nimport {\n    KeyboardShortcuts,\n    PanelBody,\n    Popover,\n    TextControl,\n    TextareaControl,\n    ToggleControl,\n    ToolbarButton,\n    ToolbarGroup,\n} from '@wordpress/components';\nimport { rawShortcut, displayShortcut } from '@wordpress/keycodes';\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n    BlockControls,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    InspectorControls,\n    RichText,\n    __experimentalLinkControl as LinkControl,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { isURL, prependHTTP } from '@wordpress/url';\nimport {\n    Fragment,\n    useState,\n    useEffect,\n    useRef,\n    createInterpolateElement,\n} from '@wordpress/element';\nimport { placeCaretAtHorizontalEdge } from '@wordpress/dom';\nimport { link as linkIcon, formatIndent as moreIcon } from '@wordpress/icons';\n\nconst isStyle = (needle, haystack) => {\n    const arr = haystack.split(' ');\n    return arr.includes(needle);\n};\n\n/**\n * A React hook to determine if it's dragging within the target element.\n *\n * @typedef {import('@wordpress/element').RefObject} RefObject\n *\n * @param {RefObject<HTMLElement>} elementRef The target elementRef object.\n *\n * @return {boolean} Is dragging within the target element.\n */\nconst useIsDraggingWithin = elementRef => {\n    const [isDraggingWithin, setIsDraggingWithin] = useState(false);\n\n    useEffect(() => {\n        const { ownerDocument } = elementRef.current;\n\n        function handleDragStart(event) {\n            // Check the first time when the dragging starts.\n            handleDragEnter(event);\n        }\n\n        // Set to false whenever the user cancel the drag event by either releasing the mouse or press Escape.\n        function handleDragEnd() {\n            setIsDraggingWithin(false);\n        }\n\n        function handleDragEnter(event) {\n            // Check if the current target is inside the item element.\n            if (elementRef.current.contains(event.target)) {\n                setIsDraggingWithin(true);\n            } else {\n                setIsDraggingWithin(false);\n            }\n        }\n\n        // Bind these events to the document to catch all drag events.\n        // Ideally, we can also use `event.relatedTarget`, but sadly that\n        // doesn't work in Safari.\n        ownerDocument.addEventListener('dragstart', handleDragStart);\n        ownerDocument.addEventListener('dragend', handleDragEnd);\n        ownerDocument.addEventListener('dragenter', handleDragEnter);\n\n        return () => {\n            ownerDocument.removeEventListener('dragstart', handleDragStart);\n            ownerDocument.removeEventListener('dragend', handleDragEnd);\n            ownerDocument.removeEventListener('dragenter', handleDragEnter);\n        };\n    }, []);\n\n    return isDraggingWithin;\n};\n\n/**\n * Given the Link block's type attribute, return the query params to give to\n * /wp/v2/search.\n *\n * @param {string} type Link block's type attribute.\n * @return {{ type?: string, subtype?: string }} Search query params.\n */\nfunction getSuggestionsQuery(type) {\n    switch (type) {\n        case 'post':\n        case 'page':\n            return { type: 'post', subtype: type };\n        case 'topic':\n            return { type: 'term', subtype: 'topic' };\n        case 'formats':\n            return { type: 'term', subtype: 'formats' };\n        case 'programs':\n            return { type: 'term', subtype: 'programs' };\n        default:\n            return {};\n    }\n}\n\nfunction NavigationLinkEdit({\n    attributes,\n    context,\n    isSelected,\n    isImmediateParentOfSelectedBlock,\n    setAttributes,\n    insertLinkBlock,\n    insertBlocksAfter,\n    mergeBlocks,\n    onReplace,\n}) {\n    const {\n        label,\n        type,\n        opensInNewTab,\n        url,\n        description,\n        rel,\n        title,\n        subMenuEnabled,\n    } = attributes;\n\n    const link = {\n        url,\n        opensInNewTab,\n    };\n\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    const listItemRef = useRef(null);\n    const isDraggingWithin = useIsDraggingWithin(listItemRef);\n    const itemLabelPlaceholder = __('Add link…');\n    const ref = useRef();\n\n    const isDraggingBlocks = useSelect(\n        select => select('core/block-editor').isDraggingBlocks(),\n        [],\n    );\n\n    // Show the LinkControl on mount if the URL is empty\n    // ( When adding a new menu item)\n    // This can't be done in the useState call because it conflicts\n    // with the autofocus behavior of the BlockListBlock component.\n    useEffect(() => {\n        if (!url) {\n            setIsLinkOpen(true);\n        }\n    }, []);\n\n    /**\n     * The hook shouldn't be necessary but due to a focus loss happening\n     * when selecting a suggestion in the link popover, we force close on block unselection.\n     */\n    useEffect(() => {\n        if (!isSelected) {\n            setIsLinkOpen(false);\n        }\n    }, [isSelected]);\n\n    // If the LinkControl popover is open and the URL has changed, close the LinkControl and focus the label text.\n    useEffect(() => {\n        if (isLinkOpen && url) {\n            // Does this look like a URL and have something TLD-ish?\n            if (isURL(prependHTTP(label)) && /^.+\\.[a-z]+/.test(label)) {\n                // Focus and select the label text.\n                selectLabelText();\n            } else {\n                // Focus it (but do not select).\n                placeCaretAtHorizontalEdge(ref.current, true);\n            }\n        }\n    }, [url]);\n\n    /**\n     * Focus the Link label text and select it.\n     */\n    function selectLabelText() {\n        ref.current.focus();\n        const { ownerDocument } = ref.current;\n        const { defaultView } = ownerDocument;\n        const selection = defaultView.getSelection();\n        const range = ownerDocument.createRange();\n        // Get the range of the current ref contents so we can add this range to the selection.\n        range.selectNodeContents(ref.current);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    const blockProps = useBlockProps({\n        ref: listItemRef,\n        className: classnames('item', {\n            'is-editing':\n                isSelected &&\n                // Don't show the element as editing while dragging.\n                !isDraggingBlocks,\n            // Don't select the element while dragging.\n            'is-selected': isSelected && !isDraggingBlocks,\n            'is-dragging-within': isDraggingWithin,\n            'has-link': !!url,\n        }),\n    });\n\n    const innerBlocksProps = useInnerBlocksProps(\n        {\n            className: classnames('ui link list'),\n        },\n        {\n            allowedBlocks: ['prc-block/menu-link'],\n            orientation: 'vertical',\n            __experimentalCaptureToolbars: true,\n            templateLock: false,\n        },\n    );\n\n    return (\n        <Fragment>\n            <BlockControls>\n                <ToolbarGroup>\n                    <KeyboardShortcuts\n                        bindGlobal\n                        shortcuts={{\n                            [rawShortcut.primary('k')]: () =>\n                                setIsLinkOpen(true),\n                        }}\n                    />\n                    <ToolbarButton\n                        name=\"link\"\n                        icon={linkIcon}\n                        title={__('Link')}\n                        shortcut={displayShortcut.primary('k')}\n                        onClick={() => setIsLinkOpen(true)}\n                    />\n                    <ToolbarButton\n                        name=\"link\"\n                        icon={moreIcon}\n                        title={__('Sub Menu')}\n                        onClick={() =>\n                            setAttributes({ subMenuEnabled: !subMenuEnabled })\n                        }\n                    />\n                </ToolbarGroup>\n            </BlockControls>\n\n            <InspectorControls>\n                <PanelBody title={__('Link settings')}>\n                    <TextareaControl\n                        value={description || ''}\n                        onChange={descriptionValue => {\n                            setAttributes({ description: descriptionValue });\n                        }}\n                        label={__('Description')}\n                        help={__(\n                            'The description will be displayed in the menu if the current theme supports it.',\n                        )}\n                    />\n                    <TextControl\n                        value={title || ''}\n                        onChange={titleValue => {\n                            setAttributes({ title: titleValue });\n                        }}\n                        label={__('Link title')}\n                        autoComplete=\"off\"\n                    />\n                    <TextControl\n                        value={rel || ''}\n                        onChange={relValue => {\n                            setAttributes({ rel: relValue });\n                        }}\n                        label={__('Link rel')}\n                        autoComplete=\"off\"\n                    />\n                    <ToggleControl\n                        checked={subMenuEnabled}\n                        onChange={() => {\n                            setAttributes({ subMenuEnabled: !subMenuEnabled });\n                        }}\n                        label={__('Enable Sub Menu')}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <RichText\n                    ref={ref}\n                    identifier=\"label\"\n                    className={\n                        'is-style-text' === context['prc-block/menu']\n                            ? 'ui basic button'\n                            : ''\n                    }\n                    value={label}\n                    onChange={labelValue =>\n                        setAttributes({ label: labelValue })\n                    }\n                    onMerge={mergeBlocks}\n                    onReplace={onReplace}\n                    __unstableOnSplitAtEnd={() =>\n                        insertBlocksAfter(createBlock('prc-block/menu-link'))\n                    }\n                    aria-label={__('Navigation link text')}\n                    placeholder={itemLabelPlaceholder}\n                    keepPlaceholderOnFocus\n                    withoutInteractiveFormatting\n                    allowedFormats={[\n                        'core/bold',\n                        'core/italic',\n                        'core/image',\n                        'core/strikethrough',\n                    ]}\n                />\n                {isLinkOpen && (\n                    <Popover\n                        position=\"bottom center\"\n                        onClose={() => setIsLinkOpen(false)}\n                    >\n                        <LinkControl\n                            className=\"wp-block-navigation-link__inline-link-input\"\n                            value={link}\n                            showInitialSuggestions\n                            noDirectEntry={!!type}\n                            noURLSuggestion={!!type}\n                            suggestionsQuery={getSuggestionsQuery(type)}\n                            onChange={({\n                                title: newTitle = '',\n                                url: newURL = '',\n                                opensInNewTab: newOpensInNewTab,\n                                id,\n                            } = {}) =>\n                                setAttributes({\n                                    url: encodeURI(newURL),\n                                    label: (() => {\n                                        const normalizedTitle = newTitle.replace(\n                                            /http(s?):\\/\\//gi,\n                                            '',\n                                        );\n                                        const normalizedURL = newURL.replace(\n                                            /http(s?):\\/\\//gi,\n                                            '',\n                                        );\n                                        if (\n                                            '' !== newTitle &&\n                                            normalizedTitle !== normalizedURL &&\n                                            label !== newTitle\n                                        ) {\n                                            return escape(newTitle);\n                                        }\n                                        if (label) {\n                                            return label;\n                                        }\n                                        // If there's no label, add the URL.\n                                        return escape(normalizedURL);\n                                    })(),\n                                    opensInNewTab: newOpensInNewTab,\n                                    id,\n                                })\n                            }\n                        />\n                    </Popover>\n                )}\n                {true === subMenuEnabled && <div {...innerBlocksProps} />}\n            </div>\n        </Fragment>\n    );\n}\n\nexport default compose([\n    withSelect((select, ownProps) => {\n        const {\n            getBlockAttributes,\n            getClientIdsOfDescendants,\n            hasSelectedInnerBlock,\n            getBlockParentsByBlockName,\n            getSelectedBlockClientId,\n            getSettings,\n        } = select('core/block-editor');\n        const { clientId } = ownProps;\n        const hasDescendants = !!getClientIdsOfDescendants([clientId]).length;\n\n        const isImmediateParentOfSelectedBlock = hasSelectedInnerBlock(\n            clientId,\n            false,\n        );\n        const selectedBlockId = getSelectedBlockClientId();\n        const selectedBlockHasDescendants = !!getClientIdsOfDescendants([\n            selectedBlockId,\n        ])?.length;\n\n        return {\n            isImmediateParentOfSelectedBlock,\n            hasDescendants,\n            selectedBlockHasDescendants,\n        };\n    }),\n    withDispatch((dispatch, ownProps, registry) => {\n        return {\n            insertLinkBlock() {\n                const { clientId } = ownProps;\n\n                const { insertBlock } = dispatch('core/block-editor');\n\n                const { getClientIdsOfDescendants } = registry.select(\n                    'core/block-editor',\n                );\n                const navItems = getClientIdsOfDescendants([clientId]);\n                const insertionPoint = navItems.length ? navItems.length : 0;\n\n                const blockToInsert = createBlock('prc-block/menu-link');\n\n                insertBlock(blockToInsert, insertionPoint, clientId);\n            },\n        };\n    }),\n])(NavigationLinkEdit);\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n    category as categoryIcon,\n    page as pageIcon,\n    postTitle as postIcon,\n    tag as tagIcon,\n} from '@wordpress/icons';\n\nexport default [\n    {\n        name: 'link',\n        isDefault: true,\n        title: __('Link'),\n        description: __('A link to a URL.'),\n        attributes: {},\n    },\n    {\n        name: 'post',\n        icon: postIcon,\n        title: __('Post Link'),\n        description: __('A link to a post.'),\n        attributes: { type: 'post' },\n    },\n    {\n        name: 'page',\n        icon: pageIcon,\n        title: __('Page Link'),\n        description: __('A link to a page.'),\n        attributes: { type: 'page' },\n    },\n    {\n        name: 'topic',\n        icon: categoryIcon,\n        title: __('Topic Page Link'),\n        description: __('A link to a topic.'),\n        attributes: { type: 'topic' },\n    },\n    {\n        name: 'formats',\n        icon: tagIcon,\n        title: __('Format Link'),\n        description: __('A link to a format.'),\n        attributes: { type: 'formats' },\n    },\n    {\n        name: 'programs',\n        icon: tagIcon,\n        title: __('Program Link'),\n        description: __('A link to a program.'),\n        attributes: { type: 'programs' },\n    },\n];\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { mapMarker as linkIcon } from '@wordpress/icons';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\nimport variations from './variations';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Link'),\n    icon: linkIcon,\n    description: __('Add a page, link, or another item to your navigation.'),\n    variations,\n    __experimentalLabel: ({ label }) => label,\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","module.exports = wp.compose;","module.exports = wp.components;","module.exports = wp.url;","module.exports = wp.blocks;","module.exports = wp.data;"],"sourceRoot":""}