{"version":3,"sources":["webpack:///external \"wp.blocks\"","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/heading/index.js"],"names":["module","exports","wp","blocks","i18n","path","replace","window","concat","registerBlockStyle","name","label","registerBlockVariation","title","__","description","attributes","className","level"],"mappings":";;;;;;;;;;;;;;;;;uHAAAA,EAAOC,QAAUC,GAAGC,Q,gBCApBH,EAAOC,QAAUC,GAAGE,M,gCCSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,6ECVlD,iCAcAI,6BAAmB,eAAgB,CAC/B,CACIC,KAAM,iBACNC,MAAO,kBAEX,CACID,KAAM,aACNC,MAAO,gBAIfC,iCAAuB,eAAgB,CACnCF,KAAM,iBACNG,MAAOC,aAAG,kBACVC,YAAaD,aAAG,yCAChBE,WAAY,CACRC,UAAW,0BACXC,MAAO,M","file":"blocks/heading-8b625f53.js","sourcesContent":["module.exports = wp.blocks;","module.exports = wp.i18n;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * WordPress Dependencies\n */\n import { __ } from '@wordpress/i18n';\n import {\n    registerBlockStyle,\n    registerBlockVariation\n} from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\n\nregisterBlockStyle('core/heading', [\n    {\n        name: 'section-header',\n        label: 'Section Header',\n    },\n    {\n        name: 'sub-header',\n        label: 'Sub Header',\n    },\n]);\n\nregisterBlockVariation('core/heading', {\n    name: 'section-header',\n    title: __('Section Header'),\n    description: __('A heading styled for section headings'),\n    attributes: {\n        className: 'is-style-section-header',\n        level: 3,\n    },\n});\n\n// @TODO: Add support for a new attribute, isChapter and add support for a php class implementation of the new Gutenberg Table of Contents functionality. We can replace our custom table of contents functionality which would be great."],"sourceRoot":""}