{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./src/collapsible/edit.js","webpack:///./src/collapsible/save.js","webpack:///./src/collapsible/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"React\"","webpack:///external \"wp.blocks\""],"names":["module","exports","wp","element","i18n","ALLOWED_BLOCKS","TEMPLATE","edit","attributes","setAttributes","title","className","style","undefined","split","blockProps","useBlockProps","classnames","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","templateLock","template","useState","isOpen","setOpen","Accordion","styled","Title","active","index","onClick","includes","Icon","name","tagName","value","onChange","t","placeholder","formattingControls","keepPlaceholderOnFocus","display","marginLeft","Content","save","metadata","settings","__","description","keywords","registerBlockType","blockEditor","React","blocks"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUC,GAAGE,M,kfCgBdC,EAAiB,CACnB,iBACA,eACA,aACA,aACA,YACA,uBAGEC,EAAW,CAAC,CAAC,iBAAkB,KAwEtBC,EAtEF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAChBC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAETC,OAAQC,IAAcF,EAAYA,EAAUG,MAAM,KAAO,GAEzDC,EAAaC,wBAAc,CAC7BL,UAAWM,IAAWN,KAGpBO,EAAmBC,4CACrB,GACA,CACIC,cAAef,EACfgB,YAAa,WACbC,cAAc,EACdC,SAAUjB,IAf0B,EAmBlBkB,oBAAS,GAnBS,mBAmBrCC,EAnBqC,KAmB7BC,EAnB6B,KAqB5C,OACI,0BAASX,EACL,oBAACY,EAAA,EAAD,CAAWC,QAAM,GACb,oBAACD,EAAA,EAAUE,MAAX,CACIC,QAAQ,IAASL,EACjBM,MAAO,EACPC,QAAS,cAIT,oBAAC,WAAD,MACMpB,EAAMqB,SAAS,uBACb,oBAACC,EAAA,EAAD,CACIC,KAAMV,EAAS,aAAe,cAC9BO,QAAS,WACLN,GAASD,MAIrB,oBAAC,WAAD,CACIW,QAAQ,MACRC,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI9B,EAAc,CAAEC,MAAO6B,KACtCC,YAAY,kBACZC,mBAAoB,GACpBC,wBAAsB,EACtB9B,MAAO,CACH+B,QAAS,kBAGhB/B,EAAMqB,SAAS,uBACZ,oBAACC,EAAA,EAAD,CACIC,KAAMV,EAAS,QAAU,OACzBb,MAAO,CAAEgC,WAAY,SACrBZ,QAAS,WACLN,GAASD,QAM7B,oBAACE,EAAA,EAAUkB,QAAX,CAAmBf,QAAQ,IAASL,GAChC,0BAASP,OCjFd4B,EAJF,WACT,OAAO,oBAAC,cAAYD,QAAb,O,6kBCOHV,EAASY,EAATZ,KAEFa,EAAW,CACbtC,MAAOuC,aAAG,mBACVC,YAAaD,aAAG,4DAChBE,SAAU,CAACF,aAAG,eAAgBA,aAAG,aAAcA,aAAG,oBAClD1C,OACAuC,QAGJM,4BAAkBjB,EAAD,OAAYY,GAAaC,K,gBCvB1ChD,EAAOC,QAAUC,GAAGmD,a,gBCApBrD,EAAOC,QAAUqD,O,gBCAjBtD,EAAOC,QAAUC,GAAGqD,S","file":"blocks/collapsible-e42925c4.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { Accordion, Icon } from 'semantic-ui-react';\n\n/**\n * WordPress dependencies\n */\nimport { useState, Fragment } from '@wordpress/element';\nimport {\n    RichText,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    useBlockProps,\n} from '@wordpress/block-editor';\n\nconst ALLOWED_BLOCKS = [\n    'core/paragraph',\n    'core/heading',\n    'core/image',\n    'core/table',\n    'core/list',\n    'prc-block/menu-link',\n];\n\nconst TEMPLATE = [['core/paragraph', {}]];\n\nconst edit = ({ attributes, setAttributes }) => {\n    const { title, className } = attributes;\n\n    const style = undefined !== className ? className.split(' ') : [];\n\n    const blockProps = useBlockProps({\n        className: classnames(className),\n    });\n\n    const innerBlocksProps = useInnerBlocksProps(\n        {},\n        {\n            allowedBlocks: ALLOWED_BLOCKS,\n            orientation: 'vertical',\n            templateLock: false,\n            template: TEMPLATE,\n        },\n    );\n\n    const [isOpen, setOpen] = useState(true);\n\n    return (\n        <div {...blockProps}>\n            <Accordion styled>\n                <Accordion.Title\n                    active={true === isOpen}\n                    index={0}\n                    onClick={() => {\n                        // setOpen(!isOpen);\n                    }}\n                >\n                    <Fragment>\n                        {!style.includes('is-style-alternate') && (\n                            <Icon\n                                name={isOpen ? 'caret down' : 'caret right'}\n                                onClick={() => {\n                                    setOpen(!isOpen);\n                                }}\n                            />\n                        )}\n                        <RichText\n                            tagName=\"div\" // The tag here is the element output and editable in the admin\n                            value={title} // Any existing content, either from the database or an attribute default\n                            onChange={t => setAttributes({ title: t })} // Store updated content as a block attribute\n                            placeholder=\"How we did this\" // Display this text before any content has been added by the user\n                            formattingControls={[]}\n                            keepPlaceholderOnFocus\n                            style={{\n                                display: 'inline-block',\n                            }}\n                        />\n                        {style.includes('is-style-alternate') && (\n                            <Icon\n                                name={isOpen ? 'minus' : 'plus'}\n                                style={{ marginLeft: '0.5em' }}\n                                onClick={() => {\n                                    setOpen(!isOpen);\n                                }}\n                            />\n                        )}\n                    </Fragment>\n                </Accordion.Title>\n                <Accordion.Content active={true === isOpen}>\n                    <div {...innerBlocksProps} />\n                </Accordion.Content>\n            </Accordion>\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('PRC Collapsible'),\n    description: __('Add a block that displays content in a single accordion.'),\n    keywords: [__('Collapsible'), __('Accordion'), __('How we did this')],\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","module.exports = React;","module.exports = wp.blocks;"],"sourceRoot":""}