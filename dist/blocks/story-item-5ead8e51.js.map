{"version":3,"sources":["webpack:///external \"React\"","webpack:///external [\"wp\",\"data\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external [\"wp\",\"primitives\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external \"lodash\"","webpack:///external [\"wp\",\"element\"]","webpack:///external \"moment\"","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external [\"wp\",\"keycodes\"]","webpack:///external \"ReactDOM\"","webpack:///./node_modules/@wordpress/icons/build-module/library/arrow-right.js","webpack:///./node_modules/@wordpress/icons/build-module/library/arrow-left.js","webpack:///./node_modules/@wordpress/icons/build-module/library/arrow-up.js","webpack:///./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack:///./node_modules/@wordpress/icons/build-module/library/close.js","webpack:///./node_modules/@wordpress/icons/build-module/library/more.js","webpack:///./src/story-item/edit/helpers.js","webpack:///./src/story-item/edit/controls.js","webpack:///./src/story-item/edit/image.js","webpack:///./src/story-item/edit/description.js","webpack:///./src/story-item/edit/extra.js","webpack:///./src/story-item/edit/header.js","webpack:///./src/story-item/edit/index.js","webpack:///./src/story-item/save.js","webpack:///./src/story-item/transforms.js","webpack:///./src/story-item/index.js","webpack:///external [\"wp\",\"blocks\"]"],"names":["module","exports","window","_slicedToArray","arr","i","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","unsupportedIterableToArray","nonIterableRest","_arrayLikeToArray","len","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","_arrayWithHoles","isArray","_nonIterableRest","TypeError","moment","xmlns","viewBox","d","getAttributesFromPost","post","imageSize","isRefresh","storyItem","title","hasOwnProperty","rendered","description","excerpt","link","label","date","postId","id","extra","art","image","rawUrl","isChartArt","chartArt","console","log","setPostByStubID","setAttributes","undefined","apiFetch","path","method","then","attrs","catch","error","URLControl","type","url","useState","isLinkOpen","setIsLinkOpen","aria-expanded","aria-haspopup","__","icon","onClick","showTooltip","position","onClose","style","padding","subType","onChange","obj","ToolbarControls","attributes","imageSlot","headerSize","postID","Icon","svgPath","isPressed","width","height","ImageSlotIcon","selected","arrowRight","arrowLeft","arrowUp","arrowDown","close","more","ImageSizeIcon","currentlyActive","A1","A2","A3","A4","XL","HeadingLevelIcon","1","2","3","handleImageSizeChange","newSize","data","setArtBySize","controls","isActive","Controls","context","rootClientId","isRefreshing","refresh","enableHeader","enableExcerpt","enableExcerptBelow","enableExtra","enableBreakingNews","enableEmphasis","enableAltTaxonomy","enableMeta","inLoop","options","newSlot","checked","prcBreakingNews","alert","isInteger","isSecondary","isBusy","setTimeout","marginBottom","isDestructive","Placeholder","isColumnLayout","showInitialSuggestions","isLink","ALLOWED_MEDIA_TYPES","Edit","img","size","onSelect","media","allowedTypes","render","openFn","open","placeholder","Img","slot","isXL","isA1","isA2","isA3","isA4","className","classNames","ui","bordered","Description","content","sansSerif","enabled","classes","tagName","multiline","Extra","breakingNews","Content","href","KickerEditor","taxonomy","labelOptions","setLabelOptions","useEffect","getTermsAsOptions","display","alignItems","l","Header","altHeaderWeight","large","medium","small","light","Item","Meta","t","allowedFormats","edit","isSelected","clientId","isTransformed","Promise","resolve","reject","getAttributesFromURL","payload","keys","handleExcerptAndPostIdUpdate","useSelect","select","getBlockRootClientId","enableAltHeaderWeight","blockProps","useBlockProps","TopAndLeftSlot","DefaultSlot","BottomAndRightSlot","JSON","parse","stacked","save","regex","RegExp","transforms","isMatch","node","nodeName","textContent","transform","trim","isEmpty","createBlock","metadata","settings","keywords","example","format","isPreview","variations","isDefault","registerBlockType"],"mappings":"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","file":"blocks/story-item-5ead8e51.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"lodash\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","module.exports = moment;","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","(function() { module.exports = window[\"wp\"][\"keycodes\"]; }());","(function() { module.exports = window[\"ReactDOM\"]; }());","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var arrowRight=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M14.3 6.7l-1.1 1.1 4 4H4v1.5h13.3l-4.1 4.4 1.1 1.1 5.8-6.3z\"}));export default arrowRight;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var arrowLeft=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M20 10.8H6.7l4.1-4.5-1.1-1.1-5.8 6.3 5.8 5.8 1.1-1.1-4-3.9H20z\"}));export default arrowLeft;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var arrowUp=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M12.5 3.9L6.7 9.7l1.1 1.1 4-4V20h1.4V6.7l4.5 4.1 1.1-1.1z\"}));export default arrowUp;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var arrowDown=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M16.2 13.2l-4 4V4h-1.5v13.3l-4.5-4.1-1 1.1 6.2 5.8 5.8-5.8-1-1.1z\"}));export default arrowDown;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var close=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z\"}));export default close;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{Path,SVG}from'@wordpress/primitives';var more=createElement(SVG,{viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\"},createElement(Path,{d:\"M4 9v1.5h16V9H4zm12 5.5h4V13h-4v1.5zm-6 0h4V13h-4v1.5zm-6 0h4V13H4v1.5z\"}));export default more;","/**\n * WordPress Dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\nconst setArtBySize = (imageSize, postId, setAttributes) => {\n    if (0 !== postId && false !== setAttributes) {\n        apiFetch({\n            path: `/prc-api/v2/get-art/?postId=${postId}`,\n        }).then(data => {\n            if (false !== data) {\n                if (\n                    undefined !== data[imageSize] &&\n                    false !== setAttributes\n                ) {\n                    setAttributes({\n                        image: data[imageSize].rawUrl,\n                        isChartArt: data[imageSize].chartArt,\n                    });\n                }\n            }\n        });\n    }\n};\n\nconst getAttributesFromPost = (post, imageSize, isRefresh = false) => {\n    const storyItem = {\n        title: post.title.hasOwnProperty('rendered')\n            ? post.title.rendered\n            : post.title,\n        description: post.excerpt.hasOwnProperty('rendered')\n            ? post.excerpt.rendered\n            : post.excerpt,\n        link: post.link,\n        label: post.hasOwnProperty('label') ? post.label : 'Report',\n        date: post.date,\n        postId: post.id,\n    };\n\n    if ( true !== isRefresh ) {\n        storyItem.extra = '';\n    }\n\n    if (post.art) {\n        const art = post.art;\n        storyItem.image = art[imageSize].rawUrl;\n        storyItem.isChartArt = art[imageSize].chartArt;\n    }\n\n    console.log('getAttributesFromPost', post, storyItem);\n    \n    return storyItem;\n};\n\nconst getAttributesFromURL = (url, imageSize = 'A1') => {\n    return new Promise((resolve, reject) => {\n        apiFetch({\n            path: '/prc-api/v2/blocks/helpers/get-post-by-url',\n            method: 'POST',\n            data: { url },\n        })\n            .then(post => {\n                console.log('setPostbyURL', post);\n                if (false !== post) {\n                    const attrs = getAttributesFromPost(post, imageSize, false);\n                    resolve(attrs);\n                } else {\n                    reject(post);\n                }\n            })\n            .catch(err => {\n                console.error(err);\n                reject(err);\n            });\n    });\n}\n\n/**\n * Set's post attributes by url if a post is not found then failover and set just the link as what was passed through.\n * @param {string} url\n * @param {func} setAttributes\n */\nconst setPostByURL = (url, imageSize, isRefresh, setAttributes) => {\n    if (undefined === url || undefined === setAttributes) {\n        return;\n    }\n    apiFetch({\n        path: '/prc-api/v2/blocks/helpers/get-post-by-url',\n        method: 'POST',\n        data: { url },\n    })\n        .then(post => {\n            console.log('setPostbyURL', post);\n            if (false !== post) {\n                const attrs = getAttributesFromPost(post, imageSize, isRefresh);\n                setAttributes(attrs);\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            setAttributes({ link: url });\n        });\n};\n\nconst setPostByStubID = (postId, imageSize, isRefresh, setAttributes) => {\n    if (undefined === postId || undefined === setAttributes) {\n        return;\n    }\n    apiFetch({\n        path: `/wp/v2/stub/${postId}`,\n        method: 'GET',\n    })\n        .then(post => {\n            console.log('setPostByStubID', postId, post);\n            if (false !== post) {\n                const attrs = getAttributesFromPost(post, imageSize, isRefresh);\n                setAttributes(attrs);\n            }\n        })\n        .catch(err => console.error(err));\n};\n\nexport {\n    setArtBySize,\n    setPostByStubID,\n    setPostByURL,\n    getAttributesFromURL,\n}","/**\n * External Dependencies\n */\nimport { WPObjectSearchField } from '@pewresearch/app-components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { isInteger } from 'lodash';\nimport {\n    InspectorControls,\n    InspectorAdvancedControls,\n    BlockControls,\n    __experimentalLinkControl as LinkControl,\n} from '@wordpress/block-editor';\nimport { Fragment, useState } from '@wordpress/element';\nimport {\n    Button,\n    PanelBody,\n    ToggleControl,\n    SelectControl,\n    ToolbarButton,\n    ToolbarDropdownMenu,\n    ToolbarGroup,\n    Path,\n    Placeholder as WPComPlaceholder,\n    SVG,\n    Popover,\n} from '@wordpress/components';\nimport {\n    close,\n\tmore,\n\tarrowLeft,\n\tarrowRight,\n\tarrowUp,\n\tarrowDown,\n} from '@wordpress/icons';\n\n/**\n * Internal Dependencies\n */\nimport { setPostByStubID, setArtBySize } from './helpers';\n\nconst URLControl = ({ title, type, id, url, imageSize = 'A1', setAttributes }) => {\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    return (\n        <Fragment>\n            <ToolbarButton\n                aria-expanded={isLinkOpen}\n                aria-haspopup=\"true\"\n                label={__('Set Link')}\n                icon=\"admin-links\"\n                onClick={() => setIsLinkOpen(!isLinkOpen)}\n                showTooltip\n            />\n            {true === isLinkOpen && (\n                <Popover\n                    position=\"bottom center\"\n                    onClose={() => setIsLinkOpen(false)}\n                >\n                    <div style={{\n                        padding: '12px'\n                    }}>\n                        <WPObjectSearchField\n                            value={{\n                                url,\n                                title,\n                                type,\n                                id,\n                            }}\n                            type='post'\n                            subType='stub'\n                            onChange={obj => {\n                                if (obj.hasOwnProperty('id')) {\n                                    setPostByStubID(obj.id, imageSize, false, setAttributes);\n                                }\n                                if (!obj.hasOwnProperty('id') && obj.hasOwnProperty('url')) {\n                                    setAttributes({link: obj.url});\n                                }\n                            }}\n                        />\n                    </div>\n                </Popover>\n            )}\n        </Fragment>\n    );\n};\n\nconst changeImageSlot = (selected, classNames, setAttributes) => {\n    const classDictionary = [\n        'is-style-default',\n        'is-style-left',\n        'is-style-right',\n        'is-style-top',\n        'is-style-bottom',\n        'is-style-disabled',\n    ];\n    // look at classnames, make into an array, check array for if is-style-X, if so remove it.\n    // merge the classNames with the selected from the class dictionary?\n    // set the imageSLot in attributes and also the classname?\n}\n\nconst ToolbarControls = ({ attributes, setAttributes }) => {\n    const { link, imageSize, imageSlot, headerSize, isChartArt, postID, title } = attributes;\n    const postId = postID;\n\n    const Icon = ({ svgPath = false, isPressed = false }) => {\n        if (false === svgPath) {\n            return null;\n        }\n        return (\n            <SVG\n                width={24}\n                height={24}\n                viewBox='0 0 24 24'\n                xmlns=\"http://www.w3.org/2000/svg\"\n                isPressed={isPressed}\n            >\n                <Path d={svgPath} />\n            </SVG>\n        );\n    };\n\n    const ImageSlotIcon = ({selected}) => {\n        if ( 'right' === selected ) {\n            return arrowRight;\n        }\n        if ( 'left' === selected ) {\n            return arrowLeft;\n        }\n        if ( 'top' === selected ) {\n            return arrowUp;\n        }\n        if ( 'bottom' === selected ) {\n            return arrowDown;\n        }\n        if ( 'disabled' === selected ) {\n            return close;\n        }\n        return more;\n    }\n\n    const ImageSizeIcon = ({selected, currentlyActive}) => {\n        const iconPaths = {\n            A1: 'M12.13,18.09h-3l-.74-2.46H4.49l-.75,2.46H1.27l3.84-12H8.36ZM7.72,13.41,6.44,9.2,5.16,13.41Z M13.31,8.35a7,7,0,0,0,4-2.44h2v10h3.33v2.19H13V15.9h3.63V9a23.54,23.54,0,0,1-3.33,1.78Z',\n            A2: 'M12.5,18.09h-3l-.74-2.46H4.86l-.75,2.46H1.64l3.83-12H8.73ZM8.09,13.41,6.81,9.2,5.53,13.41Z M22.16,18.09h-9V15.75l.72-.52,1.46-1a31.07,31.07,0,0,0,3.1-2.6,2.74,2.74,0,0,0,.9-1.87,1.55,1.55,0,0,0-1.66-1.6c-1.19,0-1.86.76-2,2.3l-2.48-.55c.56-2.67,2.11-4,4.66-4a4.37,4.37,0,0,1,3,.91A3.5,3.5,0,0,1,22.2,9.69c0,1.51-.69,2.61-2.52,4a33.64,33.64,0,0,1-3.06,2h5.74Z',\n            A3: 'M12.52,18h-3l-.74-2.47H4.89L4.13,18H1.67L5.5,6H8.76ZM8.11,13.32,6.83,9.11,5.56,13.32Z M17.38,10.75a1.87,1.87,0,0,0,1.46-.47,1.36,1.36,0,0,0,.38-.94A1.5,1.5,0,0,0,17.6,7.89c-1,0-1.51.45-1.84,1.53L13.28,9a3.62,3.62,0,0,1,1.1-2,4.58,4.58,0,0,1,3.33-1.24C20.24,5.82,22,7.13,22,9a2.69,2.69,0,0,1-2,2.68,3.09,3.09,0,0,1,1.51.74,2.73,2.73,0,0,1,.9,2.11c0,2.19-1.82,3.61-4.64,3.61A4.67,4.67,0,0,1,14.23,17a3.88,3.88,0,0,1-1.31-2.45l2.55-.36A2,2,0,0,0,17.63,16a1.64,1.64,0,0,0,1.84-1.62,1.55,1.55,0,0,0-.61-1.27,3,3,0,0,0-1.66-.27H16.1V10.75Z',\n            A4: 'M12.31,18.09h-3l-.74-2.46H4.67l-.75,2.46H1.45l3.84-12H8.54ZM7.9,13.41,6.62,9.2,5.34,13.41Z M20.86,13.22h1.69v2.1H20.86v2.77H18.05V15.32H12.81v-2.1l4.84-7.31h3.21Zm-2.69,0V9.16c0-.09,0-.28,0-.57l0-.51-3.29,5.14Z',\n            XL: 'M9.23,11.58,12.94,18H9.7L7.28,13.65,4.87,18H2.21l3.71-6.38L2.62,6H5.9L7.84,9.65,9.88,6h2.63Z M21.79,15.63V18H14.18V6H17v9.64Z',\n        };\n        return (\n            <Icon\n                svgPath={iconPaths[selected]}\n                isPressed={selected === currentlyActive}\n            />\n        )\n    }\n\n    const HeadingLevelIcon = ({selected, currentlyActive}) => {\n        const iconPaths = {\n            1: 'M15.81,15.63V18H8.19V6H11v9.63Z', // Large\n            2: 'M7.81,8.21V18H5.46V6H9.83l2.11,7.18L14.17,6h4.37V18H15.72V8.21l-3,9.79H10.77Z', // Medium\n            3: 'M14.21,9.43A1.9,1.9,0,0,0,12.12,8c-1,0-1.64.4-1.64,1.06s.43,1,1.73,1.26a8.68,8.68,0,0,1,3.15,1,3.35,3.35,0,0,1,1.55,2.85,3.89,3.89,0,0,1-1.77,3.2,6,6,0,0,1-3.17.77,5.53,5.53,0,0,1-3.44-1,4,4,0,0,1-1.44-2.31l2.6-.59a2.2,2.2,0,0,0,2.43,1.67c1.19,0,1.92-.48,1.92-1.26s-.48-1-2.09-1.36a8.16,8.16,0,0,1-2.77-.94A3.08,3.08,0,0,1,7.72,9.63,3.58,3.58,0,0,1,9,6.86a4.44,4.44,0,0,1,3.15-1,5.08,5.08,0,0,1,3.15.91,3.74,3.74,0,0,1,1.33,1.91Z' // Small\n        };\n        return (\n            <Icon\n                svgPath={iconPaths[selected]}\n                isPressed={selected === currentlyActive}\n            />\n        )\n    }\n\n    const handleImageSizeChange = (newSize) => {\n        setAttributes({ imageSize: newSize });\n        setArtBySize(newSize, postId, setAttributes);\n    }\n\n    return (\n        <BlockControls>\n            <ToolbarGroup>\n                <URLControl title={title} id={postId} url={link} type=\"stub\" setAttributes={setAttributes} />\n            </ToolbarGroup>\n            <ToolbarGroup>\n                <ToolbarDropdownMenu\n                    icon={()=> <HeadingLevelIcon selected={headerSize} currentlyActive={headerSize}/>}\n                    label=\"Select Heading Size\"\n                    controls={ [\n                        {\n                            title: 'Large',\n                            icon: (\n                                <HeadingLevelIcon selected={1} currentlyActive={headerSize}/>\n                            ),\n                            isActive: 1 === headerSize,\n                            onClick: () => setAttributes({ headerSize: 1 }),\n                        },\n                        {\n                            title: 'Medium',\n                            icon: (\n                                <HeadingLevelIcon selected={2} currentlyActive={headerSize}/>\n                            ),\n                            isActive: 2 === headerSize,\n                            onClick: () => setAttributes({ headerSize: 2 }),\n                        },\n                        {\n                            title: 'Small',\n                            icon: (\n                                <HeadingLevelIcon selected={3} currentlyActive={headerSize}/>\n                            ),\n                            isActive: 3 === headerSize,\n                            onClick: () => setAttributes({ headerSize: 3 }),\n                        },\n                    ] }\n                />\n            </ToolbarGroup>\n            <ToolbarGroup>\n                <ToolbarDropdownMenu\n                    icon={()=><ImageSlotIcon selected={imageSlot}/>}\n                    label=\"Select Image Slot\"\n                    controls={ [\n                        {\n                            title: 'Default',\n                            icon: (\n                                <ImageSlotIcon selected='default'/>\n                            ),\n                            isActive: 'default' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'default';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                        {\n                            title: 'Right',\n                            icon: (\n                                <ImageSlotIcon selected='right'/>\n                            ),\n                            isActive: 'right' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'right';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                        {\n                            title: 'Left',\n                            icon: (\n                                <ImageSlotIcon selected='left'/>\n                            ),\n                            isActive: 'left' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'left';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                        {\n                            title: 'Top',\n                            icon: (\n                                <ImageSlotIcon selected='top'/>\n                            ),\n                            isActive: 'top' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'top';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                        {\n                            title: 'Bottom',\n                            icon: (\n                                <ImageSlotIcon selected='bottom'/>\n                            ),\n                            isActive: 'bottom' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'bottom';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                        {\n                            title: 'Disabled',\n                            icon: (\n                                <ImageSlotIcon selected='disabled'/>\n                            ),\n                            isActive: 'disabled' === imageSlot,\n                            onClick: () => {\n                                const newSlot = 'disabled';\n                                setAttributes({imageSlot: newSlot});\n                            },\n                        },\n                    ] }\n                />\n                {'disabled' !== imageSlot && (\n                    <Fragment>\n                    <ToolbarDropdownMenu\n                        icon={()=> <ImageSizeIcon selected={imageSize} currentlyActive={imageSize}/>}\n                        label=\"Select Image Size\"\n                        controls={ [\n                            {\n                                title: 'A1',\n                                icon: (\n                                    <ImageSizeIcon selected='A1' currentlyActive={imageSize}/>\n                                ),\n                                isActive: 'A1' === imageSize,\n                                onClick: () => handleImageSizeChange('A1'),\n                            },\n                            {\n                                title: 'A2',\n                                icon: (\n                                    <ImageSizeIcon selected='A2' currentlyActive={imageSize}/>\n                                ),\n                                isActive: 'A2' === imageSize,\n                                onClick: () => handleImageSizeChange('A2'),\n                            },\n                            {\n                                title: 'A3',\n                                icon: (\n                                    <ImageSizeIcon selected='A3' currentlyActive={imageSize}/>\n                                ),\n                                isActive: 'A3' === imageSize,\n                                onClick: () => handleImageSizeChange('A3'),\n                            },\n                            {\n                                title: 'A4',\n                                icon: (\n                                    <ImageSizeIcon selected='A4' currentlyActive={imageSize}/>\n                                ),\n                                isActive: 'A4' === imageSize,\n                                onClick: () => handleImageSizeChange('A4'),\n                            },\n                            {\n                                title: 'XL',\n                                icon: (\n                                    <ImageSizeIcon selected='XL' currentlyActive={imageSize}/>\n                                ),\n                                isActive: 'XL' === imageSize,\n                                onClick: () => handleImageSizeChange('XL'),\n                            }\n                        ] }\n                    />\n                    <ToolbarButton\n                        icon=\"chart-pie\"\n                        isPressed={isChartArt}\n                        label={__('Enable Chart Art')}\n                        onClick={() => {\n                            setAttributes({\n                                isChartArt: !isChartArt,\n                            });\n                        }}\n                    />\n                    </Fragment>\n                )}\n            </ToolbarGroup>\n        </BlockControls>\n    );\n};\n\nconst Controls = ({ attributes, setAttributes, context, rootClientId }) => {\n    const [isRefreshing, refresh] = useState(false);\n    const {\n        postID,\n        link,\n        imageSize,\n        imageSlot,\n        enableHeader,\n        enableExcerpt,\n        enableExcerptBelow,\n        enableExtra,\n        enableBreakingNews,\n        enableEmphasis,\n        enableAltTaxonomy,\n        enableMeta,\n        inLoop,\n    } = attributes;\n    const postId = postID;\n\n    const label = __('Story Item Options');\n\n    return (\n        <Fragment>\n            <ToolbarControls {...{ attributes, setAttributes }} />\n            <InspectorControls>\n                <PanelBody title={label}>\n                    <SelectControl\n                        label=\"Image Slot\"\n                        value={ imageSlot }\n                        options={ [\n                            { label: 'Default', value: 'default' },\n                            { label: 'Left', value: 'left' },\n                            { label: 'Right', value: 'right' },\n                            { label: 'Top', value: 'top' },\n                            { label: 'Bottom', value: 'bottom' },\n                            { label: 'Disabled', value: 'disabled' },\n                        ] }\n                        onChange={ ( newSlot ) => {\n                            setAttributes({imageSlot: newSlot});\n                        } }\n                    />\n                     <ToggleControl\n                        label={\n                            enableMeta\n                                ? 'Meta Enabled'\n                                : 'Meta Disabled'\n                        }\n                        checked={enableMeta}\n                        onChange={() => {\n                            setAttributes({ enableMeta: !enableMeta });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableHeader ? 'Header Enabled' : 'Header Disabled'\n                        }\n                        checked={enableHeader}\n                        onChange={() => {\n                            setAttributes({ enableHeader: !enableHeader });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableExcerpt ? 'Excerpt Enabled' : 'Excerpt Disabled'\n                        }\n                        checked={enableExcerpt}\n                        onChange={() => {\n                            setAttributes({ enableExcerpt: !enableExcerpt });\n                        }}\n                    />\n                    {true === enableExcerpt &&\n                        ('right' === imageSlot || 'left' === imageSlot) && (\n                            <ToggleControl\n                                label={\n                                    enableExcerptBelow\n                                        ? 'Excerpt Will Appear Below'\n                                        : 'Excerpt Will Appear Normally'\n                                }\n                                checked={enableExcerptBelow}\n                                onChange={() => {\n                                    setAttributes({\n                                        enableExcerptBelow: !enableExcerptBelow,\n                                    });\n                                }}\n                            />\n                        )}\n                    <ToggleControl\n                        label={\n                            enableExtra ? 'Extras Enabled' : 'Extras Disabled'\n                        }\n                        checked={enableExtra}\n                        onChange={() => {\n                            setAttributes({ enableExtra: !enableExtra });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableBreakingNews\n                                ? 'Breaking News Enabled'\n                                : 'Breaking News Disabled'\n                        }\n                        checked={enableBreakingNews}\n                        onChange={() => {\n                            if (false !== window.prcBreakingNews) {\n                                setAttributes({\n                                    enableBreakingNews: !enableBreakingNews,\n                                });\n                            } else {\n                                // eslint-disable-next-line no-alert\n                                alert(\n                                    'There are no currently active, authorized, breaking news events. The breaking news toggle will be set back to false.',\n                                );\n                                setAttributes({\n                                    enableBreakingNews: false,\n                                });\n                            }\n                        }}\n                    />\n                    <ToggleControl\n                        label={enableAltTaxonomy ? 'Research Areas' : 'Formats'}\n                        checked={enableAltTaxonomy}\n                        onChange={() => {\n                            setAttributes({\n                                enableAltTaxonomy: !enableAltTaxonomy,\n                            });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableEmphasis\n                                ? 'Emphasis Enabled'\n                                : 'Emphasis Disabled'\n                        }\n                        checked={enableEmphasis}\n                        onChange={() => {\n                            setAttributes({ enableEmphasis: !enableEmphasis });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            inLoop\n                                ? 'Pub Listing Style On Mobile'\n                                : 'Normal Styling On Mobile'\n                        }\n                        checked={inLoop}\n                        onChange={() => {\n                            setAttributes({ inLoop: !inLoop });\n                        }}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <InspectorAdvancedControls>\n                {isInteger(postId) && 0 !== postId && (\n                    <Button\n                        isSecondary\n                        isBusy={isRefreshing}\n                        onClick={() =>{\n                            refresh(true);\n                            setTimeout(() => {\n                                setPostByStubID(postId, imageSize, true, setAttributes);\n                                refresh(false);\n                            }, 500);\n                        }}\n                        style={{ marginBottom: '1em' }}\n                    >\n                        Refresh Post\n                    </Button>\n                )}\n                <Button\n                    isDestructive\n                    isBusy={isRefreshing}\n                    onClick={() =>\n                        setAttributes({\n                            title: '',\n                            excerpt: '',\n                            extra: '',\n                            link: '',\n                            label: '',\n                            date: '',\n                            image: '',\n                            postID: 0,\n                        })\n                    }\n                    style={{ marginBottom: '1em' }}\n                >\n                    Reset Story Item Block\n                </Button>\n            </InspectorAdvancedControls>\n        </Fragment>\n    );\n};\n\nconst Placeholder = ({attributes, setAttributes}) => {\n    const {imageSize} = attributes;\n    return (\n        <WPComPlaceholder\n            icon=\"format-aside\"\n            label={__(` Search for a Story Item`)}\n            isColumnLayout\n        >\n            <WPObjectSearchField\n                type='post'\n                subType='stub'\n                onChange={obj => {\n                    if (obj.hasOwnProperty('id')) {\n                        setPostByStubID(obj.id, imageSize, false, setAttributes);\n                    }\n                }}\n                showInitialSuggestions\n            />\n            <Button isLink onClick={()=>{\n                // Create a blank Story Item\n                setAttributes({postId: 0});\n            }}>Skip</Button>\n        </WPComPlaceholder>\n    )\n};\n\nexport {\n    Placeholder,\n    Controls\n}\n","import { Fragment, useState, useEffect } from '@wordpress/element';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport classNames from 'classnames/bind';\n\nimport { ImageDisplay } from '@pewresearch/app-components';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\nconst Edit = ({ img, size, postId, setAttributes }) => {\n    // const [art, setArt] = useState(false);\n\n    // // When the postId changes go fetch new art for this post and store it in state and also store the correct image url in attributes.\n    // useEffect(() => {\n    //     if (0 !== postId && false !== setAttributes) {\n    //         apiFetch({\n    //             path: `/prc-api/v2/get-art/?postId=${postId}`,\n    //         }).then(data => {\n    //             if (false !== data) {\n    //                 setArt(data);\n    //                 setAttributes({ image: data[size].rawUrl });\n    //             } else {\n    //                 // If no art on any subsequent art fetches set to false\n    //                 setArt(false);\n    //             }\n    //         });\n    //     }\n    // }, [postId]);\n\n    // /**\n    //  * If the art or size changes then go check the art object and set the approrpiate image and chart art given the arts options.\n    //  */\n    // useEffect(() => {\n    //     if (\n    //         false !== art &&\n    //         undefined !== art[size] &&\n    //         false !== setAttributes\n    //     ) {\n    //         setAttributes({\n    //             image: art[size].rawUrl,\n    //             isChartArt: art[size].chartArt,\n    //         });\n    //     }\n    // }, [art, size]);\n\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={media => setAttributes({ image: media.url })}\n                allowedTypes={ALLOWED_MEDIA_TYPES}\n                render={({ open }) => {\n                    let openFn = open;\n                    // if (0 !== postId) {\n                    //     openFn = () => alert(\"You are unable to edit this image as this story item is linked to a post. To edit, edit the post's art direction. postId:: \" + postId);\n                    // }\n                    return(\n                        <Fragment>\n                            {\n                                // If we have an actual image here then display it otherwise give us the placeholder\n                            }\n                            {undefined !== img && 0 !== img.length && (\n                                <ImageDisplay\n                                    img={img}\n                                    size={size}\n                                    link=\"\"\n                                    onClick={openFn}\n                                />\n                            )}\n                            {(undefined === img || 0 === img.length) && (\n                                <ImageDisplay\n                                    img={img}\n                                    size={size}\n                                    link=\"\"\n                                    onClick={openFn}\n                                    placeholder\n                                />\n                            )}\n                        </Fragment>\n                    )\n                }}\n            />\n        </MediaUploadCheck>\n    );\n};\n\n/**\n * Props:\n * img: string url of image to display\n * size: string of image/slot size (A1,A2,A3,A4)\n * link: string of url to go to when image is clicked on front end\n * slot: if set to null then no image size chooser will be display\n * chartArt: if set to null then no chart art button will appear\n * setAttributes: defaults to false unless otherwise provided a function to pass data back up to a HOC state.\n *\n * <Img id={} img={} size={} slot={} chartArt={} postId={} setAttributes={}/>\n */\n\nconst Img = ({ img, size, slot, chartArt, postId, setAttributes }) => {\n    console.log('<Img>', img);\n\n    const classes = () => {\n        let isXL = false;\n        let isA1 = false;\n        let isA2 = false;\n        let isA3 = false;\n        let isA4 = false;\n        if (false !== slot) {\n            if ('XL' === size) {\n                isXL = true;\n            } else if ('A1' === size) {\n                isA1 = true;\n            } else if ('A2' === size) {\n                isA2 = true;\n            } else if ('A3' === size) {\n                isA3 = true;\n            } else if ('A4' === size) {\n                isA4 = true;\n            }\n        }\n\n        return classNames({\n            ui: true,\n            XL: isXL,\n            A1: isA1,\n            A2: isA2,\n            A3: isA3,\n            A4: isA4,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <Edit\n                img={img}\n                size={size}\n                postId={postId}\n                setAttributes={setAttributes}\n            />\n        </div>\n    );\n};\n\nexport default Img;\n","/**\n * External Dependencies\n */\nimport classNames from 'classnames/bind';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nconst Description = ({ content, sansSerif, enabled, setAttributes }) => {\n    if (true !== enabled) {\n        return <Fragment />;\n    }\n\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n\n    return (\n        <RichText\n            tagName=\"div\"\n            value={content}\n            onChange={description => setAttributes({ description })}\n            placeholder=\"Story item description...\"\n            multiline=\"p\"\n            className={classes}\n        />\n    );\n};\n\nexport default Description;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nconst Extra = ({ content, breakingNews, enabled, setAttributes }) => {\n    return (\n        <Fragment>\n            {false !== setAttributes && true === enabled && (\n                <RichText\n                    tagName=\"ul\"\n                    value={content}\n                    onChange={extra => setAttributes({ extra })}\n                    placeholder={content}\n                    multiline=\"li\"\n                    className=\"extra\"\n                />\n            )}\n            {false === setAttributes && true === enabled && (\n                <RichText.Content\n                    tagName=\"ul\"\n                    value={content}\n                    className=\"extra\"\n                />\n            )}\n            {true === breakingNews && false !== window.prcBreakingNews && (\n                <ul className=\"extra-breaking-news\">\n                    <li>\n                        <a\n                            href={window.prcBreakingNews.url}\n                            className=\"kicker-breaking-news\"\n                        >\n                            {window.prcBreakingNews.label}\n                        </a>\n                    </li>\n                </ul>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Extra;\n","/**\n * External Dependencies\n */\nimport { getTermsAsOptions } from '@pewresearch/app-components';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { RichText } from '@wordpress/block-editor';\nimport classNames from 'classnames/bind';\nimport { Item } from 'semantic-ui-react';\n\nconst KickerEditor = ({ label, date, taxonomy, setAttributes }) => {\n    const [labelOptions, setLabelOptions] = useState([]);\n\n    useEffect(() => {\n        getTermsAsOptions(taxonomy).then(options => {\n            setLabelOptions(options);\n        });\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n        </div>\n    );\n}\n\nconst Header = ({\n    title,\n    label,\n    date,\n    size,\n    enabled,\n    taxonomy,\n    setAttributes,\n    altHeaderWeight,\n}) => {\n    const {enableHeader, enableMeta} = enabled;\n    if (true !== enableHeader) {\n        return <Fragment />;\n    }\n\n    const classes = classNames({\n        large: (1 === size),\n        medium: (2 === size),\n        small: (3 === size),\n        light: altHeaderWeight,\n        'sans-serif': true !== enableMeta,\n    });\n\n    return (\n        <Fragment>\n            {true === enableMeta && (\n                <Item.Meta>\n                    <KickerEditor\n                        date={date}\n                        label={label}\n                        taxonomy={taxonomy}\n                        setAttributes={setAttributes}\n                    />\n                </Item.Meta>\n            )}\n            <Item.Header className={classes}>\n                <RichText\n                    tagName=\"div\"\n                    value={title}\n                    onChange={t => setAttributes({ title: t })}\n                    allowedFormats={['italic']}\n                    placeholder=\"Title\"\n                    multiline=\"br\"\n                />\n            </Item.Header>\n        </Fragment>\n    );\n};\n\nexport default Header;\n","/**\n * External Dependencies\n */\nimport classNames from 'classnames/bind';\nimport { Item } from 'semantic-ui-react';\nimport { ifMatchSetAttribute, StoryItem } from '@pewresearch/app-components';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport {Controls, Placeholder} from './controls';\nimport Image from './image';\nimport Description from './description';\nimport Extra from './extra';\nimport Header from './header';\nimport { getAttributesFromURL } from './helpers';\n\nconst setOptionsFromStyle = (className, setAttributes) => {\n    ifMatchSetAttribute(\n        'is-style-top',\n        className,\n        'imageSlot',\n        'top',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-bottom',\n        className,\n        'imageSlot',\n        'bottom',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-left',\n        className,\n        'imageSlot',\n        'left',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-right',\n        className,\n        'imageSlot',\n        'right',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-disabled',\n        className,\n        'imageSlot',\n        'disabled',\n        setAttributes,\n    );\n    // Default\n    ifMatchSetAttribute(\n        'is-style-default',\n        className,\n        'imageSlot',\n        'default',\n        setAttributes,\n    );\n};\n\n/**\n * To be removed at later date:\n*/\nconst handleExcerptAndPostIdUpdate = (attributes, setAttributes = false) => {\n    const payload = {};\n    if (!attributes.postId && attributes.postID) {\n        payload.postId = attributes.postID;\n    }\n    if (!attributes.description && attributes.excerpt && 0 !== attributes.excerpt.length) {\n        payload.description = attributes.excerpt;\n    }\n    if ( 0 !== Object.keys(payload).length && false !== setAttributes ) {\n        console.log('handleExcerptAndPostIdUpdate', attributes, payload);\n        setAttributes({...payload});\n    }\n}\n\nconst edit = ({ attributes, setAttributes, isSelected, clientId, context }) => {\n    const {\n        title,\n        description,\n        extra,\n        link,\n        label,\n        date,\n        image,\n        imageSlot,\n        imageSize,\n        isChartArt,\n        postId,\n        headerSize,\n        enableEmphasis,\n        enableHeader,\n        enableExcerpt, // @TODO need to rename this to enableDescription\n        enableExcerptBelow, // @TODO need to rename this to enableDescriptionBelow\n        enableExtra,\n        enableBreakingNews,\n        enableAltTaxonomy,\n        enableMeta,\n        isTransformed,\n        className,\n    } = attributes;\n\n    useEffect(()=>{\n        if ( true === isTransformed ) {\n            getAttributesFromURL(link).then(attrs => {\n                setAttributes({isTransformed: false, ...attrs});\n            });\n        }\n    }, [isTransformed]);\n\n    useEffect(()=> {\n        handleExcerptAndPostIdUpdate(attributes, setAttributes);\n    }, []);\n\n    const { rootClientId } = useSelect(\n        select => {\n            return {\n                rootClientId: select('core/block-editor').getBlockRootClientId(\n                    clientId,\n                ),\n            };\n        },\n        [clientId],\n    );\n\n    const enableAltHeaderWeight = !enableExcerpt;\n    const taxonomy = enableAltTaxonomy ? 'research-teams' : 'Formats';\n\n    const blockProps = useBlockProps();\n\n    // setImageSlotByClassName(className, setAttributes);\n\n    const Img = () => {\n        return (\n            <Image\n                img={image}\n                size={imageSize}\n                link={link}\n                slot={imageSlot}\n                chartArt={isChartArt}\n                postId={postId}\n                setAttributes={setAttributes}\n            />\n        );\n    };\n\n    const TopAndLeftSlot = () => {\n        if ('top' !== imageSlot && 'left' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const DefaultSlot = () => {\n        if ('default' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const BottomAndRightSlot = () => {\n        if ('bottom' !== imageSlot && 'right' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    //\n    // Display Component\n    //\n\n    if ( undefined === postId ) {\n        return <Placeholder attributes={attributes} setAttributes={setAttributes}/>\n    }\n\n    if ( true !== isSelected ) {\n        return <div {...blockProps}><StoryItem {...attributes}/></div>\n    }\n\n    return (\n        <div {...blockProps}>\n            <Controls\n            {...{\n                attributes,\n                setAttributes,\n                context: context.hasOwnProperty('prc-block/wp-query')\n                    ? JSON.parse(context['prc-block/wp-query'])\n                    : false,\n                rootClientId,\n            }}\n            />\n\n            <article className={classNames(className, 'item', 'story', `is-style-${imageSlot}`, {\n                stacked: 'top' === imageSlot || 'bottom' === imageSlot,\n                bordered: enableEmphasis,\n                'alt-description': enableExcerptBelow,\n            })}>\n                <TopAndLeftSlot />\n\n                <Item.Content>\n                    <Header\n                        enabled={{enableHeader, enableMeta}}\n                        title={title}\n                        date={date}\n                        label={label}\n                        link={link}\n                        size={headerSize}\n                        taxonomy={taxonomy}\n                        setAttributes={setAttributes}\n                        altHeaderWeight={enableAltHeaderWeight}\n                    />\n\n                    <DefaultSlot />\n\n                    {true !== enableExcerptBelow && (\n                        <Description\n                            enabled={enableExcerpt}\n                            content={description}\n                            sansSerif={!enableMeta || !enableHeader}\n                            setAttributes={setAttributes}\n                        />\n                    )}\n\n                    <Extra\n                        enabled={enableExtra}\n                        content={extra}\n                        breakingNews={enableBreakingNews}\n                        setAttributes={setAttributes}\n                    />\n                </Item.Content>\n\n                <BottomAndRightSlot />\n\n                {true === enableExcerptBelow && (\n                    <Description\n                        enabled={enableExcerpt}\n                        content={description}\n                        sansSerif={!enableHeader}\n                        setAttributes={setAttributes}\n                    />\n                )}\n            </article>\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress Dependencies\n */\nimport { RichText } from '@wordpress/block-editor';\nimport { Fragment } from '@wordpress/element';\n\n/** Returns a server side block callback */\nconst save = ({ attributes }) => {\n    const { description, extra } = attributes;\n    return(\n        <Fragment>\n            { description && (<RichText.Content className=\"description\" tagName=\"div\" value={description}/>)}\n            { extra && (<RichText.Content className=\"extra\" tagName=\"ul\" value={extra}/>)}\n        </Fragment>\n    );\n};\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { isEmpty } from 'lodash';\n\n/**\n * Internal Dependencies\n */\n import { getAttributesFromURL } from './edit/helpers';\n\n/**\n * Match pewresearch.org post links (not staff links) and insert story items with only the url and base image options selected, this will then let the story item fetch the details (but shouldnt we actually do that as part of the transform?)\n */\nconst regex = new RegExp(/^https?:\\/\\/(www\\.)?${window.location.host}\\/((?!staff).)*$/i);\nconst transforms = {\n    from: [\n        {\n            type: 'raw',\n            isMatch: node =>\n                'P' === node.nodeName &&\n                regex.test(\n                    node.textContent,\n                ),\n            transform: node => {\n                const url = node.textContent.trim();\n                console.log(\"you pasted a url, here is the node we matched...\", url);\n                if (!isEmpty(url)) {\n                    return createBlock('prc-block/story-item', {\n                        className: 'is-style-default',\n                        imageSize: 'A1',\n                        imageSlot: 'default',\n                        link: url,\n                        isTransformed: true,\n                    });\n                }\n            },\n        },\n    ]\n};\n\nexport default transforms;\n","/**\n * WordPress dependencies\n */\nimport * as moment from 'moment';\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\nimport transforms from './transforms';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Story Item'),\n    icon: 'format-aside',\n    description: __(\n        'A story item is a visual display of a post, usually referencing a stub post.',\n    ),\n    keywords: [__('prc'), __('story'), __('post'), __('story item')],\n    example: {\n        attributes: {\n            title: 'Ultricies Ipsum Nibh Egestas Purus',\n            excerpt:\n                '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id elit non mi porta gravida at eget metus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>',\n            extra: '<li></li>',\n            link: '#',\n            label: 'Report',\n            date: moment().format('MM-DD-YYYY'),\n            image:\n                'https://www.pewresearch.org/global/wp-content/uploads/sites/2/2020/04/PG_2020.04.21_U.S.-Views-China_featured.jpg',\n            imageSlot: 'top',\n            imageSize: 'A2',\n            isPreview: true,\n        },\n    },\n    variations: [\n        {\n            name: 'story-item-default',\n            isDefault: true,\n            title: __('Story Item'),\n            description: __('The default story item'),\n            attributes: {\n                imageSlot: 'default',\n                imageSize: 'A1',\n            },\n        },\n        {\n            name: 'story-item-pub-listing',\n            title: __('Pub Listing Story Item'),\n            attributes: {\n                className: 'is-style-left',\n                imageSlot: 'left',\n                imageSize: 'A3',\n            },\n        },\n    ],\n    transforms,\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}