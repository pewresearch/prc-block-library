{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///./src/chart-builder-data-wrapper/edit/index.js","webpack:///./src/chart-builder-data-wrapper/index.js","webpack:///./src/chart-builder-data-wrapper/save.js","webpack:///external [\"wp\",\"blocks\"]"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","module","exports","window","path","replace","concat","edit","attributes","console","log","MY_TEMPLATE","className","head","tableHead","body","tableBody","isConvertedChart","template","templateLock","name","metadata","settings","title","__","description","category","icon","keywords","supports","html","example","chartType","transforms","from","type","blocks","transform","createBlock","transformed","includes","to","innerBlocks","table","filter","block","save","props","Content","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;qIAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,iBCAcQ,EAAOC,QAAUC,OAAW,GAAQ,M,gBCApCF,EAAOC,QAAUC,OAAW,GAAQ,M,mBCSlC,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOF,K,6lBCVpCH,EAAOC,QAAUC,OAAW,GAAe,a,iFC6B1CI,EAvBF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACZC,QAAQC,IAAI,CAAEF,eAEd,IAAMG,EAAc,CAChB,CACI,aACA,CACIC,UAAW,2BACXC,KAAML,EAAWM,UACjBC,KAAMP,EAAWQ,YAGzB,CACI,0BACA,CACIC,iBAAkBT,EAAWS,oBAKzC,OAAO,oBAAC,cAAD,CAAaC,SAAUP,EAAaQ,aAAa,S,slBCZ5D,IAAQC,EAASC,EAATD,KACFE,EAAW,CACbC,MAAOC,aAAG,qBACVC,YAAaD,aAAG,sCAChBE,SAAU,UACVC,KAAM,aACNC,SAAU,CAACJ,aAAG,UACdK,SAAU,CAENC,MAAM,GAEVC,QAAS,CACLvB,WAAY,CACRwB,UAAW,MACXpB,UAAW,iBAGnBqB,WAAY,CACRC,KAAM,CACF,CACIC,KAAM,QACNC,OAAQ,CAAC,cACTC,UAAW,SAAC7B,GACR,OAAO8B,sBAAY,uCAAwC,CACvDC,aAAa,EACbtB,iBAAkBT,EAAWI,UAAU4B,SACnC,aAEJ1B,UAAWN,EAAWK,KACtBG,UAAWR,EAAWO,UAKtC0B,GAAI,CACA,CACIN,KAAM,QACNC,OAAQ,CAAC,cACTC,UAAW,SAAC7B,EAAYkC,GACpB,IAAMC,EAAQD,EAAYE,QACtB,SAACC,GAAD,MAA0B,eAAfA,EAAMzB,QAErB,OAAOkB,sBAAY,aAAcK,EAAMnC,gBAKvDD,OACAuC,KC1DW,SAAcC,GACzB,OAAO,oBAAC,cAAYC,QAAb,QD2DXvC,QAAQC,IAAI,aACZuC,4BAAkB7B,EAAD,OAAYC,GAAaC,K,gBEjE5BrB,EAAOC,QAAUC,OAAW,GAAU,S","file":"blocks/chart-builder-wrapper-25a7f756.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst edit = ({ attributes }) => {\n    console.log({ attributes });\n    // Create an empty table + chart component on page load\n    const MY_TEMPLATE = [\n        [\n            'core/table',\n            {\n                className: 'chart-builder-data-table',\n                head: attributes.tableHead,\n                body: attributes.tableBody,\n            },\n        ],\n        [\n            'prc-block/chart-builder',\n            {\n                isConvertedChart: attributes.isConvertedChart,\n            },\n        ],\n    ];\n\n    return <InnerBlocks template={MY_TEMPLATE} templateLock=\"all\" />;\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType, createBlock } from '@wordpress/blocks';\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nconst { name } = metadata;\nconst settings = {\n    title: __('PRC Chart Builder'),\n    description: __('Create a custom data-driven chart.'),\n    category: 'widgets',\n    icon: 'chart-area',\n    keywords: [__('chart')],\n    supports: {\n        // Removes support for an HTML mode.\n        html: false,\n    },\n    example: {\n        attributes: {\n            chartType: 'bar',\n            className: 'is-style-bar',\n        },\n    },\n    transforms: {\n        from: [\n            {\n                type: 'block',\n                blocks: ['core/table'],\n                transform: (attributes) => {\n                    return createBlock('prc-block/chart-builder-data-wrapper', {\n                        transformed: true,\n                        isConvertedChart: attributes.className.includes(\n                            'pew-chart',\n                        ),\n                        tableHead: attributes.head,\n                        tableBody: attributes.body,\n                    });\n                },\n            },\n        ],\n        to: [\n            {\n                type: 'block',\n                blocks: ['core/table'],\n                transform: (attributes, innerBlocks) => {\n                    const table = innerBlocks.filter(\n                        (block) => block.name === 'core/table',\n                    );\n                    return createBlock('core/table', table.attributes);\n                },\n            },\n        ],\n    },\n    edit,\n    save,\n};\nconsole.log('wwatching');\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\nexport default function save(props) {\n    return <InnerBlocks.Content></InnerBlocks.Content>;\n}\n","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}