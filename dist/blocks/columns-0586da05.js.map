{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external \"wp.components\"","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///external \"wp.blockEditor\"","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///external \"lodash\"","webpack:///external \"wp.data\"","webpack:///./src/columns/variations.js","webpack:///./src/columns/utils.js","webpack:///./src/columns/edit.js","webpack:///./src/columns/save.js","webpack:///./src/columns/index.js","webpack:///external \"wp.blocks\"","webpack:///./node_modules/classnames/index.js"],"names":["module","exports","wp","element","i18n","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","__webpack_amd_options__","path","replace","window","concat","components","_typeof","obj","blockEditor","_defineProperty","key","value","defineProperty","enumerable","configurable","writable","lodash","data","variations","title","__","description","icon","width","height","viewBox","xmlns","fillRule","clipRule","d","isDefault","attributes","equal","innerBlocks","scope","toWidthPrecision","unitlessValue","parseFloat","Number","isInteger","Math","round","undefined","getEffectiveColumnWidth","block","totalBlockCount","getTotalColumnsWidth","blocks","console","log","sumBy","getColumnWidths","reduce","accumulator","assign","clientId","getRedistributedColumnWidths","availableWidth","totalWidth","mapValues","newWidth","getMappedColumnWidths","widths","map","merge","isWeb","Platform","OS","ALLOWED_BLOCKS","ColumnsEditContainerWrapper","withDispatch","dispatch","ownProps","registry","toggleDivided","setAttributes","divided","updateColumns","previousColumns","newColumns","replaceInnerBlocks","getBlocks","select","hasExplicitWidths","every","blockWidth","isAddingColumn","newColumnWidth","times","createBlock","dropRight","className","count","useSelect","getBlockCount","gridClassName","classnames","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","renderAppender","label","checked","onChange","min","max","withInputField","status","isDismissible","Placeholder","blockType","getBlockType","defaultVariation","getDefaultBlockVariation","getBlockVariations","useDispatch","get","onSelect","nextVariation","createBlocksFromInnerBlocksTemplate","allowSkip","Edit","props","Component","save","Content","metadata","settings","role","aria-hidden","focusable","keywords","edit","registerBlockType","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","inner","apply","join","default"],"mappings":"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","file":"blocks/columns-0586da05.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","module.exports = wp.components;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = wp.blockEditor;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = lodash;","module.exports = wp.data;","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/** @typedef {import('@wordpress/blocks').WPBlockVariation} WPBlockVariation */\n\n/**\n * Template option choices for predefined columns layouts.\n *\n * @type {WPBlockVariation[]}\n */\n\nconst variations = [\n    {\n        name: 'two-columns-equal',\n        title: __('1/2 | 1/2'),\n        description: __('Two columns; equal split'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H25V34H39ZM23 34H9V14H23V34Z\"\n                />\n            </SVG>\n        ),\n        isDefault: true,\n        attributes: {\n            equal: true,\n        },\n        innerBlocks: [['prc-block/column'], ['prc-block/column']],\n        scope: ['block'],\n    },\n    {\n        name: 'two-columns-one-third-two-thirds',\n        title: __('1/3 | 2/3'),\n        description: __('Two columns; one-third, two-thirds split'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H20V34H39ZM18 34H9V14H18V34Z\"\n                />\n            </SVG>\n        ),\n        innerBlocks: [\n            ['prc-block/column', { width: 5 }],\n            ['prc-block/column', { width: 11 }],\n        ],\n        scope: ['block'],\n    },\n    {\n        name: 'two-columns-two-thirds-one-third',\n        title: __('2/3 | 1/3'),\n        description: __('Two columns; two-thirds, one-third split'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M39 12C40.1046 12 41 12.8954 41 14V34C41 35.1046 40.1046 36 39 36H9C7.89543 36 7 35.1046 7 34V14C7 12.8954 7.89543 12 9 12H39ZM39 34V14H30V34H39ZM28 34H9V14H28V34Z\"\n                />\n            </SVG>\n        ),\n        innerBlocks: [\n            ['prc-block/column', { width: 11 }],\n            ['prc-block/column', { width: 5 }],\n        ],\n        scope: ['block'],\n    },\n    {\n        name: 'three-columns-equal',\n        title: __('1/3 | 1/3 | 1/3'),\n        description: __('Three columns; equal split'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM28.5 34h-9V14h9v20zm2 0V14H39v20h-8.5zm-13 0H9V14h8.5v20z\"\n                />\n            </SVG>\n        ),\n        attributes: {\n            equal: true,\n        },\n        innerBlocks: [\n            ['prc-block/column'],\n            ['prc-block/column'],\n            ['prc-block/column'],\n        ],\n        scope: ['block'],\n    },\n    {\n        name: 'three-columns-wider-center',\n        title: __('1/4 | 1/2 | 1/4'),\n        description: __('Three columns; wide center column'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM31 34H17V14h14v20zm2 0V14h6v20h-6zm-18 0H9V14h6v20z\"\n                />\n            </SVG>\n        ),\n        innerBlocks: [\n            ['prc-block/column', { width: 4 }],\n            ['prc-block/column', { width: 8 }],\n            ['prc-block/column', { width: 4 }],\n        ],\n        scope: ['block'],\n    },\n    {\n        name: 'three-columns-two-thirds-one-third-one-third',\n        title: __('2/4 - 1/4 - 1/4'),\n        description: __('Three columns; 2/3 - 1/3 - 1/3'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM31 34H17V14h14v20zm2 0V14h6v20h-6zm-18 0H9V14h6v20z\"\n                />\n            </SVG>\n        ),\n        innerBlocks: [\n            ['prc-block/column', { width: 8 }],\n            ['prc-block/column', { width: 4 }],\n            ['prc-block/column', { width: 4 }],\n        ],\n        scope: ['block'],\n    },\n    {\n        name: 'four-columns-equal',\n        title: __('1/4 | 1/4 | 1/4'),\n        description: __('Four columns; equal split'),\n        icon: (\n            <SVG\n                width=\"48\"\n                height=\"48\"\n                viewBox=\"0 0 48 48\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <Path\n                    fillRule=\"evenodd\"\n                    d=\"M41 14a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h30a2 2 0 0 0 2-2V14zM28.5 34h-9V14h9v20zm2 0V14H39v20h-8.5zm-13 0H9V14h8.5v20z\"\n                />\n            </SVG>\n        ),\n        attributes: {\n            equal: true,\n        },\n        innerBlocks: [\n            ['prc-block/column'],\n            ['prc-block/column'],\n            ['prc-block/column'],\n            ['prc-block/column'],\n        ],\n        scope: ['block'],\n    },\n];\n\nexport default variations;\n","/**\n * External dependencies\n */\nimport { sumBy, merge, mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Platform } from '@wordpress/element';\n\n/**\n * Returns a column width attribute value rounded to standard precision.\n * Returns `undefined` if the value is not a valid finite number.\n *\n * @param {?number} value Raw value.\n *\n * @return {number} Value rounded to standard precision.\n */\nexport const toWidthPrecision = value => {\n    const unitlessValue = parseFloat(value);\n    return Number.isInteger(unitlessValue)\n        ? parseFloat(Math.round(unitlessValue))\n        : undefined;\n};\n/**\n * Returns an effective width for a given block. An effective width is equal to\n * its attribute value if set, or a computed value assuming equal distribution.\n *\n * @param {WPBlock} block           Block object.\n * @param {number}  totalBlockCount Total number of blocks in Columns.\n *\n * @return {number} Effective column width.\n */\nexport function getEffectiveColumnWidth(block, totalBlockCount) {\n    const { width = 100 / totalBlockCount } = block.attributes;\n    return toWidthPrecision(width);\n}\n\n/**\n * Returns the total width occupied by the given set of column blocks.\n *\n * @param {WPBlock[]} blocks          Block objects.\n * @param {?number}   totalBlockCount Total number of blocks in Columns.\n *                                    Defaults to number of blocks passed.\n *\n * @return {number} Total width occupied by blocks.\n */\nexport function getTotalColumnsWidth(blocks, totalBlockCount = blocks.length) {\n    console.log('getTotalColumnsWidth', blocks, totalBlockCount);\n    return sumBy(blocks, block =>\n        getEffectiveColumnWidth(block, totalBlockCount),\n    );\n}\n\n/**\n * Returns an object of `clientId` → `width` of effective column widths.\n *\n * @param {WPBlock[]} blocks          Block objects.\n * @param {?number}   totalBlockCount Total number of blocks in Columns.\n *                                    Defaults to number of blocks passed.\n *\n * @return {Object<string,number>} Column widths.\n */\nexport function getColumnWidths(blocks, totalBlockCount = blocks.length) {\n    return blocks.reduce((accumulator, block) => {\n        const width = getEffectiveColumnWidth(block, totalBlockCount);\n        return Object.assign(accumulator, { [block.clientId]: width });\n    }, {});\n}\n\n/**\n * Returns an object of `clientId` → `width` of column widths as redistributed\n * proportional to their current widths, constrained or expanded to fit within\n * the given available width.\n *\n * @param {WPBlock[]} blocks          Block objects.\n * @param {number}    availableWidth  Maximum width to fit within.\n * @param {?number}   totalBlockCount Total number of blocks in Columns.\n *                                    Defaults to number of blocks passed.\n *\n * @return {Object<string,number>} Redistributed column widths.\n */\nexport function getRedistributedColumnWidths(\n    blocks,\n    availableWidth,\n    totalBlockCount = blocks.length,\n) {\n    console.log(\n        'getRedistributedColumnWidths',\n        availableWidth,\n        totalBlockCount,\n    );\n    const totalWidth = getTotalColumnsWidth(blocks, totalBlockCount);\n    console.log('getTotalColumnsWidth === ', totalWidth);\n\n    return mapValues(getColumnWidths(blocks, totalBlockCount), width => {\n        console.log('width?', width);\n        const newWidth = (availableWidth * width) / totalWidth;\n        console.log('newWidth?', newWidth);\n        return toWidthPrecision(newWidth);\n    });\n}\n\n/**\n * Returns true if column blocks within the provided set are assigned with\n * explicit single column widths, or false otherwise.\n *\n * @param {WPBlock[]} blocks Block objects.\n *\n * @return {boolean} Whether columns have explicit widths.\n */\nexport function hasExplicitPercentColumnWidths(blocks) {\n    return blocks.every(block => {\n        const blockWidth = block.attributes.width;\n        console.log('hasExplicitPercentColumnWidths?', blockWidth);\n        return Number.isInteger(blockWidth);\n    });\n}\n\n/**\n * Returns a copy of the given set of blocks with new widths assigned from the\n * provided object of redistributed column widths.\n *\n * @param {WPBlock[]}             blocks Block objects.\n * @param {Object<string,number>} widths Redistributed column widths.\n *\n * @return {WPBlock[]} blocks Mapped block objects.\n */\nexport function getMappedColumnWidths(blocks, widths) {\n    return blocks.map(block =>\n        merge({}, block, {\n            attributes: {\n                width: widths[block.clientId],\n            },\n        }),\n    );\n}\n\n/**\n * Returns an array with columns widths values, parsed or no depends on `withParsing` flag.\n *\n * @param {WPBlock[]} blocks\t\t\tBlock objects.\n * @param {?boolean} withParsing \tWhether value has to be parsed.\n *\n * @return {Array<number,string>} Column widths.\n */\nexport function getWidths(blocks, withParsing = true) {\n    return blocks.map(innerColumn => {\n        const innerColumnWidth =\n            innerColumn.attributes.width || 100 / blocks.length;\n\n        return withParsing ? parseFloat(innerColumnWidth) : innerColumnWidth;\n    });\n}\n\nconst isWeb = 'web' === Platform.OS;\n\nexport const CSS_UNITS = [\n    {\n        value: '%',\n        label: isWeb ? '%' : __('Percentage (%)'),\n        default: '',\n    },\n    {\n        value: 'px',\n        label: isWeb ? 'px' : __('Pixels (px)'),\n        default: '',\n    },\n    {\n        value: 'em',\n        label: isWeb ? 'em' : __('Relative to parent font size (em)'),\n        default: '',\n    },\n    {\n        value: 'rem',\n        label: isWeb ? 'rem' : __('Relative to root font size (rem)'),\n        default: '',\n    },\n    {\n        value: 'vw',\n        label: isWeb ? 'vw' : __('Viewport width (vw)'),\n        default: '',\n    },\n];\n\n/**\n * Returns a boolean whether passed unit is percentage\n *\n * @param {string} unit Column width unit.\n *\n * @return {boolean} \tWhether unit is '%'.\n */\nexport function isPercentageUnit(unit) {\n    return '%' === unit;\n}\n","/* eslint-disable react/jsx-pascal-case */\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { dropRight, get, times } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport {\n    PanelBody,\n    RangeControl,\n    ToggleControl,\n    Notice,\n} from '@wordpress/components';\nimport {\n    InspectorControls,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    __experimentalBlockVariationPicker,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { withDispatch, useDispatch, useSelect } from '@wordpress/data';\nimport {\n    createBlock,\n    createBlocksFromInnerBlocksTemplate,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n    hasExplicitPercentColumnWidths,\n    getMappedColumnWidths,\n    getRedistributedColumnWidths,\n} from './utils';\n\n/**\n * Allowed blocks constant is passed to InnerBlocks precisely as specified here.\n * The contents of the array should never change.\n * The array should contain the name of each block that is allowed.\n * In columns block, the only block we allow is 'core/column'.\n *\n * @constant\n * @type {string[]}\n */\nconst ALLOWED_BLOCKS = ['prc-block/column'];\n\nconst ColumnsEditContainer = ({\n    attributes,\n    className,\n    updateColumns,\n    toggleDivided,\n    clientId,\n}) => {\n    const { divided, equal } = attributes;\n\n    // Return a count of prc-block/column inside...\n    const { count } = useSelect(\n        select => {\n            return {\n                count: select('core/block-editor').getBlockCount(clientId),\n            };\n        },\n        [clientId],\n    );\n\n    const gridClassName = classnames(className, 'ui', 'grid', {\n        divided,\n    });\n\n    const blockProps = useBlockProps({\n        className: classnames('row', {\n            'equal width': equal,\n        }),\n    });\n\n    // @TODO When we get to a certain viewport size in the editor we should change the orientation from horizontal to vertical.\n    const innerBlocksProps = useInnerBlocksProps(blockProps, {\n        allowedBlocks: ALLOWED_BLOCKS,\n        orientation: 'horizontal',\n        renderAppender: false,\n    });\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody>\n                    <ToggleControl\n                        label={divided ? 'Divided' : 'Not Divided'}\n                        checked={divided}\n                        onChange={() => toggleDivided()}\n                    />\n                    <RangeControl\n                        label={__('Columns')}\n                        value={count}\n                        onChange={value => updateColumns(count, value)}\n                        min={1}\n                        max={Math.max(6, count)}\n                        withInputField\n                    />\n                    {5 < count && (\n                        <Notice status=\"warning\" isDismissible={false}>\n                            {__(\n                                'This column count exceeds the recommended amount and may cause visual breakage.',\n                            )}\n                        </Notice>\n                    )}\n                </PanelBody>\n            </InspectorControls>\n\n            <div className=\"ui container\">\n                <div className={gridClassName}>\n                    <div {...innerBlocksProps} />\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst ColumnsEditContainerWrapper = withDispatch(\n    (dispatch, ownProps, registry) => ({\n        /**\n         * Toggles the divided style attribute true or false.\n         */\n        toggleDivided() {\n            const { attributes, setAttributes } = ownProps;\n            const { divided } = attributes;\n            setAttributes({ divided: !divided });\n        },\n\n        /**\n         * Updates the column count, including necessary revisions to child Column\n         * blocks to grant required or redistribute available space.\n         *\n         * @param {number} previousColumns Previous column count.\n         * @param {number} newColumns      New column count.\n         */\n        updateColumns(previousColumns, newColumns) {\n            const { clientId } = ownProps;\n            const { replaceInnerBlocks } = dispatch('core/block-editor');\n            const { getBlocks } = registry.select('core/block-editor');\n\n            let innerBlocks = getBlocks(clientId);\n            const hasExplicitWidths = hasExplicitPercentColumnWidths(\n                innerBlocks,\n            );\n\n            console.log('updateColumns()', previousColumns, newColumns);\n\n            console.log('hasExplicitWidths?', hasExplicitWidths);\n\n            // Redistribute available width for existing inner blocks.\n            const isAddingColumn = newColumns > previousColumns;\n\n            console.log('isAddingColumns?', isAddingColumn);\n\n            if (isAddingColumn && hasExplicitWidths) {\n                // If adding a new column, assign width to the new column equal to\n                // as if it were `1 / columns` of the total available space.\n                const newColumnWidth = newColumns;\n\n                // Redistribute in consideration of pending block insertion as\n                // constraining the available working width.\n                const widths = getRedistributedColumnWidths(\n                    innerBlocks,\n                    16 - newColumnWidth,\n                );\n\n                innerBlocks = [\n                    ...getMappedColumnWidths(innerBlocks, widths),\n                    ...times(newColumns - previousColumns, () => {\n                        return createBlock('prc-block/column', {\n                            width: newColumnWidth,\n                        });\n                    }),\n                ];\n            } else if (isAddingColumn) {\n                innerBlocks = [\n                    ...innerBlocks,\n                    ...times(newColumns - previousColumns, () => {\n                        return createBlock('prc-block/column');\n                    }),\n                ];\n            } else {\n                // The removed column will be the last of the inner blocks.\n                innerBlocks = dropRight(\n                    innerBlocks,\n                    previousColumns - newColumns,\n                );\n\n                if (hasExplicitWidths) {\n                    // Redistribute as if block is already removed.\n                    const widths = getRedistributedColumnWidths(\n                        innerBlocks,\n                        16,\n                    );\n\n                    innerBlocks = getMappedColumnWidths(innerBlocks, widths);\n                }\n            }\n\n            replaceInnerBlocks(clientId, innerBlocks);\n        },\n    }),\n)(ColumnsEditContainer);\n\nconst Placeholder = ({ clientId, name, setAttributes }) => {\n    const { blockType, defaultVariation, variations } = useSelect(\n        select => {\n            return {\n                blockType: select('core/blocks').getBlockType(name),\n                defaultVariation: select(\n                    'core/blocks',\n                ).getDefaultBlockVariation(name, 'block'),\n                variations: select('core/blocks').getBlockVariations(\n                    name,\n                    'block',\n                ),\n            };\n        },\n        [name],\n    );\n    const { replaceInnerBlocks } = useDispatch('core/block-editor');\n    const blockProps = useBlockProps();\n\n    return (\n        <div {...blockProps}>\n            <__experimentalBlockVariationPicker\n                icon={get(blockType, ['icon', 'src'])}\n                label={get(blockType, ['title'])}\n                variations={variations}\n                onSelect={(nextVariation = defaultVariation) => {\n                    if (nextVariation.attributes) {\n                        setAttributes(nextVariation.attributes);\n                    }\n                    if (nextVariation.innerBlocks) {\n                        replaceInnerBlocks(\n                            clientId,\n                            createBlocksFromInnerBlocksTemplate(\n                                nextVariation.innerBlocks,\n                            ),\n                            true,\n                        );\n                    }\n                }}\n                allowSkip\n            />\n        </div>\n    );\n};\n\nconst Edit = props => {\n    const { clientId } = props;\n\n    // Check for existence of inner blocks (prc-block/column)\n    const hasInnerBlocks = useSelect(\n        select => 0 < select('core/block-editor').getBlocks(clientId).length,\n        [clientId],\n    );\n\n    // Define active component...\n    // ... if block hasInnerBlocks then use ColumnsEditContainerWrapper otherwise use Placholder, pass all props through\n    const Component = hasInnerBlocks\n        ? ColumnsEditContainerWrapper\n        : Placeholder;\n\n    return <Component {...props} />;\n};\n\nexport default Edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\nimport metadata from './block.json';\nimport variations from './variations';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('PRC Columns'),\n    description: __(\n        'Add a block that displays content in multiple columns, then add whatever content blocks you’d like.',\n    ),\n    icon: (\n        <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            aria-hidden=\"true\"\n            focusable=\"false\"\n        >\n            <path d=\"M19 6H6c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-4.1 1.5v10H10v-10h4.9zM5.5 17V8c0-.3.2-.5.5-.5h2.5v10H6c-.3 0-.5-.2-.5-.5zm14 0c0 .3-.2.5-.5.5h-2.6v-10H19c.3 0 .5.2.5.5v9z\" />\n        </svg>\n    ),\n    keywords: [__('Columns'), __('Column')],\n    variations,\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blocks;","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)&&arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}else if(argType==='object'){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();"],"sourceRoot":""}