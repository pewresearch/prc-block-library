{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"React\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///external \"moment\"","webpack:///external \"wp.apiFetch\"","webpack:///./node_modules/@wordpress/icons/build-module/library/close-small.js","webpack:///./src/wp-query/taxQuery.js","webpack:///./src/wp-query/fetch.js","webpack:///./src/wp-query/controls.js","webpack:///./src/wp-query/edit.js","webpack:///./src/wp-query/save.js","webpack:///./src/wp-query/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.url\"","webpack:///external \"wp.components\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/block-inserter-button/index.js","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\"","webpack:///./node_modules/@wordpress/primitives/build-module/svg/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"names":["module","exports","wp","element","React","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","i18n","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","moment","apiFetch","xmlns","viewBox","d","TaxonomyField","index","label","taxonomy","options","taxQuery","setAttributes","isLink","icon","closeSmall","onClick","tmpData","data","splice","lable","__","style","margin","onChange","val","showInitialSuggestions","suggestionsQuery","type","subtype","id","title","url","terms","settings","TaxQuery","relation","useState","setOptions","useEffect","selectedTaxonomies","map","nextOptions","includes","disabled","toLowerCase","split","s","charAt","toUpperCase","substring","join","getLabel","marginTop","marginBottom","help","checked","isSecondary","isSmall","fetchPosts","attributes","Promise","resolve","console","log","request","method","path","then","results","forEach","result","dateString","excerpt","date","timestamp","format","link","image","Fields","wide","formatTermId","programTermId","postsPerPage","labelTaxonomy","disableImage","formatOptions","setFormatOptions","programOptions","setProgramOptions","initTerms","initData","getTerms","termIds","keys","tmp","termId","className","display","flexDirection","flexGrow","paddingRight","parseInt","alignItems","paddingBottom","min","max","required","Controls","setPosts","clientId","busy","toggleBusy","hasInnerBlocks","useSelect","select","getBlocks","clickHandler","setTimeout","isBusy","isPrimary","isColumnLayout","ALLOWED","edit","pinned","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","renderAppender","InnerBlocks","ButtonBlockAppender","posts","replaceInnerBlocks","useDispatch","blocks","innerBlocks","item","args","extra","postID","emphasis","isChartArt","imageSlot","imageSize","horizontal","stacked","enableHeader","enableExcerpt","enableExtra","enableProgramsTaxonomy","headerSize","createBlock","initStoryBlock","toKeep","JSON","parse","postId","filter","e","toCheck","f","b","allowedPerPage","toInsert","concat","save","Content","metadata","description","registerBlockType","blockEditor","components","perPage","slug","replace","parent","BlockInserterButton","blockName","tooltipPosition","currentBlock","getBlock","nextIndex","newBlock","dispatch","insertBlock","ReactDOM","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","key","getOwnPropertyDescriptors","defineProperties","defineProperty","props","_ref","isPressed","appliedProps","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","_objectWithoutProperties","role","focusable"],"mappings":"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","file":"blocks/wp-query-329648fe.js","sourcesContent":["module.exports = wp.element;","module.exports = React;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = wp.i18n;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = moment;","module.exports = wp.apiFetch;","import{createElement}from\"@wordpress/element\";/**\n * WordPress dependencies\n */import{SVG,Path}from'@wordpress/primitives';var closeSmall=createElement(SVG,{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\"},createElement(Path,{d:\"M13 11.9l3.3-3.4-1.1-1-3.2 3.3-3.2-3.3-1.1 1 3.3 3.4-3.5 3.6 1 1L12 13l3.5 3.5 1-1z\"}));export default closeSmall;","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch, select } from '@wordpress/data';\nimport { __experimentalLinkControl as LinkControl } from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    SelectControl,\n    ToggleControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\nimport { closeSmall } from '@wordpress/icons';\n\nconst TaxonomyField = ({\n    index,\n    label,\n    taxonomy = false,\n    value,\n    options,\n    taxQuery,\n    setAttributes,\n}) => {\n    const onRemove = () => {\n        const tmpData = taxQuery;\n        tmpData.data.splice(index, 1);\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTaxonomyChange = val => {\n        const tmpData = taxQuery;\n        tmpData.data[index].taxonomy = val;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    const onTermChange = val => {\n        const { id, title, url } = val;\n        const tmpData = taxQuery;\n        tmpData.data[index].terms = id;\n        tmpData.data[index].title = title;\n        tmpData.data[index].value = url;\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n    return (\n        <div>\n            <Flex>\n                <FlexBlock>\n                    <strong>{label}</strong>\n                </FlexBlock>\n                <FlexItem>\n                    <Button\n                        isLink\n                        icon={closeSmall}\n                        onClick={onRemove}\n                        lable={__(`Remove taxonomy argument`)}\n                    />\n                </FlexItem>\n            </Flex>\n            {false === taxonomy && (\n                <div style={{ margin: '16px' }}>\n                    <SelectControl\n                        value={taxonomy}\n                        options={options}\n                        onChange={onTaxonomyChange}\n                    />\n                </div>\n            )}\n            {false !== taxonomy && null === value && (\n                <LinkControl\n                    label={__(`Term`)}\n                    value={value}\n                    showInitialSuggestions\n                    suggestionsQuery={{ type: 'term', subtype: taxonomy }}\n                    onChange={onTermChange}\n                    settings={[]}\n                />\n            )}\n            <HorizontalRule />\n        </div>\n    );\n};\n\nconst TaxQuery = ({ taxQuery, setAttributes }) => {\n    const { relation, data } = taxQuery;\n    const [options, setOptions] = useState([\n        { label: 'Select a Taxonomy', value: false },\n        { label: 'Topics', value: 'topic' },\n        { label: 'Formats', value: 'formats' },\n        { label: 'Programs', value: 'programs' },\n    ]);\n\n    const toggleRelation = () => {\n        const tmpData = taxQuery;\n        if ('OR' === tmpData.relation) {\n            tmpData.relation = 'AND';\n        } else {\n            tmpData.relation = 'OR';\n        }\n        setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n    };\n\n    const getLabel = val => {\n        const { taxonomy, title } = val;\n        let label =\n            false === taxonomy ? `Choose Taxonomy` : `Choose ${taxonomy} Term`;\n        if (null !== title && false !== taxonomy) {\n            label = `${taxonomy}: ${title}`;\n        }\n        return label\n            .toLowerCase()\n            .split(' ')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n    };\n\n    /**\n     * Disable any taxonomy options that are already selected.\n     */\n    useEffect(() => {\n        // Go gather up selected taxonomies from taxQuery.data,\n        const selectedTaxonomies = data.map(({ taxonomy }) => taxonomy);\n        const nextOptions = options.map(o => {\n            if (selectedTaxonomies.includes(o.value)) {\n                o.disabled = true;\n            } else {\n                o.disabled = false;\n            }\n            return o;\n        });\n        setOptions(nextOptions);\n    }, [taxQuery]);\n    // Dont offer to change relation unless if data has more than one\n\n    return (\n        <Fragment>\n            <div>\n                {data.map((d, index) => {\n                    const { taxonomy, value } = d;\n                    const label = getLabel(d);\n                    return (\n                        <TaxonomyField\n                            index={index}\n                            label={__(label)}\n                            taxonomy={taxonomy}\n                            value={value}\n                            options={options}\n                            taxQuery={taxQuery}\n                            setAttributes={setAttributes}\n                        />\n                    );\n                })}\n                {2 <= data.length && (\n                    <div style={{ marginTop: '1em', marginBottom: '1em' }}>\n                        <ToggleControl\n                            label=\"Query Relation (OR|AND)\"\n                            help={\n                                'AND' === relation\n                                    ? 'AND (restrictive: restricts content)'\n                                    : 'OR (expansive: expands content)'\n                            }\n                            checked={'AND' === relation}\n                            onChange={toggleRelation}\n                        />\n                    </div>\n                )}\n            </div>\n            <Button\n                isSecondary\n                isSmall\n                onClick={() => {\n                    const tmpData = taxQuery;\n                    tmpData.data.push({\n                        taxonomy: false,\n                        terms: null,\n                        value: null,\n                    });\n                    setAttributes({ taxQuery: { ...taxQuery, ...tmpData } });\n                }}\n            >\n                Add Taxonomy\n            </Button>\n        </Fragment>\n    );\n};\n\nexport default TaxQuery;\n","import * as moment from 'moment';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst fetchPosts = attributes => {\n    const formatDate = dateString => {\n        const defaultFormat = 'MMM D, YYYY';\n        const date = moment(dateString).format(defaultFormat);\n        return date;\n    };\n\n    return new Promise(resolve => {\n        const data = [];\n        console.log('fetchPosts?', attributes);\n\n        const request = {\n            method: 'POST',\n            path: '/prc-api/v2/block/wp-query',\n            data: attributes,\n        };\n\n        apiFetch(request).then(results => {\n            console.log(results);\n            // eslint-disable-next-line no-plusplus\n            results.forEach(result => {\n                const d = {\n                    id: result.id,\n                    title: result.title,\n                    excerpt: result.excerpt,\n                    date: formatDate(result.timestamp),\n                    link: result.link,\n                    label: result.label,\n                    image: result.image,\n                };\n                data.push(d);\n            });\n            resolve(data);\n        });\n    });\n};\n\nexport default fetchPosts;\n","/* eslint-disable radix */\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport {\n    InspectorControls,\n    __experimentalLinkControl as LinkControl,\n} from '@wordpress/block-editor';\nimport {\n    Button,\n    HorizontalRule,\n    PanelBody,\n    Placeholder,\n    RangeControl,\n    SelectControl,\n    ToggleControl,\n    TextControl,\n    Flex,\n    FlexItem,\n    FlexBlock,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport TaxQuery from './taxQuery';\nimport { getTerms } from '../_shared';\nimport fetchPosts from './fetch';\n\nconst Fields = ({\n    attributes,\n    setAttributes,\n    wide = false,\n    disabled = false,\n}) => {\n    const {\n        formatTermId,\n        programTermId,\n        postsPerPage,\n        labelTaxonomy,\n        disableImage,\n        taxQuery,\n    } = attributes;\n\n    const [formatOptions, setFormatOptions] = useState([]);\n    const [programOptions, setProgramOptions] = useState([]);\n\n    const initTerms = (taxonomy, initData) => {\n        console.log('initTerms', attributes);\n        getTerms(taxonomy).then(data => {\n            const termIds = Object.keys(data);\n            const tmp = [{ value: 'any', label: 'Any' }];\n            termIds.forEach(termId => {\n                tmp.push({\n                    value: termId,\n                    label: data[termId].name,\n                });\n            });\n            initData(tmp);\n        });\n    };\n\n    useEffect(() => {\n        if (0 === formatOptions.length) {\n            initTerms('Formats', setFormatOptions);\n        }\n        if (0 === programOptions.length) {\n            initTerms('Programs', setProgramOptions);\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                <h4 className=\"sans-serif\">Story Item Settings</h4>\n                <ToggleControl\n                    label=\"Disable Images\"\n                    checked={disableImage}\n                    onChange={() =>\n                        setAttributes({ disableImage: !disableImage })\n                    }\n                />\n                <div\n                    style={\n                        true === wide\n                            ? {\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                              }\n                            : {}\n                    }\n                >\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      flexGrow: '1',\n                                      paddingRight: '1em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <SelectControl\n                            label=\"Format\"\n                            value={formatTermId}\n                            options={formatOptions}\n                            onChange={termId => {\n                                setAttributes({\n                                    formatTermId: parseInt(termId),\n                                });\n                            }}\n                            disabled={disabled}\n                        />\n                    </div>\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      display: 'flex',\n                                      alignItems: 'flex-end',\n                                      paddingBottom: '0.2em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <ToggleControl\n                            label=\"Use as Label\"\n                            checked={'formats' === labelTaxonomy}\n                            onChange={() =>\n                                setAttributes({\n                                    labelTaxonomy:\n                                        'formats' === labelTaxonomy\n                                            ? 'programs'\n                                            : 'formats',\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n                <div\n                    style={\n                        true === wide\n                            ? {\n                                  display: 'flex',\n                                  flexDirection: 'row',\n                              }\n                            : {}\n                    }\n                >\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      flexGrow: '1',\n                                      paddingRight: '1em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <SelectControl\n                            label=\"Program\"\n                            value={programTermId}\n                            options={programOptions}\n                            onChange={termId => {\n                                setAttributes({\n                                    programTermId: parseInt(termId),\n                                });\n                            }}\n                            disabled={disabled}\n                        />\n                    </div>\n                    <div\n                        style={\n                            true === wide\n                                ? {\n                                      display: 'flex',\n                                      alignItems: 'flex-end',\n                                      paddingBottom: '0.2em',\n                                  }\n                                : {}\n                        }\n                    >\n                        <ToggleControl\n                            label=\"Use as Label\"\n                            checked={'programs' === labelTaxonomy}\n                            onChange={() =>\n                                setAttributes({\n                                    labelTaxonomy:\n                                        'programs' === labelTaxonomy\n                                            ? 'formats'\n                                            : 'programs',\n                                })\n                            }\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Query Arguments</h4>\n                <RangeControl\n                    label={__('Number of posts')}\n                    value={postsPerPage}\n                    onChange={val => setAttributes({ postsPerPage: val })}\n                    min={3}\n                    max={10}\n                    required\n                />\n            </div>\n\n            <HorizontalRule />\n\n            <div>\n                <h4 className=\"sans-serif\">Taxonomy Query Arguments</h4>\n                <TaxQuery taxQuery={taxQuery} setAttributes={setAttributes} />\n            </div>\n\n            <HorizontalRule />\n        </Fragment>\n    );\n};\n\nconst Controls = ({ attributes, setAttributes, setPosts, clientId }) => {\n    const [busy, toggleBusy] = useState(false);\n    const { hasInnerBlocks } = useSelect(\n        select => {\n            return {\n                hasInnerBlocks:\n                    0 < select('core/block-editor').getBlocks(clientId).length,\n            };\n        },\n        [clientId],\n    );\n\n    const clickHandler = () => {\n        toggleBusy(true);\n        fetchPosts(attributes).then(data => {\n            setTimeout(() => {\n                toggleBusy(false);\n                setPosts(data);\n            }, 3600);\n        });\n    };\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Query Arguments')}>\n                    <Fields\n                        attributes={attributes}\n                        setAttributes={setAttributes}\n                        disabled={busy}\n                    />\n                    <Button\n                        isBusy={busy}\n                        isPrimary\n                        onClick={() => clickHandler()}\n                    >\n                        Update\n                    </Button>\n                </PanelBody>\n            </InspectorControls>\n            {false === hasInnerBlocks && (\n                <Placeholder label=\"Configure Query Args\" isColumnLayout>\n                    <div>\n                        <Fields\n                            attributes={attributes}\n                            setAttributes={setAttributes}\n                            disabled={busy}\n                            wide\n                        />\n                        <Button\n                            isBusy={busy}\n                            isPrimary\n                            onClick={() => clickHandler()}\n                        >\n                            Query Posts\n                        </Button>\n                    </div>\n                </Placeholder>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Controls;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n    InnerBlocks,\n    __experimentalUseInnerBlocksProps as useInnerBlocksProps,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './controls';\n\nconst ALLOWED = ['prc-block/story-item'];\n\nconst initStoryBlock = (item, disableImage, labelTaxonomy) => {\n    const args = {\n        title: item.title,\n        image: item.image,\n        excerpt: item.excerpt,\n        link: item.link,\n        label: item.label,\n        date: item.date,\n        extra: '',\n        // Post Meta Data:\n        postID: item.id,\n        // Item Options\n        emphasis: false,\n        // Image Position:\n        isChartArt: false,\n        imageSlot: 'left',\n        imageSize: 'A3',\n        horizontal: true,\n        stacked: false,\n        // Misc Toggles:\n        enableHeader: true,\n        enableExcerpt: true,\n        enableExtra: false,\n        enableProgramsTaxonomy: false,\n        headerSize: 2,\n        className: 'is-style-left',\n    };\n    if (true === disableImage) {\n        args.imageSlot = 'disabled';\n        args.className = 'is-style-disabled';\n        args.enableExcerpt = false;\n    }\n    if ('programs' === labelTaxonomy) {\n        args.enableProgramsTaxonomy = true;\n    }\n    return createBlock('prc-block/story-item', args);\n};\n\nconst edit = ({ attributes, setAttributes, className, clientId }) => {\n    const { pinned, postsPerPage, labelTaxonomy, disableImage } = attributes;\n\n    const blockProps = useBlockProps({ className });\n\n    const innerBlocksProps = useInnerBlocksProps({\n        allowedBlocks: ALLOWED,\n        orientation: 'vertical', // We should allow toggling this based on layout.\n        renderAppender: InnerBlocks.ButtonBlockAppender,\n    });\n\n    const [posts, setPosts] = useState(false);\n\n    const { replaceInnerBlocks } = useDispatch('core/block-editor');\n\n    const { innerBlocks, hasInnerBlocks } = useSelect(\n        select => {\n            const blocks = select('core/block-editor').getBlocks(clientId);\n            return {\n                innerBlocks: blocks,\n                hasInnerBlocks: 0 < blocks.length,\n            };\n        },\n        [clientId],\n    );\n\n    // Go create story item blocks from posts fetched\n    useEffect(() => {\n        if (false !== posts) {\n            let tmp = [];\n            posts.forEach(item => {\n                tmp.push(initStoryBlock(item, disableImage, labelTaxonomy));\n            });\n\n            const toKeep = [];\n            JSON.parse(pinned).forEach(postId => {\n                const toPush = innerBlocks.filter(e => {\n                    const toCheck = tmp.filter(\n                        f => f.attributes.postID === postId,\n                    );\n                    return (\n                        e.attributes.postID === postId && 0 >= toCheck.length\n                    );\n                });\n                toPush.forEach(b => toKeep.push(b));\n            });\n\n            const allowedPerPage = postsPerPage - toKeep.length;\n\n            tmp = tmp.filter((e, index) => {\n                return index <= allowedPerPage - 1;\n            });\n\n            const toInsert = toKeep.concat(tmp);\n\n            replaceInnerBlocks(clientId, toInsert);\n        }\n    }, [posts]);\n\n    return (\n        <div {...blockProps}>\n            <Controls\n                attributes={attributes}\n                setAttributes={setAttributes}\n                setPosts={setPosts}\n                clientId={clientId}\n            />\n            {true === hasInnerBlocks && <div {...innerBlocksProps} />}\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Query'),\n    description: __(\n        'Query posts by format, topic, region, and/or date. Posts are displayed as Story Items.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","module.exports = wp.url;","module.exports = wp.components;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nimport apiFetch from '@wordpress/api-fetch';\n\nconst getTermsByLetter = (taxonomy, letter) => {\n    return new Promise(resolve => {\n        apiFetch({\n            path: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n        }).then(terms => {\n            resolve(terms);\n        });\n    });\n};\n\nconst getTerms = (taxonomy, perPage = 25) => {\n    return new Promise(resolve => {\n        const data = {};\n        apiFetch({\n            path: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n        }).then(terms => {\n            for (let index = 0; index < terms.length; index++) {\n                const slug = terms[index].slug.replace(\n                    `${taxonomy.toLowerCase()}_`,\n                    '',\n                );\n                data[terms[index].id] = {\n                    id: terms[index].id,\n                    name: terms[index].name,\n                    parent: terms[index].parent,\n                    slug,\n                };\n            }\n            resolve(data);\n        });\n    });\n};\n\nconst getTermsAsOptions = (\n    taxonomy,\n    perPage,\n    termValue = 'name',\n    sortByLabel = true,\n) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n\n                let value = termObj.name;\n                if ('termid' === termValue) {\n                    value = termObj.id;\n                }\n\n                let label = termObj.name;\n                if (undefined !== termObj.parent && 0 !== termObj.parent) {\n                    label = ` -- ${label}`;\n                }\n\n                labelOptions.push({\n                    value,\n                    label,\n                });\n            });\n\n            if (false !== sortByLabel) {\n                labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n            }\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nconst getTermsAsTree = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const treeData = [];\n            // Convert data from object of objects to array of objects.\n            const convertedData = Object.keys(data).map(i => data[i]);\n            // Filter out the parent terms first\n            const parentTerms = convertedData.filter(e => 0 === e.parent);\n            parentTerms.forEach(e => {\n                // Get children by filtering for terms with parent matching this id in loop.\n                const c = convertedData.filter(f => f.parent === e.id);\n                const children = [];\n                // Construct children array.\n                c.forEach(cT => {\n                    children.push({\n                        name: cT.name,\n                        id: cT.id,\n                    });\n                });\n                // Finally, push the fully structured parent -> child relationship to the tree data.\n                treeData.push({\n                    name: e.name,\n                    id: e.id,\n                    children,\n                });\n            });\n\n            resolve(treeData);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsByLetter, getTermsAsOptions, getTermsAsTree };\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { select, dispatch } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\n\nimport { createBlock } from '@wordpress/blocks';\n\nconst BlockInserterButton = ({\n    label = '',\n    blockName,\n    clientId,\n    attributes = {},\n}) => {\n    const handleClick = () => {\n        const currentBlock = select('core/block-editor').getBlock(clientId);\n        console.log('debug info...', currentBlock.innerBlocks.length);\n        const nextIndex = currentBlock.innerBlocks.length - 1;\n        const newBlock = createBlock(blockName, attributes);\n        dispatch('core/block-editor').insertBlock(\n            newBlock,\n            nextIndex,\n            clientId,\n        );\n    };\n    return (\n        <Button\n            label={__(label)}\n            tooltipPosition=\"bottom\"\n            onClick={handleClick}\n            className=\"block-editor-button-block-appender\"\n        >\n            {__(label)}\n        </Button>\n    );\n};\n\nexport default BlockInserterButton;\n","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.data;","import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/esm/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}/**\n * External dependencies\n */import classnames from'classnames';/**\n * WordPress dependencies\n */import{createElement}from'@wordpress/element';/** @typedef {{isPressed?: boolean} & import('react').ComponentPropsWithoutRef<'svg'>} SVGProps */ /**\n * @param {import('react').ComponentPropsWithoutRef<'circle'>} props\n *\n * @return {JSX.Element} Circle component\n */export var Circle=function Circle(props){return createElement('circle',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'g'>} props\n *\n * @return {JSX.Element} G component\n */export var G=function G(props){return createElement('g',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'path'>} props\n *\n * @return {JSX.Element} Path component\n */export var Path=function Path(props){return createElement('path',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'polygon'>} props\n *\n * @return {JSX.Element} Polygon component\n */export var Polygon=function Polygon(props){return createElement('polygon',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'rect'>} props\n *\n * @return {JSX.Element} Rect component\n */export var Rect=function Rect(props){return createElement('rect',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'defs'>} props\n *\n * @return {JSX.Element} Defs component\n */export var Defs=function Defs(props){return createElement('defs',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'radialGradient'>} props\n *\n * @return {JSX.Element} RadialGradient component\n */export var RadialGradient=function RadialGradient(props){return createElement('radialGradient',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'linearGradient'>} props\n *\n * @return {JSX.Element} LinearGradient component\n */export var LinearGradient=function LinearGradient(props){return createElement('linearGradient',props);};/**\n * @param {import('react').ComponentPropsWithoutRef<'stop'>} props\n *\n * @return {JSX.Element} Stop component\n */export var Stop=function Stop(props){return createElement('stop',props);};/**\n *\n * @param {SVGProps} props isPressed indicates whether the SVG should appear as pressed.\n *                         Other props will be passed through to svg component.\n *\n * @return {JSX.Element} Stop component\n */export var SVG=function SVG(_ref){var className=_ref.className,isPressed=_ref.isPressed,props=_objectWithoutProperties(_ref,[\"className\",\"isPressed\"]);var appliedProps=_objectSpread(_objectSpread({},props),{},{className:classnames(className,{'is-pressed':isPressed})||undefined,role:'img','aria-hidden':true,focusable:false});// Disable reason: We need to have a way to render HTML tag for web.\n// eslint-disable-next-line react/forbid-elements\nreturn createElement(\"svg\",appliedProps);};","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}