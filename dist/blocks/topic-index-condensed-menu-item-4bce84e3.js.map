{"version":3,"sources":["webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\"","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/classnames/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///external \"wp.element\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external \"wp.i18n\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/topic-index-condensed/menu-item/edit.js","webpack:///./src/topic-index-condensed/menu-item/save.js","webpack:///./src/topic-index-condensed/menu-item/index.js"],"names":["module","exports","wp","blocks","data","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","call","join","default","window","__webpack_amd_options__","element","path","replace","concat","i18n","url","blockEditor","Edit","attributes","setAttributes","className","clientId","isSelected","context","title","uuid","useDispatch","insertBlock","updateBlockAttributes","useSelect","select","getBlock","getBlockRootClientId","getAdjacentBlockClientId","menuBlockClientId","pClientId","controllerClientId","pagesClientId","pages","innerBlocks","map","useEffect","console","log","newUuid","newPageBlock","createBlock","onBlockCreation","t","slug","cleanForSlug","tmp","matchedPages","filter","targetClientId","heading","onTitleUpdate","active","blockProps","useBlockProps","classnames","tagName","allowedFormats","onChange","newTitle","placeholder","__","save","name","metadata","settings","description","edit","registerBlockType"],"mappings":"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","file":"blocks/topic-index-condensed-menu-item-4bce84e3.js","sourcesContent":["module.exports = wp.blocks;","module.exports = wp.data;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)&&arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}else if(argType==='object'){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","module.exports = wp.element;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","module.exports = wp.i18n;","module.exports = wp.url;","module.exports = wp.blockEditor;","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { cleanForSlug } from '@wordpress/url';\n\nconst Edit = ({\n    attributes,\n    setAttributes,\n    className,\n    clientId,\n    isSelected,\n    context,\n}) => {\n    const { title, uuid } = attributes;\n\n    const { insertBlock, updateBlockAttributes } = useDispatch(\n        'core/block-editor',\n    );\n\n    const { controllerClientId, pagesClientId, pages } = useSelect(\n        select => {\n            const {\n                getBlock,\n                getBlockRootClientId,\n                getAdjacentBlockClientId,\n            } = select('core/block-editor');\n            const menuBlockClientId = getBlockRootClientId(clientId);\n            const pClientId = getAdjacentBlockClientId(menuBlockClientId);\n            return {\n                controllerClientId: getBlockRootClientId(menuBlockClientId),\n                pagesClientId: pClientId,\n                pages: getBlock(pClientId).innerBlocks.map(i => {\n                    return {\n                        clientId: i.clientId,\n                        uuid: i.attributes.uuid,\n                        title: i.attributes.title,\n                    };\n                }),\n            };\n        },\n        [clientId],\n    );\n\n    const onBlockCreation = () => {\n        if (null === uuid) {\n            // We will use the first client id assigned as a uuid.\n            console.log('onBlockCreation', uuid);\n            const newUuid = clientId;\n            setAttributes({ uuid: newUuid });\n            const newPageBlock = createBlock(\n                'prc-block/topic-index-condensed-page',\n                {\n                    uuid: newUuid,\n                    title: '',\n                },\n            );\n            insertBlock(newPageBlock, false, pagesClientId);\n            // updateBlockAttributes(topicIndexViewClientId, {map: });\n            // Go create a page block, set the uuid to this uuid. Now they are bonded.\n        }\n    };\n\n    const onTitleUpdate = t => {\n        setAttributes({ slug: cleanForSlug(t) });\n        const tmp = pages;\n        if (1 <= pages.length) {\n            const matchedPages = tmp.filter(i => i.uuid === uuid);\n            if (1 <= matchedPages.length) {\n                const targetClientId = matchedPages[0].clientId;\n                // Update the heading on the page block.\n                updateBlockAttributes(targetClientId, { heading: t });\n            }\n        }\n    };\n\n    const onBlockSelection = () => {\n        if (null !== uuid) {\n            updateBlockAttributes(controllerClientId, { active: uuid });\n        }\n    };\n\n    useEffect(() => {\n        onBlockCreation();\n    }, []);\n\n    useEffect(() => {\n        onTitleUpdate(title);\n    }, [title]);\n\n    useEffect(() => {\n        onBlockSelection();\n    }, [isSelected]);\n\n    const blockProps = useBlockProps({\n        className: classnames(className, 'item', {\n            active: uuid === context['prc-block/topic-index-condensed-active'],\n        }),\n    });\n\n    return (\n        <Fragment>\n            <div {...blockProps}>\n                <RichText\n                    tagName=\"div\" // The tag here is the element output and editable in the admin\n                    value={title} // Any existing content, either from the database or an attribute default\n                    allowedFormats={[]} // Allow the content to be made bold or italic, but do not allow other formatting options\n                    onChange={newTitle => setAttributes({ title: newTitle })} // Store updated content as a block attribute\n                    placeholder={__('Politics')} // Display this text before any content has been added by the user\n                />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Edit;\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\n\nconst save = () => {\n    return <Fragment />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n// import './style.scss';\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Menu Item'),\n    description: __(\n        'A sub block of Menu block, a sub block of the Topic Index - Condensed View block.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n"],"sourceRoot":""}