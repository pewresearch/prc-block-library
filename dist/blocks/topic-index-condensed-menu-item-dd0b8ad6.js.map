{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/classnames/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/topic-index-condensed/menu-item/edit.js","webpack:///./src/topic-index-condensed/menu-item/save.js","webpack:///./src/topic-index-condensed/menu-item/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.components\"","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///external \"wp.data\"","webpack:///external \"wp.blocks\""],"names":["module","exports","wp","element","_typeof","obj","Symbol","iterator","constructor","prototype","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","window","__webpack_amd_options__","i18n","path","replace","concat","Edit","attributes","setAttributes","className","clientId","isSelected","useDispatch","updateBlockAttributes","useSelect","select","rootClientId","getBlockRootClientId","useEffect","blockProps","useBlockProps","classnames","title","__","save","Content","name","metadata","settings","description","edit","registerBlockType","blockEditor","components","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","data","blocks"],"mappings":";;;;;;;;;;;;;;;;;sHAAAA,EAAOC,QAAUC,GAAGC,S,iBCApB,SAASC,EAAQC,GAaf,MAVsB,mBAAXC,QAAoD,iBAApBA,OAAOC,SAChDP,EAAOC,QAAUG,EAAU,SAAiBC,GAC1C,cAAcA,GAGhBL,EAAOC,QAAUG,EAAU,SAAiBC,GAC1C,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,GAItHD,EAAQC,GAGjBL,EAAOC,QAAUG,G,qTChBjB,QAAY,EAAQ;;;;;GAIE,WAAY,aAAa,IAAIM,EAAO,GAAGC,eAAe,SAASC,IAA4B,IAAf,IAAIC,EAAQ,GAAWC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAIF,UAAUD,GAAG,GAAIG,EAAJ,CAAiB,IAAIC,EAAQd,EAAQa,GAAK,GAAa,WAAVC,GAA8B,WAAVA,EAAoBL,EAAQM,KAAKF,QAAW,GAAGG,MAAMC,QAAQJ,IAAMA,EAAID,OAAO,CAAC,IAAIM,EAAMV,EAAWW,MAAM,KAAKN,GAAQK,GAAOT,EAAQM,KAAKG,QAAc,GAAa,WAAVJ,EAAoB,IAAI,IAAIM,KAAOP,EAAQP,EAAOe,KAAKR,EAAIO,IAAMP,EAAIO,IAAMX,EAAQM,KAAKK,IAAS,OAAOX,EAAQa,KAAK,KAAsC1B,EAAOC,SAASW,EAAWe,QAAQf,EAAWZ,EAAOC,QAAQW,GAAsE,WAAtBR,EAAQ,QAAwB,WAC1nB,KAA/B,aAAY,OAAOQ,GAAY,QAAjC,OAAiC,aAAQgB,OAAOhB,WAAWA,EADzD,I,kBCJtB,YACAZ,EAAOC,QAAU4B,I,+BCDjB7B,EAAOC,QAAUC,GAAG4B,M,gCCSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBJ,OAAO,YAAYK,OAAOF,K,mKCoDnCG,EA5CF,SAAC,GAMR,EALFC,WAKE,EAJFC,cAIG,IAHHC,EAGE,EAHFA,UACAC,EAEE,EAFFA,SACAC,EACE,EADFA,WAEkCC,sBAAY,qBAAtCC,sBACiBC,qBACrB,SAAAC,GAGI,MAAO,CACHC,cAFsBC,EADOF,EAAO,qBAAhCE,sBACuCP,MAKnD,CAACA,IARGM,aAWRE,qBAAU,cAAU,CAACP,IAErB,IAAMQ,EAAaC,wBAAc,CAC7BX,UAAWY,IAAWZ,KAK1B,OACI,oBAAC,WAAD,KACI,oBAAC,gBAAD,6CAEA,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWa,MAAOC,aAAG,kBACjB,oBAAC,WAAD,KACI,uCAKZ,0BAASJ,EAAT,oBChDGK,EAJF,WACT,OAAO,oBAAC,cAAYC,QAAb,O,6kBCQHC,EAASC,EAATD,KAEFE,EAAW,CACbN,MAAOC,aAAG,qCACVM,YAAaN,aACT,qFAEJO,OACAN,QAGJO,4BAAkBL,EAAD,OAAYC,GAAaC,K,gBCzB1CxD,EAAOC,QAAUC,GAAG0D,a,gBCApB5D,EAAOC,QAAUC,GAAG2D,Y,+BCAL,SAASC,EAAgBzD,EAAKmB,EAAKuC,GAYhD,OAXIvC,KAAOnB,EACT2D,OAAOC,eAAe5D,EAAKmB,EAAK,CAC9BuC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZ/D,EAAImB,GAAOuC,EAGN1D,EAZT,mC,gBCAAL,EAAOC,QAAUC,GAAGmE,M,gBCApBrE,EAAOC,QAAUC,GAAGoE,S","file":"blocks/topic-index-condensed-menu-item-dd0b8ad6.js","sourcesContent":["module.exports = wp.element;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)&&arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}else if(argType==='object'){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","module.exports = wp.i18n;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport {\n    BlockControls,\n    InspectorControls,\n    useBlockProps,\n} from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\nconst Edit = ({\n    attributes,\n    setAttributes,\n    className,\n    clientId,\n    isSelected,\n}) => {\n    const { updateBlockAttributes } = useDispatch('core/block-editor');\n    const { rootClientId } = useSelect(\n        select => {\n            const { getBlockRootClientId } = select('core/block-editor');\n            const rootBlockClientId = getBlockRootClientId(clientId);\n            return {\n                rootClientId: rootBlockClientId,\n            };\n        },\n        [clientId],\n    );\n\n    useEffect(() => {}, [isSelected]);\n\n    const blockProps = useBlockProps({\n        className: classnames(className),\n    });\n\n    // When you click into a menu link, when isSelected is true then we should using block context change something in the parent block, view block, that says this is whats active. From there we will hide or show the current page, when you click on a new menu link that will show the appropriate page.\n\n    return (\n        <Fragment>\n            <BlockControls>Toolbar Shit Here For Links and Such</BlockControls>\n\n            <InspectorControls>\n                <PanelBody title={__('Menu settings')}>\n                    <Fragment>\n                        <p>Yep</p>\n                    </Fragment>\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>Menu item here</div>\n        </Fragment>\n    );\n};\n\nexport default Edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\n// import './style.scss';\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Topic Index - Condensed Menu Item'),\n    description: __(\n        'A sub block of Menu block, a sub block of the Topic Index - Condensed View block.',\n    ),\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = wp.blockEditor;","module.exports = wp.components;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = wp.data;","module.exports = wp.blocks;"],"sourceRoot":""}