{"version":3,"sources":["webpack:///external \"React\"","webpack:///./src/mailchimp-opt-down/component.js","webpack:///./src/mailchimp-opt-down/edit.js","webpack:///./src/mailchimp-opt-down/index.js","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external \"ReactDOM\"","webpack:///external [\"wp\",\"blocks\"]"],"names":["module","exports","window","MailchimpOptDown","useState","error","setError","loading","setLoading","choice","setChoice","dimmerActive","setDimmerActive","dimmerMessage","setDimmerMessage","getQueryArg","location","emailAddress","setEmailAddress","Message","style","fontFamily","color","hidden","Form","className","Field","Input","label","placeholder","name","data-validate","required","value","onChange","e","target","size","Checkbox","inline","console","log","Button","disabled","document","querySelector","onClick","preventDefault","isEmail","apiFetch","path","addQueryArgs","email","method","then","p","info","catch","data","status","edit","props","blockProps","useBlockProps","metadata","settings","save","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;sHAAcA,EAAOC,QAAUC,OAAc,O,0JCmG9BC,EAvFU,SAAH,GAAY,eACjC,MAA4BC,oBAAS,GAAM,mBAAnCC,EAAK,KAAEC,EAAQ,KACvB,EAAgCF,oBAAS,GAAM,mBAAvCG,EAAO,KAAEC,EAAU,KAC3B,EAA8BJ,oBAAS,GAAM,mBAArCK,EAAM,KAAEC,EAAS,KACzB,EAA0CN,oBAAS,GAAM,mBAAjDO,EAAY,KAAEC,EAAe,KACrC,EAA4CR,mBAAS,IAAG,mBAAhDS,EAAa,KAAEC,EAAgB,KACvC,EAA0CV,mBAASW,sBAAYb,OAAOc,SAAU,UAAS,mBAAjFC,EAAY,KAAEC,EAAe,KA6CrC,OACC,oBAAC,WAAQ,KACR,oBAACC,EAAA,EAAO,CACRC,MAAO,CAACC,WAAY,uBACpBC,MAAQjB,EAAQ,MAAQ,QACxBkB,QAASZ,GACPE,GAEF,oBAACW,EAAA,EAAI,CAACC,UAAU,sBACf,oBAACD,EAAA,EAAKE,MAAK,KACV,oBAACF,EAAA,EAAKG,MAAK,CACXC,MAAM,QACNC,YAAY,qBACZC,KAAK,QACLC,gBAAc,WACdC,UAAQ,EACRC,MAAOhB,EACPiB,SAAW,SAAAC,GAAOjB,EAAgBiB,EAAEC,OAAOH,QAC3CI,KAAK,SAGN,oBAACb,EAAA,EAAKE,MAAK,KACV,oBAACF,EAAA,EAAKc,SAAQ,CACdC,QAAM,EACNT,KAAK,YACLF,MAAM,wEACNK,MArEyB,aAsEzBC,SAAW,SAAAC,GAAOK,QAAQC,IAAI,QAASN,GAAIzB,GAAU,OAGtD,oBAACgC,EAAA,EAAM,CAACC,UAAYlC,GAAUmC,SAASC,cAAc,iBAAmBC,QAvErD,SAAAX,GAMrB,GALAA,EAAEY,iBAEFvC,GAAW,GACXI,GAAgB,IAEXoC,kBAAQ/B,GAKZ,OAJAH,EAAiB,sCACjBR,GAAS,GACTE,GAAW,QACXI,GAAgB,GAIjBqC,IAAS,CACCC,KAAMC,uBACd,0CACA,CACCC,MAAOnC,IAGAoC,OAAQ,SACTC,MAAM,SAAAC,GACLf,QAAQgB,KAAK,sBAAuBD,GAC7C/C,GAAW,GACXF,GAAS,GACTM,GAAgB,GAChBE,EAAiB,qDACT2C,OAAO,SAAAtB,GACfK,QAAQC,IAAIN,GACZ3B,GAAW,GACXF,GAAS,GACTM,GAAgB,GACK,OAAjBuB,EAAEuB,KAAKC,QACV7C,EAAiB,4DAqC+EP,QAASA,GAAQ,yBC1EtGqD,EATF,SAACC,GACb,IAAMC,EAAaC,0BACnB,OACC,0BAASD,EACR,oBAAC,EAAgB,Q,ykBCFpB,IAAQhC,EAASkC,EAATlC,KAEFmC,EAAW,CAChBL,OACAM,KAAM,kBAAM,oBAAC,WAAQ,QAGtBC,4BAAkBrC,EAAK,EAAD,KAAOkC,GAAaC,K,iBCnB5BjE,EAAOC,QAAUC,OAAW,GAAY,U,iBCAxCF,EAAOC,QAAUC,OAAW,GAAO,K,0VCAnCF,EAAOC,QAAUC,OAAW,GAAW,S,gBCAvCF,EAAOC,QAAUC,OAAW,GAAe,a,iBCA3CF,EAAOC,QAAUC,OAAiB,U,gBCAlCF,EAAOC,QAAUC,OAAW,GAAU,Q","file":"blocks/mailchimp-opt-down-e3276e27.js","sourcesContent":["(function() { module.exports = window[\"React\"]; }());","/**\n * External Dependencies\n */\nimport { Form, Input, Dimmer, Button, Message } from 'semantic-ui-react';\n\n/**\n * WordPress Dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { addQueryArgs, getQueryArg, isEmail } from '@wordpress/url';\n\nconst MailchimpOptDown = ({}) => {\n\tconst [ error, setError ] = useState(false);\n\tconst [ loading, setLoading ] = useState(false);\n\tconst [ choice, setChoice ] = useState(false);\n\tconst [ dimmerActive, setDimmerActive ] = useState(false);\n\tconst [ dimmerMessage, setDimmerMessage ] = useState('');\n\tconst [ emailAddress, setEmailAddress ] = useState(getQueryArg(window.location, 'email'));\n\n\tconst quarteryNewsletterId = 'a33430a835';\n\n\tconst submitHandler = e => {\n\t\te.preventDefault();\n\n\t\tsetLoading(true);\n\t\tsetDimmerActive(false);\n\n\t\tif (!isEmail(emailAddress)) {\n\t\t\tsetDimmerMessage('Please enter a valid email address');\n\t\t\tsetError(true);\n\t\t\tsetLoading(false);\n\t\t\tsetDimmerActive(true);\n\t\t\treturn;\n\t\t}\n\n\t\tapiFetch({\n            path: addQueryArgs(\n\t\t\t\t'prc-api/v2/mailchimp/quarterly-opt-out/',\n\t\t\t\t{\n\t\t\t\t\temail: emailAddress,\n\t\t\t\t}\n\t\t\t),\n            method: 'POST',\n        }).then( p => {\n            console.info('Succesfully updated', p);\n\t\t\tsetLoading(false);\n\t\t\tsetError(false);\n\t\t\tsetDimmerActive(true);\n\t\t\tsetDimmerMessage('You have succesfully updated your preferences.');\n        }).catch( e=> {\n\t\t\tconsole.log(e);\n\t\t\tsetLoading(false);\n\t\t\tsetError(true);\n\t\t\tsetDimmerActive(true);\n\t\t\tif (e.data.status == '404') {\n\t\t\t\tsetDimmerMessage('We could not find that email address in our records.');\n\t\t\t}\n\t\t});\n\t};\n\n\t//\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Message\n\t\t\tstyle={{fontFamily: 'franklin-gothic-urw'}}\n\t\t\tcolor={ error ? 'red' : 'green'}\n\t\t\thidden={!dimmerActive }>\n\t\t\t\t{dimmerMessage}\n\t\t\t</Message>\n\t\t\t<Form className=\"mailchimp-opt-down\">\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Form.Input\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tplaceholder=\"Your email address\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tdata-validate=\"mc-email\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={emailAddress}\n\t\t\t\t\tonChange={ e => { setEmailAddress(e.target.value) } }\n\t\t\t\t\tsize=\"big\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Form.Checkbox\n\t\t\t\t\tinline\n\t\t\t\t\tname=\"interests\"\n\t\t\t\t\tlabel=\"Send me quarterly updates and unsubscribe from all other newsletters.\"\n\t\t\t\t\tvalue={quarteryNewsletterId}\n\t\t\t\t\tonChange={ e => { console.log(\"Click\", e); setChoice(true); } }\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button disabled={ !choice || document.querySelector('body.wp-admin') } onClick={submitHandler} loading={loading}>Update preferences</Button>\n\t\t\t</Form>\n\t\t</Fragment>\n\t  );\n}\n\nexport default MailchimpOptDown;\n","/**\n * WordPress Dependencies\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport MailchimpOptDown from './component';\n\nconst edit = (props) => {\n\tconst blockProps = useBlockProps();\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<MailchimpOptDown />\n\t\t</div>\n\t);\n};\n\nexport default edit;\n","/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\n\nconst { name } = metadata;\n\nconst settings = {\n\tedit,\n\tsave: () => <Fragment/>,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"ReactDOM\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}