{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external \"wp.components\"","webpack:///./src/group/index.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.compose\"","webpack:///external \"wp.hooks\""],"names":["module","exports","wp","element","i18n","path","replace","window","concat","components","BorderStyleControl","border","setAttributes","isPressed","colors","name","color","value","onChange","console","log","GroupBlockEdit","props","attributes","isSelected","maxWidth","align","title","label","options","newMaxWidth","GroupBlockFilter","createHigherOrderComponent","BlockEdit","addFilter","settings","Object","assign","type","default","supports","variations","__","description","className","innerBlocks","blockEditor","compose","hooks"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,GAAGC,S,gBCApBH,EAAOC,QAAUC,GAAGE,M,gCCSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,gBCVlDL,EAAOC,QAAUC,GAAGO,Y,6ECApB,uDAqFMC,EAAqB,SAAC,GAA4B,EAA3BC,OAA2B,EAAnBC,cAMjC,OACI,+BACI,oBAAC,cAAD,KACI,oBAAC,SAAD,CAAQC,WAAW,GAAnB,KACA,oBAAC,SAAD,CAAQA,WAAW,GAAnB,KACA,oBAAC,SAAD,CAAQA,WAAW,GAAnB,OACA,oBAAC,SAAD,CAAQA,WAAW,GAAnB,WAEJ,oBAAC,eAAD,CACIC,OAdG,CACX,CAAEC,KAAM,QAASC,MAAO,QACxB,CAAED,KAAM,QAASC,MAAO,QACxB,CAAED,KAAM,OAAQC,MAAO,YAYfC,MAAQ,KACRC,SAAW,SAAEF,GAAF,OAAaG,QAAQC,IAAI,cAAeJ,QAM5DK,EAAiB,SAAAC,GACnBH,QAAQC,IAAI,oBAAqBE,GADL,IAEpBC,EAA0CD,EAA1CC,WAAYX,EAA8BU,EAA9BV,cAAeY,EAAeF,EAAfE,WAC3BC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAElB,OAAMF,EAKC,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWG,MAAM,mBACb,oBAAC,WAAD,KACI,oBAACjB,EAAD,CAAoBC,OAAQ,KAAMC,cAAeA,OAGtD,SAAWc,GAAS,UAAYA,IAC/B,oBAAC,YAAD,CAAWC,MAAM,sBACb,oBAAC,WAAD,KACI,oBAAC,gBAAD,CACIC,MAAM,QACNX,MAAQQ,EACRI,QAAU,CACN,CAAED,MAAO,OAAQX,MAAO,KACxB,CAAEW,MAAO,SAAUX,MAAO,KAC1B,CAAEW,MAAO,SAAUX,MAAO,KAC1B,CAAEW,MAAO,SAAUX,MAAO,KAC1B,CAAEW,MAAO,SAAUX,MAAO,MAE9BC,SAAW,SAAEY,GAAmBlB,EAAc,CAACa,SAAUK,UAvBzE,oBAAC,WAAD,OAgCTC,EAAmBC,sCAA2B,SAAAC,GAChD,OAAO,SAAAX,GAEH,MAAI,eADaA,EAATP,KAEG,oBAACkB,EAAcX,GAGtB,oBAAC,WAAD,KACI,oBAACW,EAAcX,GACf,oBAACD,EAAmBC,OAIjC,wBAGHY,oBAAU,2BAA4B,mBAhIX,SAAEC,GAC1B,MAAK,eAAiBA,EAASpB,OAI/BI,QAAQC,IAAI,iBAAkBe,QAEE,IAAxBA,EAASZ,aACnBY,EAASZ,WAAaa,OAAOC,OAAQF,EAASZ,WAAY,CACzDE,SAAS,CACRa,KAAM,UACNC,QAAS,aAK8B,IAA5BJ,EAASK,SAASd,QACzBS,EAASK,SAASd,MAAQ,CAAC,OAAQ,QAAS,OAAQ,SAGxDS,EAASM,WAAa,CAClB,CACI1B,KAAM,UACNY,MAAOe,aAAG,WACVC,YAAaD,aAAG,0FAChBnB,WAAY,CACRqB,UAAW,oBAEfC,YAAa,CACT,CAAC,gBACD,CAAC,oBAGT,CACI9B,KAAM,OACNY,MAAOe,aAAG,QACVC,YAAaD,aAAG,sGAChBnB,WAAY,CACRqB,UAAW,iBAEfC,YAAa,CACT,CAAC,gBACD,CAAC,cACD,CAAC,4BAzCFV,KA+HdD,oBAAU,mBAAoB,kBAAmBH,EAAkB,K,gBCnKpE/B,EAAOC,QAAUC,GAAG4C,a,iBCApB9C,EAAOC,QAAUC,GAAG6C,S,iBCApB/C,EAAOC,QAAUC,GAAG8C,Q","file":"blocks/group-745ad619.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.i18n;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","module.exports = wp.components;","// We should add the following features:\n// 1. Border selection, border left,top,right,bottom, and border color.\n// 2. A callout block variation and a card block variation that would set the correct color options and start off in innerblocks with a heading and a paragraph.\n// 3. Align left and right options.\n// 4. Dimensions control, max width??\n// 5. A block transform from the deprecated callout block.\n\n/**\n * WordPress Dependencies\n */\n import { __ } from '@wordpress/i18n';\n import { createHigherOrderComponent } from '@wordpress/compose';\n import { Fragment, useState, useEffect } from '@wordpress/element';\n import { InspectorControls } from '@wordpress/block-editor';\n import {\n     Button,\n     ButtonGroup,\n     ColorPalette,\n     PanelBody,\n     PanelRow,\n     SelectControl,\n } from '@wordpress/components';\n import { addFilter } from '@wordpress/hooks';\n\n /**\n * Add custom settings:\n * 1. New attributes for maxWidth.\n * 2. Signal additional support for new alignment options.\n * 3. New variations for quickly styling a Callout or Card version of the group block.\n *\n * @param {Object} settings Settings for the block.\n *\n * @return {Object} settings Modified settings.\n */\nconst modifyBlockSettings = ( settings ) => {\n    if ( 'core/group' !== settings.name ) {\n        return settings;\n    }\n\n    console.log('addAttributes!', settings);\n\t\n\tif( typeof settings.attributes !== 'undefined' ) {\n\t\tsettings.attributes = Object.assign( settings.attributes, {\n\t\t\tmaxWidth:{ \n\t\t\t\ttype: 'integer',\n\t\t\t\tdefault: 100,\n\t\t\t}\n\t\t});\n\t}\n\n    if( typeof settings.supports.align !== 'undefined' ) {\n        settings.supports.align = ['left', 'right', 'wide', 'full'];\n    }\n\n    settings.variations = [\n        {\n            name: 'callout',\n            title: __('Callout'),\n            description: __('A Group block in the \"Callout\" style with a oatmeal background and pre-set innerblocks'),\n            attributes: {\n                className: 'is-style-callout',\n            },\n            innerBlocks: [\n                ['core/heading'],\n                ['core/paragraph'],\n            ],\n        },\n        {\n            name: 'card',\n            title: __('Card'),\n            description: __('A Group block in the \"Card\" style with a white background, heading with a border, image, and text.'),\n            attributes: {\n                className: 'is-style-card',\n            },\n            innerBlocks: [\n                ['core/heading'],\n                ['core/image'],\n                ['prc-block/story-item'],\n            ],\n        },\n    ];\n\n\treturn settings;\n}\n\nconst BorderStyleControl = ({border, setAttributes}) => {\n    const colors = [\n        { name: 'black', color: '#000' },\n        { name: 'white', color: '#fff' },\n        { name: 'gray', color: '#d7d7d2' },\n    ];\n    return(\n        <div>\n            <ButtonGroup>\n                <Button isPressed={true}>L</Button>\n                <Button isPressed={false}>R</Button>\n                <Button isPressed={false}>Top</Button>\n                <Button isPressed={false}>Bottom</Button>\n            </ButtonGroup>\n            <ColorPalette\n                colors={ colors }\n                value={ null }\n                onChange={ ( color ) => console.log('borderColor', color) }\n            />\n        </div>\n    );\n}\n \n const GroupBlockEdit = props => {\n     console.log('<GroupBlockEdit/>', props);\n     const { attributes, setAttributes, isSelected } = props;\n     const { maxWidth, align } = attributes;\n\n     if ( !isSelected ) {\n         return <Fragment/>;\n     }\n \n     return (\n            <InspectorControls>\n                <PanelBody title=\"Border settings\">\n                    <PanelRow>\n                        <BorderStyleControl border={null} setAttributes={setAttributes}/>\n                    </PanelRow>\n                </PanelBody>\n                { ('left' === align || 'right' === align) && (\n                    <PanelBody title=\"Dimension settings\">\n                        <PanelRow>\n                            <SelectControl\n                                label=\"Width\"\n                                value={ maxWidth }\n                                options={ [\n                                    { label: '100%', value: 100 },\n                                    { label: '200 px', value: 200 },\n                                    { label: '310 px', value: 310 },\n                                    { label: '420 px', value: 420 },\n                                    { label: '640 px', value: 640 },\n                                ] }\n                                onChange={ ( newMaxWidth ) => { setAttributes({maxWidth: newMaxWidth}) } }\n                            />\n                        </PanelRow>\n                    </PanelBody>\n                ) }\n            </InspectorControls>\n     );\n };\n \n const GroupBlockFilter = createHigherOrderComponent(BlockEdit => {\n     return props => {\n         const { name } = props;\n         if ('core/group' !== name) {\n             return <BlockEdit {...props} />;\n         }\n         return (\n             <Fragment>\n                 <BlockEdit {...props} />\n                 <GroupBlockEdit {...props} />\n             </Fragment>\n         );\n     };\n }, 'withInspectorControl');\n \n \n addFilter('blocks.registerBlockType', 'prc-block/group', modifyBlockSettings);\n addFilter('editor.BlockEdit', 'prc-block/group', GroupBlockFilter, 21);\n ","module.exports = wp.blockEditor;","module.exports = wp.compose;","module.exports = wp.hooks;"],"sourceRoot":""}