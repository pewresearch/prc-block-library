{"version":3,"sources":["webpack:///./src/pullquote/style.scss","webpack:///./themes/prc_parent/src/scss/mixins.scss","webpack:///./themes/prc_parent/src/scss/master.variables.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,0BAQA,SACC,mBACA,sCACA,aAEC,aACA,oBACA,4CC8BE,UACI,cACA,WACA,6BD/BP,eACC,0BACA,4BACA,gDACA,WACC,iBACA,0CAED,6BACC,gDACA,WACC,gBACA,mDAIH,iBACC,kDAED,gBACC,wFAED,eAjCU,yBAoCT,qBACA,YACA,iBACA,yBACA,0BACA,4DEzBe,4BF2Bf,kCAEA,kCACA,sGAEA,+BACC,WACA,qBACA,WACA,WACA,iBACA,kBACA,kBACA,qLAKH,eA7DW,0FAoEX,UAEC,4FAGD,WAEC,C","file":"blocks/pullquote-fe89b48e.css","sourcesContent":["@use \"../../../../themes/prc_parent/src/scss/master.variables.scss\" as variables;\n@use \"../../../../themes/prc_parent/src/scss/colors.scss\" as colors;\n@use \"../../../../themes/prc_parent/src/scss/functions.scss\" as functions;\n@use \"../../../../themes/prc_parent/src/scss/mixins.scss\" as mixins;\n@use \"sass:math\";\n\n$maxWidth: 420px;\n\nfigure.wp-block-pullquote {\n\tpadding: 0;\n\tmargin-bottom: 20px;\n\tblockquote {\n\t\t@include mixins.clearfix();\n\t\tcolor: #565656;\n\t\tpadding: 24px;\n\t\tmargin: 0!important;\n\t}\n\tp {\n\t\ttext-align: left;\n\t\tfont-size: 20px!important;\n\t\tline-height: 30px!important;\n\t\t&:first-child:before {\n\t\t\tcontent: \"“\";\n\t\t\tmargin-right: 4px;\n\t\t}\n\t\t&:last-of-type {\n\t\t\tmargin-bottom: 30px!important;\n\t\t\t&:after {\n\t\t\t\tcontent: \"”\";\n\t\t\t\tmargin-left: 4px;\n\t\t\t}\n\t\t}\n\t}\n\t&.has-text-align-center p {\n\t\ttext-align: center;\n\t}\n\t&.has-text-align-right p {\n\t\ttext-align: right;\n\t}\n\tcite,\n\t.wp-block-pullquote__citation {\n\t\tmax-width: $maxWidth;\n\t\tdisplay: block!important;\n\t\tpadding: 0!important;\n\t\tfloat: right;\n\t\ttext-align: right;\n\t\tcolor: #565656!important;\n\t\tfont-size: 15px!important;\n\t\tfont-family: variables.$sansSerifFont;\n\t\tline-height: 18px!important;\n\n\t\tletter-spacing: inherit!important;\n\t\ttext-transform: inherit!important;\n\n\t\t&:before {\n\t\t\tborder-bottom: 1px solid #8c8c8c;\n\t\t\tcontent: \"\";\n\t\t\tdisplay: inline-block;\n\t\t\theight: 1px;\n\t\t\twidth: 10px;\n\t\t\tmargin-right: 5px;\n\t\t\tmargin-bottom: 4px;\n\t\t\tposition: relative;\n\t\t}\n\t}\n}\n\n.wp-block[data-align=\"left\"] figure.wp-block-pullquote,\n.wp-block[data-align=\"right\"] figure.wp-block-pullquote,\nfigure.wp-block-pullquote.alignleft,\nfigure.wp-block-pullquote.alignright {\n\tmax-width: $maxWidth;\n}\n\n.wp-block[data-align=\"left\"] figure.wp-block-pullquote,\nfigure.wp-block-pullquote.alignleft {\n\tfloat: left;\n}\n\n.wp-block[data-align=\"right\"] figure.wp-block-pullquote,\nfigure.wp-block-pullquote.alignright {\n\tfloat: right;\n}\n","@use \"sass:math\";\n@use \"master.variables\"as variables;\n\n@mixin box-shadow ($string) {\n    -webkit-box-shadow: $string;\n    -moz-box-shadow: $string;\n    box-shadow: $string;\n}\n\n@mixin uppercaseTitle($fontWeight: 400, $color: black, $fontSize: variables.$absoluteSmall, $letterSpacing: .1em) {\n    font-weight: $fontWeight;\n    font-size: $fontSize;\n    letter-spacing: $letterSpacing;\n    font-family: variables.$sansSerifFont;\n    text-transform: uppercase;\n    color: $color;\n}\n\n@mixin fontSize($desiredFontSize) {\n    font-size: math.div($desiredFontSize, $baseUnit)rem;\n}\n\n/** Custom Mixins **/\n@mixin projectColor($primaryColor, $secondaryColor) {\n\n    .report,\n    .interactive,\n    .demographic-profile,\n    .blog-post,\n    .fact-sheet {\n        &.bg {\n            background-color: $primaryColor;\n        }\n\n        &.border {\n            border-color: $primaryColor;\n        }\n    }\n\n    .pseudo-link {\n        color: $secondaryColor !important;\n    }\n}\n\n@mixin clearfix() {\n    &:after {\n        content: \"\";\n        display: table;\n        clear: both;\n    }\n}","@use 'colors';\n@use \"functions\" as functions;\n@use \"sass:math\";\n@use \"sass:string\";\n@use \"sass:map\";\n\n\n/*******************************\n         Site Settings\n*******************************/\n\n/*-------------------\n       Fonts\n--------------------*/\n$franklinGothic : 'franklin-gothic-urw';\n$abrilText : 'abril-text';\n\n$defaultFont : Georgia,\n'Times New Roman',\nTimes,\nserif;\n\n$sansSerifFont : $franklinGothic,\nVerdana,\nGeneva,\nsans-serif;\n\n$sansSerif : $sansSerifFont; // Alias for $sansSerifFont\n$serifFont : $abrilText,\n$defaultFont;\n\n$pageFont : $defaultFont;\n$headerFont : $sansSerifFont;\n$postTitleFont : $serifFont;\n\n$fontSmoothing : antialiased;\n\n$bold : bold;\n$normal : normal;\n$light : lighter;\n\n\n/*-------------------\n      Base Sizes\n--------------------*/\n/* This is the single variable that controls them all */\n$baseUnit : 14;\n\n/*  Convert the base unit to a pixel value. */\n$emSize : functions.replace-unit($baseUnit, px);\n\n/* The size of page text  */\n$fontSize : $emSize;\n\n\n/*-------------------\n        Grid\n--------------------*/\n\n$maxWidth: 1152px;\n$columnCount: 16;\n\n// /*-------------------\n//   Exact Pixel Values\n// --------------------*/\n\n/*\n  These are used to specify exact pixel values in em\n  for things like borders that remain constantly\n  sized as emSize adjusts\n\n  Since there are many more sizes than names for sizes,\n  these are named by their original pixel values.\n\n*/\n$u1px : functions.replace-unit(math.div(1, functions.strip-unit($emSize)), rem);\n$u2px : functions.replace-unit(math.div(2, functions.strip-unit($emSize)), rem);\n$u3px : functions.replace-unit(math.div(3, functions.strip-unit($emSize)), rem);\n$u4px : functions.replace-unit(math.div(4, functions.strip-unit($emSize)), rem);\n$u5px : functions.replace-unit(math.div(5, functions.strip-unit($emSize)), rem);\n$u6px : functions.replace-unit(math.div(6, functions.strip-unit($emSize)), rem);\n$u7px : functions.replace-unit(math.div(7, functions.strip-unit($emSize)), rem);\n$u8px : functions.replace-unit(math.div(8, functions.strip-unit($emSize)), rem);\n$u9px : functions.replace-unit(math.div(9, functions.strip-unit($emSize)), rem);\n$u10px : functions.replace-unit(math.div(10, functions.strip-unit($emSize)), rem);\n$u11px : functions.replace-unit(math.div(11, functions.strip-unit($emSize)), rem);\n$u12px : functions.replace-unit(math.div(12, functions.strip-unit($emSize)), rem);\n$u13px : functions.replace-unit(math.div(13, functions.strip-unit($emSize)), rem);\n$u14px : functions.replace-unit(math.div(14, functions.strip-unit($emSize)), rem);\n$u15px : functions.replace-unit(math.div(15, functions.strip-unit($emSize)), rem);\n$u16px : functions.replace-unit(math.div(16, functions.strip-unit($emSize)), rem);\n$u17px : functions.replace-unit(math.div(17, functions.strip-unit($emSize)), rem);\n$u18px : functions.replace-unit(math.div(18, functions.strip-unit($emSize)), rem);\n$u19px : functions.replace-unit(math.div(19, functions.strip-unit($emSize)), rem);\n$u20px : functions.replace-unit(math.div(20, functions.strip-unit($emSize)), rem);\n$u21px : functions.replace-unit(math.div(21, functions.strip-unit($emSize)), rem);\n$u22px : functions.replace-unit(math.div(22, functions.strip-unit($emSize)), rem);\n$u23px : functions.replace-unit(math.div(23, functions.strip-unit($emSize)), rem);\n$u24px : functions.replace-unit(math.div(24, functions.strip-unit($emSize)), rem);\n$u25px : functions.replace-unit(math.div(25, functions.strip-unit($emSize)), rem);\n$u26px : functions.replace-unit(math.div(26, functions.strip-unit($emSize)), rem);\n$u27px : functions.replace-unit(math.div(27, functions.strip-unit($emSize)), rem);\n$u28px : functions.replace-unit(math.div(28, functions.strip-unit($emSize)), rem);\n$u29px : functions.replace-unit(math.div(29, functions.strip-unit($emSize)), rem);\n$u30px : functions.replace-unit(math.div(30, functions.strip-unit($emSize)), rem);\n$u31px : functions.replace-unit(math.div(31, functions.strip-unit($emSize)), rem);\n$u32px : functions.replace-unit(math.div(32, functions.strip-unit($emSize)), rem);\n$u33px : functions.replace-unit(math.div(33, functions.strip-unit($emSize)), rem);\n$u34px : functions.replace-unit(math.div(34, functions.strip-unit($emSize)), rem);\n$u35px : functions.replace-unit(math.div(35, functions.strip-unit($emSize)), rem);\n$u36px : functions.replace-unit(math.div(36, functions.strip-unit($emSize)), rem);\n$u37px : functions.replace-unit(math.div(37, functions.strip-unit($emSize)), rem);\n$u38px : functions.replace-unit(math.div(38, functions.strip-unit($emSize)), rem);\n$u39px : functions.replace-unit(math.div(39, functions.strip-unit($emSize)), rem);\n$u40px : functions.replace-unit(math.div(40, functions.strip-unit($emSize)), rem);\n$u41px : functions.replace-unit(math.div(41, functions.strip-unit($emSize)), rem);\n$u42px : functions.replace-unit(math.div(42, functions.strip-unit($emSize)), rem);\n$u43px : functions.replace-unit(math.div(43, functions.strip-unit($emSize)), rem);\n$u44px : functions.replace-unit(math.div(44, functions.strip-unit($emSize)), rem);\n$u45px : functions.replace-unit(math.div(45, functions.strip-unit($emSize)), rem);\n$u46px : functions.replace-unit(math.div(46, functions.strip-unit($emSize)), rem);\n$u47px : functions.replace-unit(math.div(47, functions.strip-unit($emSize)), rem);\n$u48px : functions.replace-unit(math.div(48, functions.strip-unit($emSize)), rem);\n$u49px : functions.replace-unit(math.div(49, functions.strip-unit($emSize)), rem);\n$u50px : functions.replace-unit(math.div(50, functions.strip-unit($emSize)), rem);\n$u51px : functions.replace-unit(math.div(51, functions.strip-unit($emSize)), rem);\n$u52px : functions.replace-unit(math.div(52, functions.strip-unit($emSize)), rem);\n$u53px : functions.replace-unit(math.div(53, functions.strip-unit($emSize)), rem);\n$u54px : functions.replace-unit(math.div(54, functions.strip-unit($emSize)), rem);\n$u55px : functions.replace-unit(math.div(55, functions.strip-unit($emSize)), rem);\n$u56px : functions.replace-unit(math.div(56, functions.strip-unit($emSize)), rem);\n$u57px : functions.replace-unit(math.div(57, functions.strip-unit($emSize)), rem);\n$u58px : functions.replace-unit(math.div(58, functions.strip-unit($emSize)), rem);\n$u59px : functions.replace-unit(math.div(59, functions.strip-unit($emSize)), rem);\n$u60px : functions.replace-unit(math.div(60, functions.strip-unit($emSize)), rem);\n$u61px : functions.replace-unit(math.div(61, functions.strip-unit($emSize)), rem);\n$u62px : functions.replace-unit(math.div(62, functions.strip-unit($emSize)), rem);\n$u63px : functions.replace-unit(math.div(63, functions.strip-unit($emSize)), rem);\n$u64px : functions.replace-unit(math.div(64, functions.strip-unit($emSize)), rem);\n\n$relative1px : functions.replace-unit(math.div(1, functions.strip-unit($emSize)), em);\n$relative2px : functions.replace-unit(math.div(2, functions.strip-unit($emSize)), em);\n$relative3px : functions.replace-unit(math.div(3, functions.strip-unit($emSize)), em);\n$relative4px : functions.replace-unit(math.div(4, functions.strip-unit($emSize)), em);\n$relative5px : functions.replace-unit(math.div(5, functions.strip-unit($emSize)), em);\n$relative6px : functions.replace-unit(math.div(6, functions.strip-unit($emSize)), em);\n$relative7px : functions.replace-unit(math.div(7, functions.strip-unit($emSize)), em);\n$relative8px : functions.replace-unit(math.div(8, functions.strip-unit($emSize)), em);\n$relative9px : functions.replace-unit(math.div(9, functions.strip-unit($emSize)), em);\n$relative10px : functions.replace-unit(math.div(10, functions.strip-unit($emSize)), em);\n$relative11px : functions.replace-unit(math.div(11, functions.strip-unit($emSize)), em);\n$relative12px : functions.replace-unit(math.div(12, functions.strip-unit($emSize)), em);\n$relative13px : functions.replace-unit(math.div(13, functions.strip-unit($emSize)), em);\n$relative14px : functions.replace-unit(math.div(14, functions.strip-unit($emSize)), em);\n$relative15px : functions.replace-unit(math.div(15, functions.strip-unit($emSize)), em);\n$relative16px : functions.replace-unit(math.div(16, functions.strip-unit($emSize)), em);\n$relative17px : functions.replace-unit(math.div(17, functions.strip-unit($emSize)), em);\n$relative18px : functions.replace-unit(math.div(18, functions.strip-unit($emSize)), em);\n$relative19px : functions.replace-unit(math.div(19, functions.strip-unit($emSize)), em);\n$relative20px : functions.replace-unit(math.div(20, functions.strip-unit($emSize)), em);\n$relative21px : functions.replace-unit(math.div(21, functions.strip-unit($emSize)), em);\n$relative22px : functions.replace-unit(math.div(22, functions.strip-unit($emSize)), em);\n$relative23px : functions.replace-unit(math.div(23, functions.strip-unit($emSize)), em);\n$relative24px : functions.replace-unit(math.div(24, functions.strip-unit($emSize)), em);\n$relative25px : functions.replace-unit(math.div(25, functions.strip-unit($emSize)), em);\n$relative26px : functions.replace-unit(math.div(26, functions.strip-unit($emSize)), em);\n$relative27px : functions.replace-unit(math.div(27, functions.strip-unit($emSize)), em);\n$relative28px : functions.replace-unit(math.div(28, functions.strip-unit($emSize)), em);\n$relative29px : functions.replace-unit(math.div(29, functions.strip-unit($emSize)), em);\n$relative30px : functions.replace-unit(math.div(30, functions.strip-unit($emSize)), em);\n$relative31px : functions.replace-unit(math.div(31, functions.strip-unit($emSize)), em);\n$relative32px : functions.replace-unit(math.div(32, functions.strip-unit($emSize)), em);\n$relative33px : functions.replace-unit(math.div(33, functions.strip-unit($emSize)), em);\n$relative34px : functions.replace-unit(math.div(34, functions.strip-unit($emSize)), em);\n$relative35px : functions.replace-unit(math.div(35, functions.strip-unit($emSize)), em);\n$relative36px : functions.replace-unit(math.div(36, functions.strip-unit($emSize)), em);\n$relative37px : functions.replace-unit(math.div(37, functions.strip-unit($emSize)), em);\n$relative38px : functions.replace-unit(math.div(38, functions.strip-unit($emSize)), em);\n$relative39px : functions.replace-unit(math.div(39, functions.strip-unit($emSize)), em);\n$relative40px : functions.replace-unit(math.div(40, functions.strip-unit($emSize)), em);\n$relative41px : functions.replace-unit(math.div(41, functions.strip-unit($emSize)), em);\n$relative42px : functions.replace-unit(math.div(42, functions.strip-unit($emSize)), em);\n$relative43px : functions.replace-unit(math.div(43, functions.strip-unit($emSize)), em);\n$relative44px : functions.replace-unit(math.div(44, functions.strip-unit($emSize)), em);\n$relative45px : functions.replace-unit(math.div(45, functions.strip-unit($emSize)), em);\n$relative46px : functions.replace-unit(math.div(46, functions.strip-unit($emSize)), em);\n$relative47px : functions.replace-unit(math.div(47, functions.strip-unit($emSize)), em);\n$relative48px : functions.replace-unit(math.div(48, functions.strip-unit($emSize)), em);\n$relative49px : functions.replace-unit(math.div(49, functions.strip-unit($emSize)), em);\n$relative50px : functions.replace-unit(math.div(50, functions.strip-unit($emSize)), em);\n$relative51px : functions.replace-unit(math.div(51, functions.strip-unit($emSize)), em);\n$relative52px : functions.replace-unit(math.div(52, functions.strip-unit($emSize)), em);\n$relative53px : functions.replace-unit(math.div(53, functions.strip-unit($emSize)), em);\n$relative54px : functions.replace-unit(math.div(54, functions.strip-unit($emSize)), em);\n$relative55px : functions.replace-unit(math.div(55, functions.strip-unit($emSize)), em);\n$relative56px : functions.replace-unit(math.div(56, functions.strip-unit($emSize)), em);\n$relative57px : functions.replace-unit(math.div(57, functions.strip-unit($emSize)), em);\n$relative58px : functions.replace-unit(math.div(58, functions.strip-unit($emSize)), em);\n$relative59px : functions.replace-unit(math.div(59, functions.strip-unit($emSize)), em);\n$relative60px : functions.replace-unit(math.div(60, functions.strip-unit($emSize)), em);\n$relative61px : functions.replace-unit(math.div(61, functions.strip-unit($emSize)), em);\n$relative62px : functions.replace-unit(math.div(62, functions.strip-unit($emSize)), em);\n$relative63px : functions.replace-unit(math.div(63, functions.strip-unit($emSize)), em);\n$relative64px : functions.replace-unit(math.div(64, functions.strip-unit($emSize)), em);\n\n/* Columns */\n$oneWide : (math.div(1, $columnCount) * 100%);\n$twoWide : (math.div(2, $columnCount) * 100%);\n$threeWide : (math.div(3, $columnCount) * 100%);\n$fourWide : (math.div(4, $columnCount) * 100%);\n$fiveWide : (math.div(5, $columnCount) * 100%);\n$sixWide : (math.div(6, $columnCount) * 100%);\n$sevenWide : (math.div(7, $columnCount) * 100%);\n$eightWide : (math.div(8, $columnCount) * 100%);\n$nineWide : (math.div(9, $columnCount) * 100%);\n$tenWide : (math.div(10, $columnCount) * 100%);\n$elevenWide : (math.div(11, $columnCount) * 100%);\n$twelveWide : (math.div(12, $columnCount) * 100%);\n$thirteenWide : (math.div(13, $columnCount) * 100%);\n$fourteenWide : (math.div(14, $columnCount) * 100%);\n$fifteenWide : (math.div(15, $columnCount) * 100%);\n$sixteenWide : (math.div(16, $columnCount) * 100%);\n\n$oneColumn : math.div(1, 1) * 100%;\n$twoColumn : math.div(1, 2) * 100%;\n$threeColumn : math.div(1, 3) * 100%;\n$fourColumn : math.div(1, 4) * 100%;\n$fiveColumn : math.div(1, 5) * 100%;\n$sixColumn : math.div(1, 6) * 100%;\n$sevenColumn : math.div(1, 7) * 100%;\n$eightColumn : math.div(1, 8) * 100%;\n$nineColumn : math.div(1, 9) * 100%;\n$tenColumn : math.div(1, 10) * 100%;\n$elevenColumn : math.div(1, 11) * 100%;\n$twelveColumn : math.div(1, 12) * 100%;\n$thirteenColumn : math.div(1, 13) * 100%;\n$fourteenColumn : math.div(1, 14) * 100%;\n$fifteenColumn : math.div(1, 15) * 100%;\n$sixteenColumn : math.div(1, 16) * 100%;\n\n/*-------------------\n        Sizes\n--------------------*/\n\n/*\n  Sizes are all expressed in terms of 16px/em (default em)\n  This ensures these \"ratios\" remain constant despite changes in EM\n  $TODO make this based off base unit\n*/\n\n$miniSize : math.div(11, $baseUnit);\n$tinySize : math.div(12, $baseUnit);\n$smallSize : math.div(13, $baseUnit);\n$mediumSize : math.div(14, $baseUnit);\n$largeSize : math.div(16, $baseUnit);\n$bigSize : math.div(18, $baseUnit);\n$hugeSize : math.div(20, $baseUnit);\n$massiveSize : math.div(24, $baseUnit);\n\n$A1: 564px;\n$A1Small: 345px;\n$A1SmallHeight: 194px;\n$A1Height: 317px;\n$A2: 268px;\n$A2Small: $A1Small;\n$A2SmallHeight: 194px;\n$A2Height: 151px;\n$A3: 194px;\n$A3Small: 148px;\n$A3SmallHeight: 84px;\n$A3Height: 110px;\n$A4: 268px;\n$A4Small: $A1Small;\n$A4SmallHeight: 194px;\n$A4Height: 151px;\n$XL: 720px;\n$XLHeight: 405px;\n\n/*-------------------\n       Em Sizes\n--------------------*/\n\n/*\n  This rounds $size values to the closest pixel then expresses that value in (r)em.\n  This ensures all size values round to exact pixels\n*/\n$mini : functions.replace-unit(math.div(round(functions.strip-unit($miniSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$tiny : functions.replace-unit(math.div(round(functions.strip-unit($tinySize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$small : functions.replace-unit(math.div(round(functions.strip-unit($smallSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$medium : functions.replace-unit(math.div(round(functions.strip-unit($mediumSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$large : functions.replace-unit(math.div(round(functions.strip-unit($largeSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$big : functions.replace-unit(math.div(round(functions.strip-unit($bigSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$huge : functions.replace-unit(math.div(round(functions.strip-unit($hugeSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n$massive : functions.replace-unit(math.div(round(functions.strip-unit($massiveSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);\n\n// /* Relative units will get smaller as they are progressively nested */\n// /* em */\n$relativeMini : functions.replace-unit(math.div(round($miniSize * $emSize), $emSize), em);\n$relativeTiny : functions.replace-unit(math.div(round($tinySize * $emSize), $emSize), em);\n$relativeSmall : functions.replace-unit(math.div(round($smallSize * $emSize), $emSize), em);\n$relativeMedium : functions.replace-unit(math.div(round($mediumSize * $emSize), $emSize), em);\n$relativeLarge : functions.replace-unit(math.div(round($largeSize * $emSize), $emSize), em);\n$relativeBig : functions.replace-unit(math.div(round($bigSize * $emSize), $emSize), em);\n$relativeHuge : functions.replace-unit(math.div(round($hugeSize * $emSize), $emSize), em);\n$relativeMassive : functions.replace-unit(math.div(round($massiveSize * $emSize), $emSize), em);\n\n// /* Absolute units are the same size regardless of nesting */\n// /* rem */\n$absoluteMini : functions.replace-unit(math.div(round($miniSize * $emSize), $emSize), rem);\n$absoluteTiny : functions.replace-unit(math.div(round($tinySize * $emSize), $emSize), rem);\n$absoluteSmall : functions.replace-unit(math.div(round($smallSize * $emSize), $emSize), rem);\n$absoluteMedium : functions.replace-unit(math.div(round($mediumSize * $emSize), $emSize), rem);\n$absoluteLarge : functions.replace-unit(math.div(round($largeSize * $emSize), $emSize), rem);\n$absoluteBig : functions.replace-unit(math.div(round($bigSize * $emSize), $emSize), rem);\n$absoluteHuge : functions.replace-unit(math.div(round($hugeSize * $emSize), $emSize), rem);\n$absoluteMassive : functions.replace-unit(math.div(round($massiveSize * $emSize), $emSize), rem);\n\n\n/*-------------------\n    Border Radius\n--------------------*/\n\n/* See Power-user section below\n   for explanation of $px variables\n*/\n\n$relativeBorderRadius: $relative4px;\n$absoluteBorderRadius: $u4px;\n\n$defaultBorderRadius: $absoluteBorderRadius;\n\n/*-------------------\n    Brand Colors\n--------------------*/\n\n\n\n/*--------------\n  Page Heading\n---------------*/\n\n$headerFontWeight : $bold;\n$headerLineHeight : functions.replace-unit(math.div(18, 14), em);\n\n$h1 : 37px; //unit((28 / $baseUnit), rem);\n$h2 : 21px; //unit((24 / $baseUnit), rem);\n$h3 : 18px; //unit((18 / $baseUnit), rem);\n$h4 : 14px; //unit((15 / $baseUnit), rem);\n$h5 : 12px; //unit((14 / $baseUnit), rem);\n\n/*--------------\n   Form Input\n---------------*/\n\n/* This adjusts the default form input across all elements */\n$inputVerticalPadding : $relative11px;\n$inputHorizontalPadding : $relative14px;\n$inputPadding : $inputVerticalPadding $inputHorizontalPadding;\n\n/* Line Height Default For Inputs in Browser (Descenders are 17px at 14px base em) */\n$inputLineHeight: functions.replace-unit(math.div(17, 16), em);\n\n\n/*-------------------\n        Page\n--------------------*/\n$pageOverflowX : hidden;\n$lineHeight : 1.4285em;\n\n/*-------------------\n      Paragraph\n--------------------*/\n\n$paragraphMargin: 0 0 1.25em;\n$postParagraphMargin: 1.25em; // $TODO probably get rid of this\n$paragraphLineHeight: 160%; //$lineHeight;\n\n/*-------------------\n       Links\n--------------------*/\n\n$linkUnderline : underline;\n$linkHoverUnderline : underline;\n\n/*-------------------\n    Scroll Bars\n--------------------*/\n\n$useCustomScrollbars: true;\n$customScrollbarWidth: 10px;\n$customScrollbarHeight: 10px;\n$trackBorderRadius: 0px;\n$thumbBorderRadius: 5px;\n$thumbTransition: color 0.2s ease;\n\n\n/*-------------------\n       Loader\n--------------------*/\n\n$loaderSize : $relativeBig;\n$loaderSpeed : 0.6s;\n$loaderLineWidth : 0.2em;\n\n\n/*-------------------\n     Transitions\n--------------------*/\n\n$defaultDuration : 0.1s;\n$defaultEasing : ease;\n\n/*-------------------\n     Breakpoints\n--------------------*/\n\n$mobileBreakpoint : 320px;\n$iPhoneBreakpoint : 390px;\n$smallTabletBreakpoint : 666px;\n$tabletBreakpoint : 768px;\n$computerBreakpoint : 992px;\n$largeMonitorBreakpoint : 1200px;\n$widescreenMonitorBreakpoint : 1920px;\n\n/*-------------------\n       Accents\n--------------------*/\n\n/* Differentiating Neutrals */\n$subtleGradient: linear-gradient(transparent, colors.$transparentBlack);\n\n/* Differentiating Layers */\n$subtleShadow: 0px 1px 2px 0 colors.$borderColor;\n$floatingShadow: 0px 2px 4px 0px rgba(34, 36, 38, 0.12),\n0px 2px 10px 0px rgba(34, 36, 38, 0.15);\n\n/*******************************\n           Power-User\n*******************************/\n\n\n/*-------------------\n        Paths\n--------------------*/\n\n/* For source only. Modified in build for dist */\n// Old, need to be moved into webfont and changed to iconsPath\n$iconPath : '/src/images/icons';\n// $iconsPath is the new icon location\n$iconsPath : '/src/icons';\n$flagPath : '/src/images/flags';\n$imagePath : '/src/images/flags';\n$fontPath : '/src/fonts';\n\n\n/*-------------------\n       Icons\n--------------------*/\n\n/* Maximum Glyph Width of Icon */\n$iconWidth : 1.18em;\n\n\n\n/*-------------------\n      Borders\n--------------------*/\n\n$circularRadius : 500rem;\n\n/*-------------------\n    Derived Values\n--------------------*/\n\n/* Loaders Position Offset */\n$loaderOffset : -(math.div($loaderSize, 2));\n$loaderMargin : $loaderOffset 0em 0em $loaderOffset;\n\n/* Rendered Scrollbar Width */\n$scrollbarWidth: 17px;\n\n/* Maximum Single Character Glyph Width, aka Capital \"W\" */\n$glyphWidth: 1.1em;\n\n/* Used to match floats with text */\n$lineHeightOffset : math.div(($lineHeight - 1em), 2);\n$headerLineHeightOffset : math.div(($headerLineHeight - 1em), 2);\n\n/* Header Spacing */\n\n$headerTopMargin : 2rem - functions.strip-unit($headerLineHeightOffset);\n$headerBottomMargin : 1rem;\n$headerMargin : $headerTopMargin 0em $headerBottomMargin;\n\n/* Minimum Mobile Width */\n$pageMinWidth : 320px;\n\n\n/* Responsive */\n$mediumMobileScreen : $iPhoneBreakpoint;\n$largestMobileScreen : ($tabletBreakpoint - 1px);\n$largestTabletScreen : ($computerBreakpoint - 1px);\n$largestSmallMonitor : ($largeMonitorBreakpoint - 1px);\n$largestLargeMonitor : ($widescreenMonitorBreakpoint - 1px);\n\n\n/*******************************\n             States\n*******************************/\n\n/*-------------------\n      Disabled\n--------------------*/\n\n$disabledOpacity: 0.45;\n$disabledTextColor: rgba(40, 40, 40, 0.3);\n$invertedDisabledTextColor: rgba(225, 225, 225, 0.3);\n\n/*-------------------\n        Hover\n--------------------*/\n\n/*---  Shadows  ---*/\n$floatingShadowHover: 0px 2px 4px 0px rgba(34, 36, 38, 0.15),\n0px 2px 10px 0px rgba(34, 36, 38, 0.25);"],"sourceRoot":""}