{"version":3,"sources":["webpack:///./src/page/edit.js","webpack:///./src/page/save.js","webpack:///./src/page/index.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/classnames/index.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///external [\"wp\",\"i18n\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["SearchAndSelectObject","postType","route","value","setAttributes","isSelected","label","__","showInitialSuggestions","suggestionsQuery","type","subtype","forceIsEditingLink","onChange","e","postId","undefined","id","Promise","resolve","request","method","path","apiFetch","then","d","excerpt","rendered","title","content","url","settings","ObjectImage","image","onSelect","media","allowedTypes","render","open","className","onClick","src","alt","isSecondary","ObjectControls","attributes","enableReadMore","enableExcerpt","checked","ObjectPlaceholder","icon","edit","readMore","blockProps","useBlockProps","classnames","tagName","h","placeholder","keepPlaceholderOnFocus","allowedFormats","c","Content","save","name","metadata","description","category","keywords","registerBlockType","_typeof","obj","module","exports","Symbol","iterator","constructor","prototype","__esModule","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","key","call","join","default","window","__webpack_amd_options__","replace","concat","_defineProperty","defineProperty","enumerable","configurable","writable"],"mappings":";;;;;;;;;;;;;;;;;wOA0BMA,EAAwB,SAAC,GAMxB,IALHC,EAKE,EALFA,SACAC,EAIE,EAJFA,MACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,cAEE,IADFC,kBACE,SAaF,OACI,oBAAC,4BAAD,CACIC,MAAOC,aAAG,YAAD,OAAaN,IACtBE,MAAOA,EACPK,wBAAsB,EACtBC,iBAAkB,CAAEC,KAAM,OAAQC,QAASV,GAC3CW,mBAAoBP,EACpBQ,SAAU,SAAAC,GAnBC,IAAAC,OAoBHC,IAAcF,EAAEG,IApBbF,EAqBQD,EAAEG,GApBlB,IAAIC,SAAQ,SAAAC,GACf,IAAMC,EAAU,CACZC,OAAQ,MACRC,KAAK,UAAD,OAAYpB,EAAZ,YAAqBa,IAE7BQ,IAASH,GAASI,MAAK,SAAAC,GACnBN,EAAQM,EAAEC,QAAQC,iBAcGH,MAAK,SAAAE,GAClBtB,EAAc,CACVW,OAAQD,EAAEG,GACVW,MAAOd,EAAEc,MACTC,QAASH,EACTI,IAAKhB,EAAEgB,SAIf1B,EAAc,CAAE0B,IAAKhB,EAAEgB,OAG/BC,SAAU,MAKhBC,EAAc,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAO7B,EAAgC,EAAhCA,cAC1B,OAD0D,EAAjBC,iBACtBW,IAAciB,EAQ7B,oBAAC,mBAAD,KACI,oBAAC,cAAD,CACIC,SAAU,SAAAC,GAAK,OAAI/B,EAAc,CAAE6B,MAAOE,EAAML,OAChDM,aAAc,CAAC,SACfC,OAAQ,YAAe,IAAZC,EAAW,EAAXA,KACP,OACI,oBAAC,WAAD,UACKtB,IAAciB,GACX,2BAAKM,UAAU,QAAQC,QAASF,GAC5B,2BACIG,IAAKR,EACLS,IAAI,gCAIf1B,IAAciB,GACX,2BAAKM,UAAU,SACX,oBAAC,SAAD,CAAQI,aAAW,EAACH,QAASF,GAA7B,mBAvBxB,2BAAKC,UAAU,SACX,2BAAKE,IAAKR,EAAOS,IAAI,4BAmC/BE,EAAiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYzC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACzCU,EAAsD8B,EAAtD9B,OAAQa,EAA8CiB,EAA9CjB,MAAOE,EAAuCe,EAAvCf,IAAKgB,EAAkCD,EAAlCC,eAAgBC,EAAkBF,EAAlBE,cAG5C,OACI,oBAAC,WAAD,KACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWnB,MAAOrB,aAAG,cACjB,oBAAC,EAAD,CACIN,SAPH,OAQGC,MAPN,QAQMC,MAAO,CAAEyB,QAAOE,MAAKb,GAAIF,GACzBX,cAAeA,EACfC,WAAYA,KAGpB,oBAAC,YAAD,CAAWuB,MAAOrB,aAAG,kBACjB,+BACI,oBAAC,gBAAD,CACID,MAAOC,aAAG,kBACVyC,QAASD,EACTlC,SAAU,kBACNT,EAAc,CACV2C,eAAgBA,OAI5B,oBAAC,gBAAD,CACIzC,MAAOC,aAAG,oBACVyC,QAASF,EACTjC,SAAU,kBACNT,EAAc,CACV0C,gBAAiBA,YAW/CG,EAAoB,SAAC,GAA0C,IAAxC3C,EAAuC,EAAvCA,MAAOuC,EAAgC,EAAhCA,WAAYzC,EAAoB,EAApBA,cACpCW,EAAuB8B,EAAvB9B,OAAQa,EAAeiB,EAAfjB,MAAOE,EAAQe,EAARf,IAGvB,OACI,oBAAC,cAAD,CAAaoB,KAAK,gBAAgB5C,MAAOA,GACrC,oBAAC,EAAD,CACIL,SALK,OAMLC,MALE,QAMFC,MAAO,CAAEyB,QAAOE,MAAKb,GAAIF,GACzBX,cAAeA,MAuHhB+C,EAjHF,SAAC,GAA0D,IAAxDN,EAAuD,EAAvDA,WAAYN,EAA2C,EAA3CA,UAAWnC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAE9CuB,EAOAiB,EAPAjB,MACAE,EAMAe,EANAf,IACAD,EAKAgB,EALAhB,QACAI,EAIAY,EAJAZ,MACAa,EAGAD,EAHAC,eACAC,EAEAF,EAFAE,cACAK,EACAP,EADAO,SAKEC,EAAaC,wBAAc,CAC7Bf,UAAWgB,IAAWhB,EAAW,KAAM,YAAa,CAChD,cAAeQ,MAIvB,OACI,0BAASM,EACL,oBAAC,EAAD,CACIR,WAAYA,EACZzC,cAAeA,EACfC,WAAYA,SAEfW,IAAcc,GACX,oBAAC,EAAD,CACIxB,MAAM,gBACNuC,WAAYA,EACZzC,cAAeA,SAGtBY,IAAcc,GACX,oBAAC,WAAD,KACI,oBAAC,EAAD,CACIG,MAAOA,EACP7B,cAAeA,EACfC,WAAYA,IAEhB,2BAAKkC,UAAU,WACVlC,GACG,oBAAC,WAAD,KACI,oBAAC,WAAD,CACImD,QAAQ,MACRrD,MAAOyB,EACPf,SAAU,SAAA4C,GAAC,OAAIrD,EAAc,CAAEwB,MAAO6B,KACtCC,YAAanD,aAAG,cAChBoD,wBAAsB,EACtBC,eAAgB,CAAC,UACjBrB,UAAU,YAEb,IAASQ,GACN,oBAAC,WAAD,CACIS,QAAQ,MACRrD,MAAO0B,EACPhB,SAAU,SAAAgD,GAAC,OACPzD,EAAc,CAAEyB,QAASgC,KAE7BH,YAAanD,aAAG,mBAChBoD,wBAAsB,EACtBpB,UAAU,4BAGjB,IAASO,GACN,2BAAKP,UAAU,SACX,oBAAC,WAAD,CACIiB,QAAQ,MACRrD,MAAOiD,EACPvC,SAAU,SAAAgD,GAAC,OACPzD,EAAc,CAAEgD,SAAUS,KAE9BH,YAAanD,aAAG,gBAChBoD,wBAAsB,EACtBpB,UAAU,YACVqB,eAAgB,CAAC,kBAMnCvD,GACE,oBAAC,WAAD,KACI,oBAAC,WAASyD,QAAV,CACIN,QAAQ,MACRrD,MAAOyB,EACPW,UAAU,YAEb,IAASQ,GACN,oBAAC,WAASe,QAAV,CACIN,QAAQ,MACRrD,MAAO0B,EACPU,UAAU,4BAGjB,IAASO,GACN,2BAAKP,UAAU,SACX,oBAAC,WAASuB,QAAV,CACIN,QAAQ,MACRrD,MAAOiD,EACPb,UAAU,oBCpQvCwB,EAJF,WACT,OAAO,oBAAC,cAAYD,QAAb,O,ykBCSX,IAAQE,EAASC,EAATD,KAEFjC,EAAW,CACbH,MAAOrB,aAAG,QACV2D,YAAa,+CACbC,SAAU,SACVC,SAAU,CAAC7D,aAAG,SACd4C,OACAY,QAGJM,4BAAkBL,EAAD,OAAYC,GAAalC,K,iBC1B1C,SAASuC,EAAQC,GAGf,OAAQC,EAAOC,QAAUH,EAAU,mBAAqBI,QAAU,iBAAmBA,OAAOC,SAAW,SAAUJ,GAC/G,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBG,QAAUH,EAAIK,cAAgBF,QAAUH,IAAQG,OAAOG,UAAY,gBAAkBN,GACvHC,EAAOC,QAAQK,YAAa,EAAMN,EAAOC,QAAiB,QAAID,EAAOC,QAAUH,EAAQC,GAG5FC,EAAOC,QAAUH,EAASE,EAAOC,QAAQK,YAAa,EAAMN,EAAOC,QAAiB,QAAID,EAAOC,S,mBCV/F,QAAY,EAAQ;;;;;GAIE,WAAY,aAAa,IAAIM,EAAO,GAAGC,eAAe,SAASC,IAA4B,IAAf,IAAIC,EAAQ,GAAWC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAIF,UAAUD,GAAG,GAAIG,EAAJ,CAAiB,IAAIC,EAAQjB,EAAQgB,GAAK,GAAa,WAAVC,GAA8B,WAAVA,EAAoBL,EAAQM,KAAKF,QAAW,GAAGG,MAAMC,QAAQJ,IAAM,GAAGA,EAAID,OAAO,CAAC,IAAIM,EAAMV,EAAWW,MAAM,KAAKN,GAAQK,GAAOT,EAAQM,KAAKG,SAAe,GAAa,WAAVJ,EAAoB,GAAGD,EAAIO,WAAWC,OAAOjB,UAAUgB,SAAU,IAAI,IAAIE,KAAOT,EAAQP,EAAOiB,KAAKV,EAAIS,IAAMT,EAAIS,IAAMb,EAAQM,KAAKO,QAAab,EAAQM,KAAKF,EAAIO,aAAe,OAAOX,EAAQe,KAAK,KAAsCzB,EAAOC,SAASQ,EAAWiB,QAAQjB,EAAWT,EAAOC,QAAQQ,GAAsE,WAAtBX,EAAQ,QAAwB,WAC/sB,KAA/B,aAAY,OAAOW,GAAY,QAAjC,OAAiC,aAAQkB,OAAOlB,WAAWA,EADzD,I,kBCJtB,YACAT,EAAOC,QAAU2B,I,+BCDH5B,EAAOC,QAAU0B,OAAW,GAAQ,M,mBCSlC,IAAI7E,EAAK,uBAA6C+E,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOhF,K,gBCVpCkD,EAAOC,QAAU0B,OAAW,GAAc,Y,iBCA1C3B,EAAOC,QAAU0B,OAAW,GAAY,U,gBCAxC3B,EAAOC,QAAU0B,OAAW,GAAW,S,obCAvC3B,EAAOC,QAAU0B,OAAW,GAAe,a,gBCA3C3B,EAAOC,QAAU0B,OAAW,GAAU,Q,+BCArC,SAASI,EAAgBhC,EAAKwB,EAAK5F,GAYhD,OAXI4F,KAAOxB,EACTuB,OAAOU,eAAejC,EAAKwB,EAAK,CAC9B5F,MAAOA,EACPsG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZpC,EAAIwB,GAAO5F,EAGNoE,EAZT,mC","file":"blocks/page-caf0b588.js","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport {\n    InspectorControls,\n    __experimentalLinkControl as LinkControl,\n    MediaUpload,\n    MediaUploadCheck,\n    useBlockProps,\n    RichText,\n} from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport {\n    Button,\n    Placeholder,\n    PanelBody,\n    ToggleControl,\n} from '@wordpress/components';\n\nconst SearchAndSelectObject = ({\n    postType,\n    route,\n    value,\n    setAttributes,\n    isSelected = false,\n}) => {\n    const getExcerpt = postId => {\n        return new Promise(resolve => {\n            const request = {\n                method: 'GET',\n                path: `/wp/v2/${route}/${postId}`,\n            };\n            apiFetch(request).then(d => {\n                resolve(d.excerpt.rendered);\n            });\n        });\n    };\n\n    return (\n        <LinkControl\n            label={__(`Select a ${postType}`)}\n            value={value}\n            showInitialSuggestions\n            suggestionsQuery={{ type: 'post', subtype: postType }}\n            forceIsEditingLink={isSelected}\n            onChange={e => {\n                if (undefined !== e.id) {\n                    getExcerpt(e.id).then(excerpt => {\n                        setAttributes({\n                            postId: e.id,\n                            title: e.title,\n                            content: excerpt,\n                            url: e.url,\n                        });\n                    });\n                } else {\n                    setAttributes({ url: e.url });\n                }\n            }}\n            settings={[]}\n        />\n    );\n};\n\nconst ObjectImage = ({ image, setAttributes, isSelected }) => {\n    if (!isSelected && undefined !== image) {\n        return (\n            <div className=\"image\">\n                <img src={image} alt=\"Featured art for page\" />\n            </div>\n        );\n    }\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={media => setAttributes({ image: media.url })}\n                allowedTypes={['image']}\n                render={({ open }) => {\n                    return (\n                        <Fragment>\n                            {undefined !== image && (\n                                <div className=\"image\" onClick={open}>\n                                    <img\n                                        src={image}\n                                        alt=\"Featured art for page\"\n                                    />\n                                </div>\n                            )}\n                            {undefined === image && (\n                                <div className=\"image\">\n                                    <Button isSecondary onClick={open}>\n                                        Add Image\n                                    </Button>\n                                </div>\n                            )}\n                        </Fragment>\n                    );\n                }}\n            />\n        </MediaUploadCheck>\n    );\n};\n\nconst ObjectControls = ({ attributes, setAttributes, isSelected }) => {\n    const { postId, title, url, enableReadMore, enableExcerpt } = attributes;\n    const postType = 'page';\n    const route = 'pages';\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Page Link')}>\n                    <SearchAndSelectObject\n                        postType={postType}\n                        route={route}\n                        value={{ title, url, id: postId }}\n                        setAttributes={setAttributes}\n                        isSelected={isSelected}\n                    />\n                </PanelBody>\n                <PanelBody title={__('Page Settings')}>\n                    <div>\n                        <ToggleControl\n                            label={__(`Enable Excerpt`)}\n                            checked={enableExcerpt}\n                            onChange={() =>\n                                setAttributes({\n                                    enableExcerpt: !enableExcerpt,\n                                })\n                            }\n                        />\n                        <ToggleControl\n                            label={__(`Enable Read More`)}\n                            checked={enableReadMore}\n                            onChange={() =>\n                                setAttributes({\n                                    enableReadMore: !enableReadMore,\n                                })\n                            }\n                        />\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n        </Fragment>\n    );\n};\n\nconst ObjectPlaceholder = ({ label, attributes, setAttributes }) => {\n    const { postId, title, url } = attributes;\n    const postType = 'page';\n    const route = 'pages';\n    return (\n        <Placeholder icon=\"wordpress-alt\" label={label}>\n            <SearchAndSelectObject\n                postType={postType}\n                route={route}\n                value={{ title, url, id: postId }}\n                setAttributes={setAttributes}\n            />\n        </Placeholder>\n    );\n};\n\nconst edit = ({ attributes, className, setAttributes, isSelected }) => {\n    const {\n        title,\n        url,\n        content,\n        image,\n        enableReadMore,\n        enableExcerpt,\n        readMore,\n    } = attributes;\n\n    // go fetch page information...\n\n    const blockProps = useBlockProps({\n        className: classnames(className, 'ui', 'page-item', {\n            'has-excerpt': enableExcerpt,\n        }),\n    });\n\n    return (\n        <div {...blockProps}>\n            <ObjectControls\n                attributes={attributes}\n                setAttributes={setAttributes}\n                isSelected={isSelected}\n            />\n            {undefined === url && (\n                <ObjectPlaceholder\n                    label=\"Select a page\"\n                    attributes={attributes}\n                    setAttributes={setAttributes}\n                />\n            )}\n            {undefined !== url && (\n                <Fragment>\n                    <ObjectImage\n                        image={image}\n                        setAttributes={setAttributes}\n                        isSelected={isSelected}\n                    />\n                    <div className=\"content\">\n                        {isSelected && (\n                            <Fragment>\n                                <RichText\n                                    tagName=\"div\"\n                                    value={title}\n                                    onChange={h => setAttributes({ title: h })}\n                                    placeholder={__(`Page Title`)}\n                                    keepPlaceholderOnFocus\n                                    allowedFormats={['italic']}\n                                    className=\"header\"\n                                />\n                                {true === enableExcerpt && (\n                                    <RichText\n                                        tagName=\"div\"\n                                        value={content}\n                                        onChange={c =>\n                                            setAttributes({ content: c })\n                                        }\n                                        placeholder={__(`Page excerpt...`)}\n                                        keepPlaceholderOnFocus\n                                        className=\"description sans-serif\"\n                                    />\n                                )}\n                                {true === enableReadMore && (\n                                    <div className=\"extra\">\n                                        <RichText\n                                            tagName=\"div\"\n                                            value={readMore}\n                                            onChange={c =>\n                                                setAttributes({ readMore: c })\n                                            }\n                                            placeholder={__(`Read More...`)}\n                                            keepPlaceholderOnFocus\n                                            className=\"read-more\"\n                                            allowedFormats={['core/link']}\n                                        />\n                                    </div>\n                                )}\n                            </Fragment>\n                        )}\n                        {!isSelected && (\n                            <Fragment>\n                                <RichText.Content\n                                    tagName=\"div\"\n                                    value={title}\n                                    className=\"header\"\n                                />\n                                {true === enableExcerpt && (\n                                    <RichText.Content\n                                        tagName=\"div\"\n                                        value={content}\n                                        className=\"description sans-serif\"\n                                    />\n                                )}\n                                {true === enableReadMore && (\n                                    <div className=\"extra\">\n                                        <RichText.Content\n                                            tagName=\"div\"\n                                            value={readMore}\n                                            className=\"read-more\"\n                                        />\n                                    </div>\n                                )}\n                            </Fragment>\n                        )}\n                    </div>\n                </Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = () => {\n    return <InnerBlocks.Content />;\n};\n\nexport default save;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\nimport './style.scss';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Page'),\n    description: 'Insert a stylized card that links to a apge.',\n    category: 'layout',\n    keywords: [__('Page')],\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof=require(\"@babel/runtime/helpers/typeof\");/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/ /* global define */(function(){'use strict';var hasOwn={}.hasOwnProperty;function classNames(){var classes=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!arg)continue;var argType=_typeof(arg);if(argType==='string'||argType==='number'){classes.push(arg);}else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);if(inner){classes.push(inner);}}}else if(argType==='object'){if(arg.toString===Object.prototype.toString){for(var key in arg){if(hasOwn.call(arg,key)&&arg[key]){classes.push(key);}}}else{classes.push(arg.toString());}}}return classes.join(' ');}if(typeof module!=='undefined'&&module.exports){classNames.default=classNames;module.exports=classNames;}else if(typeof define==='function'&&_typeof(define.amd)==='object'&&define.amd){// register as 'classnames', consistent with npm package name\ndefine('classnames',[],function(){return classNames;});}else{window.classNames=classNames;}})();","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}