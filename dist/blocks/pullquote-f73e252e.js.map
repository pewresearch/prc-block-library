{"version":3,"sources":["webpack:///./src/pullquote/index.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external [\"wp\",\"hooks\"]"],"names":["addFilter","settings","name","supports","Object","assign","align","typography","fontSize","lineHeight","fontAppearance","path","replace","window","concat","module","exports"],"mappings":";;;;;;;;;;;;;;;;;2JAkBAA,oBACC,2BACA,kBACA,SAACC,GAmBA,MAjBI,mBAAqBA,EAASC,WAAqC,IAAtBD,EAASE,WACzDF,EAASE,SAAWC,OAAOC,OAAQJ,EAASE,SAAU,CACrDG,MAAO,CAAE,OAAQ,QAAS,QAC1BC,WAAY,CACXC,UAAU,EACVC,YAAY,EACZ,yBAA2B,EAC3B,0BAA4B,EAC5B,6BAA+B,EAC/B,6BAA+B,EAC/B,8BAAiC,CAChCD,UAAU,EACVE,gBAAgB,OAKbT,M,mBC/BO,IAAIU,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,8DCVpCI,EAAOC,QAAUH,OAAW,GAAS,Q","file":"blocks/pullquote-f73e252e.js","sourcesContent":["/**\n * WordPress Dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal Depdendencies\n */\nimport './style.scss';\n\n/**\n * Change the value attribute to have a default value that includes fancy quotes.\n *\n * @param {Object} settings Settings for the block.\n *\n * @return {Object} settings Modified settings.\n */\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/pullquote',\n\t(settings) => {\n\t\t//check if object exists for old Gutenberg version compatibility\n\t\tif( 'core/pullquote' === settings.name && typeof settings.supports !== 'undefined' ){\n\t\t\tsettings.supports = Object.assign( settings.supports, {\n\t\t\t\talign: [ 'left', 'right', 'wide' ],\n\t\t\t\ttypography: {\n\t\t\t\t\tfontSize: false,\n\t\t\t\t\tlineHeight: false,\n\t\t\t\t\t\"__experimentalFontStyle\": false,\n\t\t\t\t\t\"__experimentalFontWeight\": false,\n\t\t\t\t\t\"__experimentalLetterSpacing\": false,\n\t\t\t\t\t\"__experimentalTextTransform\": false,\n\t\t\t\t\t\"__experimentalDefaultControls\": {\n\t\t\t\t\t\tfontSize: false,\n\t\t\t\t\t\tfontAppearance: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn settings;\n\t}\n);\n","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","(function() { module.exports = window[\"wp\"][\"hooks\"]; }());"],"sourceRoot":""}