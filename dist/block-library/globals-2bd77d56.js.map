{"version":3,"sources":["webpack:///external \"jQuery\"","webpack:///external \"wp.domReady\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/_shared/components/collapsible-list/frontend.js","webpack:///./src/_shared/globally-available/index.js"],"names":["module","exports","jQuery","wp","domReady","path","replace","window","concat","collapsibleListHandler","isViewportMatch","data","select","lists","document","querySelectorAll","undefined","list","content","querySelector","title","linkCheck","titleLink","getAttribute","innerHTML","newLink","createElement","setAttribute","classList","add","prepend","remove","addEventListener","e","stopPropagation","display","style","caret","transition","contains","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;uIAAAA,EAAOC,QAAUC,Q,cCAjBF,EAAOC,QAAUE,GAAGC,U,kECSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,yiCCLlD,IAwEeI,EAxEgB,WAI3B,IAFgBC,EADYP,GAAGQ,KAAKC,OAAO,iBAAnCF,iBACwB,YAEhC,CAKA,IACMG,EAAQC,SAASC,iBAAiB,yBACxC,QAAIC,IAAcH,EAAlB,CAXiC,UAcdA,GAdc,yBActBI,EAdsB,QAevBC,EAAUD,EAAKE,cAAc,YAC7BC,EAAQH,EAAKE,cAAc,UACjC,GAAIH,MAAcI,EACd,iBAGJ,IAAMC,EAAYD,EAAMD,cAAc,KACtC,GAAI,OAASE,EAAW,CACpB,IAAMC,EAAYD,EAAUE,aAAa,QAC9BH,EAAMD,cAAc,MAE5BK,UAAYH,EAAUG,UAGzB,IAAMC,EAAUX,SAASY,cAAc,KACvCD,EAAQD,UAAR,mBAAgCH,EAAUG,UAA1C,iBACAC,EAAQE,aAAa,OAAQL,GAC7BG,EAAQG,UAAUC,IAAI,cACtBX,EAAQY,QAAQL,GAEhBJ,EAAUU,SAGdX,EAAMY,iBAAiB,SAAS,SAASC,GACrCA,EAAEC,kBADsC,IAEhCC,EAAYjB,EAAQkB,MAApBD,QACFE,EAAQjB,EAAMD,cAAc,eACnB,UAAYgB,GAcvBjC,IAAOgB,GAASoB,WAAhB,UA/CM,OA+CN,QACID,EAAMT,UAAUW,SAAS,WACzBF,EAAMT,UAAUC,IAAI,QACpBQ,EAAMT,UAAUG,OAAO,YAX3B7B,IAAOgB,GAASoB,WAAhB,UAvCM,OAuCN,UACID,EAAMT,UAAUW,SAAS,UACzBF,EAAMT,UAAUC,IAAI,SACpBQ,EAAMT,UAAUG,OAAO,cArCvC,2BAA0B,IAdO,kCCFrC3B,KAAS,WACLoC,WAAW/B,EAAwB,U","file":"block-library/globals-2bd77d56.js","sourcesContent":["module.exports = jQuery;","module.exports = wp.domReady;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/* eslint-disable no-continue */\n/* eslint-disable no-restricted-syntax */\nimport jQuery from 'jquery';\n// import { select } from '@wordpress/data';\n\nconst collapsibleListHandler = () => {\n    const { isViewportMatch } = wp.data.select('core/viewport');\n    const isSmall = isViewportMatch('< medium');\n\n    if (!isSmall) {\n        return;\n    }\n    // If viewport is greater than mobile threshold disable\n\n    const animation = 'fade';\n    const lists = document.querySelectorAll('.prc-collapsible-list');\n    if (undefined === lists) {\n        return;\n    }\n    for (const list of lists) {\n        const content = list.querySelector('.content');\n        const title = list.querySelector('.title');\n        if (undefined === title || null === title) {\n            continue;\n        }\n\n        const linkCheck = title.querySelector('a');\n        if (null !== linkCheck) {\n            const titleLink = linkCheck.getAttribute('href');\n            const h2 = title.querySelector('h2');\n            // Replace The Title\n            h2.innerHTML = linkCheck.innerHTML;\n\n            // Create New Link\n            const newLink = document.createElement('a');\n            newLink.innerHTML = `View all ${linkCheck.innerHTML} publications`;\n            newLink.setAttribute('href', titleLink);\n            newLink.classList.add('sans-serif');\n            content.prepend(newLink);\n\n            linkCheck.remove();\n        }\n\n        title.addEventListener('click', function(e) {\n            e.stopPropagation(); // Short-circuit any links\n            const { display } = content.style;\n            const caret = title.querySelector('.icon.caret');\n            const isOpen = 'block' === display;\n            const forceOpen = () => {\n                content.style = 'block';\n            };\n            const open = () => {\n                // Closed State - Force Open\n                jQuery(content).transition(`${animation} down`);\n                if (caret.classList.contains('down')) {\n                    caret.classList.add('right');\n                    caret.classList.remove('down');\n                }\n            };\n            const close = () => {\n                // Open State - Force Closed\n                jQuery(content).transition(`${animation} up`);\n                if (caret.classList.contains('right')) {\n                    caret.classList.add('down');\n                    caret.classList.remove('right');\n                }\n            };\n\n            if (!isOpen) {\n                open();\n            } else {\n                close();\n            }\n        });\n    }\n};\n\nexport default collapsibleListHandler;\n","import domReady from '@wordpress/dom-ready';\nimport collapsibleListHandler from '../components/collapsible-list/frontend';\n\ndomReady(() => {\n    setTimeout(collapsibleListHandler, 1000);\n});\n"],"sourceRoot":""}