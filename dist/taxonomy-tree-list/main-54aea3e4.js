/*!
 * 
 * prcBlocksLibrary
 * 
 * @author Seth Rubenstein
 * @version 0.1.0
 * @link UNLICENSED
 * @license UNLICENSED
 * 
 * Copyright (c) 2020 Seth Rubenstein
 * 
 * This software is released under the UNLICENSED License
 * https://opensource.org/licenses/UNLICENSED
 * 
 * Compiled with the help of https://wpack.io
 * A zero setup Webpack Bundler Script for WordPress
 */
(window["wpackioprcBlocksLibrarytaxonomy-tree-listJsonp"]=window["wpackioprcBlocksLibrarytaxonomy-tree-listJsonp"]||[]).push([[2],[function(e,t){e.exports=wp.blockEditor},function(e,t){e.exports=wp.element},function(e,t){e.exports=wp.i18n},function(e,t,a){"use strict";var r="prcBlocksLibrarydist".replace(/[^a-zA-Z0-9_-]/g,"");a.p=window["__wpackIo".concat(r)]},function(e,t){e.exports=wp.blocks},,function(e,t,a){a(3),e.exports=a(10)},function(e,t,a){},,,function(e,t,a){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,r=new Array(t);a<t;a++)r[a]=e[a];return r}a.r(t);a(7);var l,n=a(4),i=a(2),c=a(1),o=a(0),s=function(e){var t=e.attributes,a=e.isSelected,r=e.setAttributes,l=t.subheading,n=t.list,i=t.moreEnabled,s=t.moreList;return React.createElement(c.Fragment,null,React.createElement("ul",{className:"ui relaxed tree list"},React.createElement("li",{className:"item"},React.createElement(o.RichText,{tagName:"div",className:"header",value:l,onChange:function(e){return r({subheading:e})},placeholder:"Key Topics",keepPlaceholderOnFocus:!0})),React.createElement("li",{className:"item"},React.createElement(o.RichText,{tagName:"ul",className:"list visible-list",value:n,onChange:function(e){return r({list:e})},multiline:"li",placeholder:"Item",keepPlaceholderOnFocus:!0})),!0===a&&React.createElement("li",{className:"item"},React.createElement("div",{onClick:function(e){e.stopPropagation(),r({moreEnabled:!i})},className:"read-more"},"View More"," ",!0===i&&React.createElement("span",null,"(Enabled)")," ",!1===i&&React.createElement("span",null,"(Disabled)")),!0===i&&React.createElement(o.RichText,{tagName:"ul",className:"list hidden-list",value:s,onChange:function(e){return r({moreList:e})},multiline:"li",placeholder:"Hidden Item",keepPlaceholderOnFocus:!0,style:{display:"block"}})),!1===a&&!0===i&&React.createElement("li",{className:"item"},React.createElement("div",{className:"read-more"},"View More"))))},m=function(e){var t=e.attributes,a=t.subheading,r=t.list,l=t.moreEnabled,n=t.moreList;return React.createElement(c.Fragment,null,React.createElement("ul",{className:"ui relaxed tree list"},""!==a&&React.createElement(c.Fragment,null,React.createElement("li",{className:"item"},React.createElement(o.RichText.Content,{tagName:"div",className:"header",value:a}))),React.createElement("li",{className:"item"},React.createElement(o.RichText.Content,{tagName:"ul",className:"list visible-list",value:r})),!0===l&&React.createElement("li",{className:"item"},React.createElement("div",{className:"read-more"},"View More"),React.createElement(o.RichText.Content,{tagName:"ul",className:"list hidden-list",value:n}))))},u=["prc-block/taxonomy-tree-list",{title:Object(i.__)("Tree List (Inner)"),description:"A tree list that can be expanded.",category:"layout",icon:"networking",keywords:[Object(i.__)("Taxonomy Tree"),Object(i.__)("Taxonomies"),Object(i.__)("Tree")],supports:{html:!1,align:!1},attributes:{subheading:{type:"string",source:"html",selector:".header",default:""},list:{type:"string",multiline:"li",source:"html",selector:".visible-list",default:""},moreEnabled:{type:"boolean"},moreList:{type:"string",multiline:"li",source:"html",selector:".hidden-list",default:""}},parent:["prc-block/taxonomy-tree"],edit:s,save:m}];n.registerBlockType.apply(void 0,function(e){if(Array.isArray(e))return r(e)}(l=u)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(l)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?r(e,t):void 0}}(l)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}],[[6,0]]]);
//# sourceMappingURL=main-54aea3e4.js.map