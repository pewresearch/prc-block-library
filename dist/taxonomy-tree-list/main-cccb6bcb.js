/*!
 * 
 * prcBlocksLibrary
 * 
 * @author Seth Rubenstein
 * @version 0.1.0
 * @link UNLICENSED
 * @license UNLICENSED
 * 
 * Copyright (c) 2020 Seth Rubenstein
 * 
 * This software is released under the UNLICENSED License
 * https://opensource.org/licenses/UNLICENSED
 * 
 * Compiled with the help of https://wpack.io
 * A zero setup Webpack Bundler Script for WordPress
 */
(window["wpackioprcBlocksLibrarytaxonomy-tree-listJsonp"]=window["wpackioprcBlocksLibrarytaxonomy-tree-listJsonp"]||[]).push([[2],[function(e,t){e.exports=wp.blockEditor},function(e,t){e.exports=wp.element},function(e,t){e.exports=wp.i18n},function(e,t,a){"use strict";var n="prcBlocksLibrarydist".replace(/[^a-zA-Z0-9_-]/g,"");a.p=window["__wpackIo".concat(n)]},function(e,t){e.exports=wp.blocks},function(e,t,a){a(3),e.exports=a(10)},function(e,t,a){},function(e,t){e.exports=wp.components},,,function(e,t,a){"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,n=new Array(t);a<t;a++)n[a]=e[a];return n}a.r(t);a(6);var r,l=a(4),c=a(2),i=a(1),o=a(0),s=(a(7),function(e){var t=e.attributes,a=e.isSelected,n=e.setAttributes,r=t.subheading,l=t.list,c=t.moreEnabled,s=t.moreList;return React.createElement(i.Fragment,null,React.createElement("ul",{className:"ui relaxed tree list"},React.createElement(i.Fragment,null,!0===a&&React.createElement("li",{className:"item"},React.createElement(o.RichText,{tagName:"div",className:"header",value:r,onChange:function(e){return n({subheading:e})},placeholder:"Key Topics",formattingControls:["link"],keepPlaceholderOnFocus:!0})),!1===a&&""!==r&&React.createElement("li",{className:"item"},React.createElement(o.RichText,{tagName:"div",className:"header",value:r,onChange:function(e){return n({subheading:e})},placeholder:"Key Topics",keepPlaceholderOnFocus:!0}))),React.createElement("li",{className:"item"},React.createElement(o.RichText,{tagName:"ul",className:"list visible-list",value:l,onChange:function(e){return n({list:e})},multiline:"li",placeholder:"Item",keepPlaceholderOnFocus:!0})),!0===a&&React.createElement("li",{className:"item"},React.createElement("div",{onClick:function(e){e.stopPropagation(),n({moreEnabled:!c})},className:"read-more"},"View More"," ",!0===c&&React.createElement("span",null,"(Enabled)")," ",!1===c&&React.createElement("span",null,"(Disabled)")),!0===c&&React.createElement(o.RichText,{tagName:"ul",className:"list hidden-list",value:s,onChange:function(e){return n({moreList:e})},multiline:"li",placeholder:"Hidden Item",keepPlaceholderOnFocus:!0})),!1===a&&!0===c&&React.createElement("li",{className:"item"},React.createElement("div",{className:"read-more"},"View More"))))}),m=function(e){var t=e.attributes,a=t.subheading,n=t.list,r=t.moreEnabled,l=t.moreList;return React.createElement(i.Fragment,null,React.createElement("ul",{className:"ui relaxed tree list"},""!==a&&React.createElement(i.Fragment,null,React.createElement("li",{className:"item"},React.createElement(o.RichText.Content,{tagName:"div",className:"header",value:a}))),React.createElement("li",{className:"item"},React.createElement(o.RichText.Content,{tagName:"ul",className:"list visible-list",value:n})),!0===r&&React.createElement("li",{className:"item"},React.createElement("div",{className:"read-more"},"View More"),React.createElement(o.RichText.Content,{tagName:"ul",className:"list hidden-list",value:l}))))},u=["prc-block/taxonomy-tree-list",{title:Object(c.__)("Tree List (Inner)"),description:"A tree list that can be expanded.",category:"layout",icon:"networking",keywords:[Object(c.__)("Taxonomy Tree"),Object(c.__)("Taxonomies"),Object(c.__)("Tree")],supports:{html:!1,align:!1},attributes:{subheading:{type:"string",source:"html",selector:".header",default:""},list:{type:"string",multiline:"li",source:"html",selector:".visible-list",default:""},moreEnabled:{type:"boolean"},moreList:{type:"string",multiline:"li",source:"html",selector:".hidden-list",default:""}},parent:["prc-block/taxonomy-tree"],edit:s,save:m}];l.registerBlockType.apply(void 0,function(e){if(Array.isArray(e))return n(e)}(r=u)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?n(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())}],[[5,0]]]);
//# sourceMappingURL=main-cccb6bcb.js.map