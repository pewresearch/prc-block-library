{"version":3,"sources":["webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.element\"","webpack:///external \"wp.i18n\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///external \"wp.blocks\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/taxonomy-tree-list/edit.js","webpack:///./src/taxonomy-tree-list/save.js","webpack:///./src/taxonomy-tree-list/settings.js","webpack:///./src/taxonomy-tree-list/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["module","exports","wp","blockEditor","element","i18n","path","replace","window","concat","blocks","_arrayLikeToArray","arr","len","length","i","arr2","Array","edit","attributes","isSelected","setAttributes","subheading","list","moreEnabled","moreList","className","tagName","value","onChange","h","placeholder","keepPlaceholderOnFocus","l","multiline","onClick","e","stopPropagation","style","display","save","Content","settings","title","__","description","category","icon","keywords","supports","html","align","type","source","selector","default","parent","registerBlockType","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError"],"mappings":"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","file":"taxonomy-tree-list/main-a5d05bb9.js","sourcesContent":["module.exports = wp.blockEditor;","module.exports = wp.element;","module.exports = wp.i18n;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","module.exports = wp.blocks;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nconst edit = ({ attributes, isSelected, setAttributes }) => {\n    const { subheading, list, moreEnabled, moreList } = attributes;\n\n    return (\n        <Fragment>\n            <ul className=\"ui relaxed tree list\">\n                <li className=\"item\">\n                    <RichText\n                        tagName=\"div\"\n                        className=\"header\"\n                        value={subheading}\n                        onChange={h => setAttributes({ subheading: h })}\n                        placeholder=\"Key Topics\"\n                        keepPlaceholderOnFocus\n                    />\n                </li>\n                <li className=\"item\">\n                    <RichText\n                        tagName=\"ul\"\n                        className=\"list visible-list\"\n                        value={list}\n                        onChange={l => setAttributes({ list: l })}\n                        multiline=\"li\"\n                        placeholder=\"Item\"\n                        keepPlaceholderOnFocus\n                    />\n                </li>\n                {true === isSelected && (\n                    <li className=\"item\">\n                        <div\n                            onClick={e => {\n                                e.stopPropagation();\n                                setAttributes({ moreEnabled: !moreEnabled });\n                            }}\n                            className=\"read-more\"\n                        >\n                            View More{' '}\n                            {true === moreEnabled && <span>(Enabled)</span>}{' '}\n                            {false === moreEnabled && <span>(Disabled)</span>}\n                        </div>\n                        {true === moreEnabled && (\n                            <RichText\n                                tagName=\"ul\"\n                                className=\"list hidden-list\"\n                                value={moreList}\n                                onChange={l => setAttributes({ moreList: l })}\n                                multiline=\"li\"\n                                placeholder=\"Hidden Item\"\n                                keepPlaceholderOnFocus\n                                style={{ display: 'block' }}\n                            />\n                        )}\n                    </li>\n                )}\n                {/* Pseudo Save display mode when not actively editing. */}\n                {false === isSelected && true === moreEnabled && (\n                    <li className=\"item\">\n                        <div className=\"read-more\">View More</div>\n                    </li>\n                )}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","import { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nconst save = ({ attributes }) => {\n    const { subheading, list, moreEnabled, moreList } = attributes;\n    return (\n        <Fragment>\n            <ul className=\"ui relaxed tree list\">\n                {'' !== subheading && (\n                    <Fragment>\n                        <li className=\"item\">\n                            <RichText.Content\n                                tagName=\"div\"\n                                className=\"header\"\n                                value={subheading}\n                            />\n                        </li>\n                    </Fragment>\n                )}\n                <li className=\"item\">\n                    <RichText.Content\n                        tagName=\"ul\"\n                        className=\"list visible-list\"\n                        value={list}\n                    />\n                </li>\n                {true === moreEnabled && (\n                    <li className=\"item\">\n                        <div className=\"read-more\">View More</div>\n                        <RichText.Content\n                            tagName=\"ul\"\n                            className=\"list hidden-list\"\n                            value={moreList}\n                        />\n                    </li>\n                )}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/taxonomy-tree-list',\n    {\n        title: __('Tree List (Inner)'),\n        description: 'A tree list that can be expanded.',\n        category: 'layout',\n        icon: 'networking',\n        keywords: [__('Taxonomy Tree'), __('Taxonomies'), __('Tree')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            subheading: {\n                type: 'string',\n                source: 'html',\n                selector: '.header',\n                default: '',\n            },\n            list: {\n                type: 'string',\n                multiline: 'li',\n                source: 'html',\n                selector: '.visible-list',\n                default: '',\n            },\n            moreEnabled: {\n                type: 'boolean',\n            },\n            moreList: {\n                type: 'string',\n                multiline: 'li',\n                source: 'html',\n                selector: '.hidden-list',\n                default: '',\n            },\n        },\n        parent: ['prc-block/taxonomy-tree'],\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import './style.scss';\nimport { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}