{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.components\"","webpack:///external \"wp.htmlEntities\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/kicker/edit.js","webpack:///./src/_shared/components/image/display.js","webpack:///./src/_shared/components/image/edit.js","webpack:///./src/_shared/components/image/index.js","webpack:///./src/_shared/components/collapsible-list/index.js","webpack:///./src/_shared/components/taxonomy-select-list/index.js","webpack:///./src/a-z-taxonomy-list/edit.js","webpack:///./src/a-z-taxonomy-list/save.js","webpack:///./src/a-z-taxonomy-list/settings.js","webpack:///./src/a-z-taxonomy-list/index.js","webpack:///external \"moment\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.element\"","webpack:///external \"lodash\""],"names":["module","exports","React","wp","blockEditor","blocks","apiFetch","url","components","htmlEntities","getTerms","taxonomy","perPage","letter","undefined","collection","api","collections","Promise","resolve","path","then","terms","console","log","data","fetch","hide_empty","per_page","index","length","slug","replace","toLowerCase","id","name","withState","labelOptions","label","date","setAttributes","setState","useEffect","Object","keys","forEach","key","termObj","push","value","sort","a","b","getTermsAsOptions","options","style","display","alignItems","onChange","l","marginBottom","className","d","Display","img","size","link","getImgURL","variant","legacy","default","small","hidpi","smallHidpi","args","resize","addQueryArgs","getImgSrcSet","threshold","srcSet","media","sources","href","ALLOWED_MEDIA_TYPES","Edit","slot","chartArt","dataHandler","Toolbar","handler","open","flexWrap","icon","onClick","image","imageSlot","isChartArt","imageSize","maxWidth","onSelect","allowedTypes","render","isPrimary","Image","isMedium","isXL","isA1","isA2","isA3","isA4","classNames","ui","XL","A1","A2","A3","A4","medium","bordered","defaultProps","CollapsibleList","heading","chevron","placeholder","children","Icon","tagName","h","formattingControls","keepPlaceholderOnFocus","Content","TaxonomySelectList","termsData","excludeData","includeData","exclude","include","isSelected","loadTerms","state","JSON","parse","includeArr","map","term","term_id","stringify","stateInit","useDidMount","staticData","checked","includes","decodeEntities","bool","termId","termName","termSlug","excludeState","includeState","findIndex","x","splice","indexOf","removeFromExclude","data-termid","data-term","height","marginTop","fontSize","margin","edit","attributes","SelectLetter","save","settings","title","__","description","category","keywords","supports","html","align","type","source","selector","registerBlockType","moment","i18n","ReactDOM","element","lodash"],"mappings":";;;;;;;;;;;;;;;;;iJAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,a,kBCApBJ,EAAOC,QAAUE,GAAGE,Q,kBCApBL,EAAOC,QAAUE,GAAGG,U,kBCApBN,EAAOC,QAAUE,GAAGI,K,iBCApBP,EAAOC,QAAUE,GAAGK,Y,kBCApBR,EAAOC,QAAUE,GAAGM,c,8OCGdC,EAAW,SAACC,EAAUC,EAASC,QAC7BC,IAAcF,IACdA,EAAU,IAEd,IAAMG,EAAa,IAAIZ,GAAGa,IAAIC,YAAYN,GAC1C,YAAKG,IAAcD,EACR,IAAIK,SAAQ,SAAAC,GAEfb,IAAU,CAAEc,KAAM,4EAA8EP,IAAWQ,MAAM,SAAAC,GAC7GC,QAAQC,IAAKF,GACbH,EAAQG,cAGRR,IAAcC,GACf,IAAIG,SAAQ,SAAAC,GACf,IAAMM,EAAO,GACbV,EACKW,MAAM,CACHD,KAAM,CAAEE,YAAY,EAAOC,SAAUhB,KAExCS,MAAK,SAAAC,GACF,IAAK,IAAIO,EAAQ,EAAGA,EAAQP,EAAMQ,OAAQD,IAAS,CAC/C,IAAME,EAAOT,EAAMO,GAAOE,KAAKC,QAAlB,UACNrB,EAASsB,cADH,KAET,IAEJR,EAAKH,EAAMO,GAAOK,IAAM,CACpBA,GAAIZ,EAAMO,GAAOK,GACjBC,KAAMb,EAAMO,GAAOM,KACnBJ,QAGRZ,EAAQM,U,4CC9BPW,YAAU,CAC3BC,aAAc,IADGD,EAElB,YAAuE,IAApEE,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,KAAM5B,EAAsD,EAAtDA,SAAU6B,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,SAAUJ,EAAmB,EAAnBA,aAQlD,OANAK,qBAAU,YDkCY,SAAC/B,EAAUC,GACjC,OAAO,IAAIM,SAAQ,SAAAC,GACfT,EAASC,EAAUC,GAASS,MAAK,SAAAI,GAC7B,IAAMY,EAAe,GAErBM,OAAOC,KAAKnB,GAAMoB,SAAQ,SAAAC,GACtB,IAAMC,EAAUtB,EAAKqB,GACrBT,EAAaW,KAAK,CACdC,MAAOF,EAAQZ,KACfG,MAAOS,EAAQZ,UAIvBE,EAAaa,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,MAAQc,EAAEd,MAAQ,GAAK,KAEtDnB,EAAQkB,UChDZgB,CAAkB1C,GAAUU,MAAK,SAAAiC,GAAO,OACpCb,EAAS,CAAEJ,aAAciB,SAE9B,CAAC3C,IAGA,2BAAK4C,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,+BACI,oBAAC,gBAAD,CACIR,MAAOX,EACPgB,QAASjB,EACTqB,SAAU,SAAAC,GACNnB,EAAc,CAAEF,MAAOqB,KAE3BJ,MAAO,CAAEK,aAAc,OACvBC,UAAU,wBAGlB,sCACA,+BACI,oBAAC,cAAD,CACIZ,MAAOV,EACPmB,SAAU,SAAAI,GACNtB,EAAc,CAAED,KAAMuB,Y,uBCoF/BC,EAjHC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAEpBC,EAAY,SAAC5D,EAAK0D,EAAMG,GAC1B,GAAI,KAAO7D,IAAO,IAAUA,EACxB,OAAOA,EAGX,IAmCM8D,EAAS,CACX,IAAO,CACHC,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,WAAY,WAEhB,UAAW,CACPH,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,WAAY,YAKhBC,EAAO,CAAEC,OAnDF,CACPL,QAAS,UACTC,MAAO,UACPC,MAAO,WACPC,WAAY,WA+CQL,IAkBxB,MAjBI,OAASH,EACTS,EAAO,CAAEC,OA9CF,CACPL,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,WAAY,WA0CQL,IACb,OAASH,EAChBS,EAAO,CAAEC,OAzCF,CACPL,QAAS,UACTC,MAAO,SACPC,MAAO,UACPC,WAAY,WAqCQL,IACb,OAASH,EAChBS,EAAO,CAAEC,OApCF,CACPL,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,WAAY,WAgCQL,IACb,OAASH,IAChBS,EAAO,CAAEC,OA/BF,CACPL,QAAS,UACTC,MAAO,UACPC,MAAO,WACPC,WAAY,WA2BQL,KAIpB,eAAiBH,EACjBS,EAAO,CAAEC,OAAQN,EAAO,KAAOD,IACxB,mBAAqBH,IAC5BS,EAAO,CAAEC,OAAQN,EAAO,WAAWD,KAGhCQ,uBAAarE,EAAKmE,IAIvBG,EAAe,SAACtE,EAAK0D,GAA2B,IAArBa,EAAoB,uDAAR,IACzC,MAAO,CACH,CACIC,OAAO,GAAD,OAAKZ,EAAU5D,EAAK0D,EAAM,WAA1B,gBAA4CE,EAC9C5D,EACA0D,EACA,SAHE,OAKNe,MAAM,eAAD,OAAiBF,EAAjB,QAET,CACIC,OAAO,GAAD,OAAKZ,EAAU5D,EAAK0D,EAAM,SAA1B,gBAA0CE,EAC5C5D,EACA0D,EACA,cAHE,OAKNe,MAAM,eAAD,OAAiBF,EAAjB,UAKjB,OACI,oBAAC,WAAD,KACK,KAAOZ,GAAQ,oBAAC,IAAD,CAASe,QAASJ,EAAab,EAAKC,KACnD,KAAOC,GACJ,yBAAGgB,KAAMhB,GACL,oBAAC,IAAD,CAASe,QAASJ,EAAab,EAAKC,Q,QC1GlDkB,EAAsB,CAAC,SAwGdC,EAtGF,SAAC,GAAgD,IAA9CpB,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,KAAMoB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YASjCC,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACI,2BAAK7B,UAAU,wBACX,+BACI,2BAAKN,MAAO,CAAEC,QAAS,OAAQmC,SAAU,SACrC,oBAAC,aAAD,CACIC,KAAK,SACLtD,MAAM,0BACNuD,QAASH,IAEb,oBAAC,aAAD,CACIE,KAAK,QACLtD,MAAM,eACNuD,QAAS,WACLJ,EAAQ,CACJK,MAAO,GACPC,UAAW,gBAKvB,oBAAC,WAAD,KACK,OAAST,GACN,oBAAC,aAAD,CACIM,KAAK,MACLtD,OACI,IAASgD,EACH,oBACA,mBAEVO,QAAS,WACLJ,EAAQ,CACJO,YAAaV,UAQxC,OAASD,GACN,2BAAK9B,MAAO,CAAEC,QAAS,OAAQC,WAAY,WACvC,oBAAC,gBAAD,CACInB,MAAM,aACNW,MAAOgB,EACPX,QAAS,CACL,CAAEL,MAAO,KAAMX,MAAO,MACtB,CAAEW,MAAO,KAAMX,MAAO,MACtB,CAAEW,MAAO,KAAMX,MAAO,MACtB,CAAEW,MAAO,KAAMX,MAAO,MACtB,CAAEW,MAAO,KAAMX,MAAO,MACtB,CACIW,MAAO,aACPX,MAAO,2BAEX,CACIW,MAAO,iBACPX,MAAO,4BAGfoB,SAAU,SAAAuC,GAAS,OAAIR,EAAQ,CAAEQ,eACjC1C,MAAO,CAAEK,aAAc,MAAOsC,SAAU,cAQhE,OACI,oBAAC,mBAAD,KACI,oBAAC,cAAD,CACIC,SAhFS,SAAAnB,GAEbO,EADA,aAAeF,EACH,CAAES,MAAOd,EAAMzE,IAAKwF,UAAW,WAE/B,CAAED,MAAOd,EAAMzE,OA6EvB6F,aAAcjB,EACdkB,OAAQ,gBAAGX,EAAH,EAAGA,KAAH,OACJ,oBAAC,WAAD,KACK,KAAO1B,GACJ,oBAACwB,EAAD,CAASC,QAASF,EAAaG,KAAMA,IAExC,KAAO1B,GACJ,6BACI,oBAAC,SAAD,CAAQsC,WAAS,EAACT,QAASH,GAA3B,uBC/E1Ba,EAAQ,SAAC,GAAsD,IAEzDC,EACAC,EACAC,EACAC,EACAC,EACAC,EAPK7C,EAAmD,EAAnDA,IAAKE,EAA8C,EAA9CA,KAAMD,EAAwC,EAAxCA,KAAMoB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAuC9C,OACI,2BAAK1B,WAtCD2C,GAAW,EACXC,GAAO,EACPC,GAAO,EACPC,GAAO,EACPC,GAAO,EACPC,GAAO,GACP,IAAUxB,IACL,OAASpB,EACVwC,GAAO,EACC,OAASxC,EACjByC,GAAO,EACC,OAASzC,EACjB0C,GAAO,EACC,OAAS1C,EACjB2C,GAAO,EACC,OAAS3C,EACjB4C,GAAO,EAEH,SAAWxB,GAAQ,UAAYA,IAC/BmB,GAAW,IAKhBM,IAAW,CACdC,IAAI,EACJC,GAAIP,EACJQ,GAAIP,EACJQ,GAAIP,EACJQ,GAAIP,EACJQ,GAAIP,EACJQ,OAAQb,EACRV,OAAO,EACPwB,SAAUhC,MAMV,oBAAC,EAAD,CACItB,IAAKA,EACLC,KAAMA,EACNC,MAAM,IAAUqB,EAAc,GAAKrB,KAEtC,IAAUqB,GACP,oBAAC,EAAD,CACIvB,IAAKA,EACLqB,KAAMA,EACNpB,KAAMA,EACNqB,SAAUA,EACVC,YAAaA,MAOjCgB,EAAMgB,aAAe,CACjBvD,IAAK,GACLE,KAAM,GACND,KAAM,KACNoB,MAAM,EACNC,UAAU,EACVC,aAAa,G,qBAGFgB,I,QCvCAiB,EA1CS,SAAC,GAMlB,IALHC,EAKE,EALFA,QACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,YACAnF,EAEE,EAFFA,cACAoF,EACE,EADFA,SAEA,OACI,2BAAK/D,UAAU,wBACX,2BAAKA,UAAU,SACX,+BACI,oBAACgE,EAAA,EAAD,CAAM1F,KAAK,iBAEd,IAAUK,GACP,oBAAC,WAAD,CACIsF,QAAQ,KACR7E,MAAOwE,EACP/D,SAAU,SAAAqE,GAAC,OAAIvF,EAAc,CAAEiF,QAASM,KACxCJ,YAAaA,EACbK,mBAAoB,CAAC,QACrBC,wBAAsB,EACtBpE,UAAU,gBAGjB,IAAUrB,GACP,oBAAC,WAAS0F,QAAV,CACIJ,QAAQ,KACR7E,MAAOwE,EACP5D,UAAU,gBAGjB,IAAS6D,GACN,+BACI,oBAACG,EAAA,EAAD,CAAM1F,KAAK,gBAAgB8B,KAAK,YAI5C,2BAAKJ,UAAU,WAAW+D,K,kBC4IvBO,EA9KY/F,YAAU,CACjCgG,UAAW,GACXC,YAAa,GACbC,YAAa,IAHUlG,EAKvB,YAWO,IAVHgG,EAUE,EAVFA,UACAC,EASE,EATFA,YACAC,EAQE,EARFA,YACA7F,EAOE,EAPFA,SACA8F,EAME,EANFA,QACAC,EAKE,EALFA,QACA3H,EAIE,EAJFA,OACAF,EAGE,EAHFA,SACA6B,EAEE,EAFFA,cACAiG,EACE,EADFA,WAqCMC,EAAY,WACdhI,EAASC,EAAU,IAAKE,GAAQQ,MAAK,SAAAC,GACjCmB,EAAS,CAAE2F,UAAW9G,IArCZ,SAAAA,GACd,IAAMqH,EAAQ,GAQd,GALI,IAAMrH,EAAMQ,QAAU,IAAMyG,EAAQzG,SACpC6G,EAAMN,YAAcO,KAAKC,MAAMN,IAI/B,IAAMjH,EAAMQ,QAAU,IAAM0G,EAAQ1G,OAAQ,CAC5C,IAAMgH,EAAa,GACnBxH,EAAMyH,KAAI,SAAAC,GACNF,EAAW9F,KAAK,CACZd,GAAI8G,EAAKC,QACT9G,KAAM6G,EAAK7G,KACXJ,KAAMiH,EAAKjH,UAInBS,EAAc,CAAEgG,QAASI,KAAKM,UAAUJ,KACxCH,EAAML,YAAcQ,OACb,IAAMxH,EAAMQ,QAAU,IAAM0G,EAAQ1G,SAC3C6G,EAAML,YAAcM,KAAKC,MAAML,IAGnC/F,EAASkG,GAaLQ,CAAU7H,QAKd,IAAUkB,GACV4G,aAAY,WACJ,IAAMhB,EAAUtG,QAChB4G,OAKZ,IAqCMW,EA3DE,IAAMb,EAAQ1G,SAAU,IAAUU,GAC3BoG,KAAKC,MAAML,GA2D1B,OACI,2BAAK3E,UAAU,iBACV,IAAUwF,GACP,oBAAC,WAAD,KACKA,EAAWN,KAAI,SAAAC,GACZ,OACI,yBACInF,UAAU,OACVqB,KAAI,WAAMvE,EAASsB,cAAf,YACA+G,EAAKjH,OAGRiH,EAAK7G,WAMzB,IAAUK,GACP,oBAAC,WAAD,KACK4F,EAAUW,KAAI,SAAAC,GACX,IAAMM,EAAUf,EAAQgB,SAASP,EAAKC,SAWtC,OACI,2BAAKpF,UAAU,QACX,oBAAC,kBAAD,CACIvB,MAAOkH,yBAAeR,EAAK7G,MAC3BmH,QAASA,EACT5F,SAdK,SAAAN,GA7Df,IAACqG,EAAMC,EAAQC,EAAUC,EAKjC/H,EAJJgI,EACAC,EAFaL,EA+DKrG,EA/DCsG,EAgEDV,EAAKC,QAhEIU,EAiETX,EAAK7G,KAjEcyH,EAkEnBZ,EAAKjH,KAjEvB8H,EAAexB,EACfyB,EAAexB,GAYjB,IAASmB,GAETI,EAAa7G,KAAK0G,IAVb,KADC7H,EAAQiI,EAAaC,WAAU,SAAAC,GAAC,OAAIA,EAAE9H,KAAOwH,OACjCI,EAAaG,OAAOpI,EAAO,KAe7CiI,EAAa9G,KAAK,CACdd,GAAIwH,EACJvH,KAAMwH,EACN5H,KAAM6H,IAfY,WACtB,IAAM/H,EAAQgI,EAAaK,QAAQR,IAC9B,IAAM7H,GAAOgI,EAAaI,OAAOpI,EAAO,GAgB7CsI,IAIJ3H,EAAc,CACV+F,QAASK,KAAKM,UAAUW,GACxBrB,QAASI,KAAKM,UAAUY,MA2CAM,cAAapB,EAAKC,QAClBoB,YAAWrB,EAAK7G,OAEpB,2BACIoB,MAAO,CACH+G,OAAQ,OACRC,UAAW,UAGd,IAAS9B,GACN,2BACIlF,MAAO,CACHiH,SAAU,OACVC,OAAQ,IAHhB,IAMMzB,EAAKjH,KANX,eCpF7B2I,EAxEF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAY9G,EAA2C,EAA3CA,UAAWrB,EAAgC,EAAhCA,cAAeiG,EAAiB,EAAjBA,WAC1ChB,EAAsCkD,EAAtClD,QAAS5G,EAA6B8J,EAA7B9J,OAAQ0H,EAAqBoC,EAArBpC,QAASC,EAAYmC,EAAZnC,QAE5BoC,EAAe,WACjB,OACI,oBAAC,gBAAD,CACItI,MAAM,iBACNW,MAAOpC,EACPyC,QAAS,CACL,CAAEhB,MAAO,2BAA4BW,MAAO,IAC5C,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,KACrB,CAAEX,MAAO,IAAKW,MAAO,MAEzBS,SAAU,SAAAC,GACNnB,EAAc,CACV3B,OAAQ8C,EACR8D,QAAS9D,EACT4E,QAAS,GACTC,QAAS,SAO7B,OACI,2BAAK3E,UAAWA,GACZ,oBAAC,EAAD,CACI4D,QAASA,EACTE,YAAY,IACZnF,eAAe,GAEd,KAAO3B,GAAU,oBAAC+J,EAAD,MACjB,KAAO/J,GACJ,oBAAC,EAAD,CACI0H,QAASA,EACTC,QAASA,EACT3H,OAAQA,EACRF,SAAS,SACT6B,cAAeA,EACfiG,WAAYA,OC5CrBoC,EArBF,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,WAAY9G,EAAgB,EAAhBA,UAChB4D,EAA6BkD,EAA7BlD,QAAS5G,EAAoB8J,EAApB9J,OAAQ2H,EAAYmC,EAAZnC,QAEzB,OACI,2BAAK3E,UAAWA,GACZ,oBAAC,EAAD,CACI4D,QAASA,EACTE,YAAY,IACZnF,eAAe,GAEf,oBAAC,EAAD,CACIgG,QAASA,EACT3H,OAAQA,EACRF,SAAS,SACT6B,eAAe,OCwBpBsI,EAtCE,CACb,8BACA,CACIC,MAAOC,aAAG,qBACVC,YACI,yEACJC,SAAU,SACVtF,KAAM,aACNuF,SAAU,CAACH,aAAG,iBAAkBA,aAAG,cAAeA,aAAG,OAAQA,aAAG,OAChEI,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXX,WAAY,CACRlD,QAAS,CACL8D,KAAM,SACNC,OAAQ,OACRC,SAAU,KACVnH,QAAS,KAEbzD,OAAQ,CACJ0K,KAAM,SACNjH,QAAS,IAEbiE,QAAS,CACLgD,KAAM,SACNjH,QAAS,IAEbkE,QAAS,CACL+C,KAAM,SACNjH,QAAS,KAGjBoG,OACAG,SClCRa,oBAAiB,WAAjB,cAAqBZ,K,iBCJrB9K,EAAOC,QAAU0L,Q,iBCAjB3L,EAAOC,QAAUE,GAAGyL,M,iBCApB5L,EAAOC,QAAU4L,U,gBCAjB7L,EAAOC,QAAUE,GAAG2L,S,iBCApB9L,EAAOC,QAAU8L,S","file":"a-z-taxonomy-list/main-fc559818.js","sourcesContent":["module.exports = React;","module.exports = wp.blockEditor;","module.exports = wp.blocks;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.components;","module.exports = wp.htmlEntities;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nimport apiFetch from '@wordpress/api-fetch';\n\nconst getTerms = (taxonomy, perPage, letter) => {\n    if (undefined === perPage) {\n        perPage = 25;\n    }\n    const collection = new wp.api.collections[taxonomy]();\n    if ( undefined !== letter ) {\n        return new Promise(resolve => {\n            const data = {};\n            apiFetch( { path: '/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=topic&letter=' + letter } ).then( terms => {\n                console.log( terms );\n                resolve(terms);\n            } );\n        });\n    } else if ( undefined !== collection ) {\n        return new Promise(resolve => {\n            const data = {};\n            collection\n                .fetch({\n                    data: { hide_empty: false, per_page: perPage },\n                })\n                .then(terms => {\n                    for (let index = 0; index < terms.length; index++) {\n                        const slug = terms[index].slug.replace(\n                            `${taxonomy.toLowerCase()}_`,\n                            '',\n                        );\n                        data[terms[index].id] = {\n                            id: terms[index].id,\n                            name: terms[index].name,\n                            slug,\n                        };\n                    }\n                    resolve(data);\n                });\n        });\n    } else {\n        return false;\n    }\n};\n\nconst getTermsAsOptions = (taxonomy, perPage) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n                labelOptions.push({\n                    value: termObj.name,\n                    label: termObj.name,\n                });\n            });\n\n            labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsAsOptions };\n","import { useEffect } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { getTermsAsOptions } from '../../helpers';\n\nconst KickerEditor = withState({\n    labelOptions: [],\n})(({ label, date, taxonomy, setAttributes, setState, labelOptions }) => {\n    // On initial load & taxonomy change:\n    useEffect(() => {\n        getTermsAsOptions(taxonomy).then(options =>\n            setState({ labelOptions: options }),\n        );\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default KickerEditor;\n","import { Fragment } from '@wordpress/element';\nimport { Picture } from 'react-responsive-picture';\nimport { addQueryArgs } from '@wordpress/url';\n\nconst Display = ({ img, size, link }) => {\n    // eslint-disable-next-line no-shadow\n    const getImgURL = (url, size, variant) => {\n        if ('' === url || false === url) {\n            return url;\n        }\n\n        const A1 = {\n            default: '564,317',\n            small: '354,194',\n            hidpi: '1128,634',\n            smallHidpi: '708,388',\n        };\n\n        const A2 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,301',\n            smallHidpi: '708,388',\n        };\n\n        const A3 = {\n            default: '194,110',\n            small: '148,84',\n            hidpi: '388,220',\n            smallHidpi: '296,168',\n        };\n\n        const A4 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,302',\n            smallHidpi: '708,388',\n        };\n\n        const XL = {\n            default: '720,405',\n            small: '354,194',\n            hidpi: '1440,810',\n            smallHidpi: '708,388',\n        };\n\n        const legacy = {\n            '260': {\n                default: '260,260',\n                small: '260,260',\n                hidpi: '520,520',\n                smallHidpi: '520,520',\n            },\n            '260-173': {\n                default: '260,173',\n                small: '260,173',\n                hidpi: '520,346',\n                smallHidpi: '520,346',\n            },\n        };\n\n        // Default to A1\n        let args = { resize: A1[variant] };\n        if ('A2' === size) {\n            args = { resize: A2[variant] };\n        } else if ('A3' === size) {\n            args = { resize: A3[variant] };\n        } else if ('A4' === size) {\n            args = { resize: A4[variant] };\n        } else if ('XL' === size) {\n            args = { resize: XL[variant] };\n        }\n\n        // Temp legacy sizes for homepages\n        if ('legacy-260' === size) {\n            args = { resize: legacy['260'][variant] };\n        } else if ('legacy-260-173' === size) {\n            args = { resize: legacy['260-173'][variant] };\n        }\n\n        return addQueryArgs(url, args);\n    };\n\n    // eslint-disable-next-line no-shadow\n    const getImgSrcSet = (url, size, threshold = 420) => {\n        return [\n            {\n                srcSet: `${getImgURL(url, size, 'default')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'hidpi',\n                )} 2x`,\n                media: `(min-width: ${threshold}px)`,\n            },\n            {\n                srcSet: `${getImgURL(url, size, 'small')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'smallHidpi',\n                )} 2x`,\n                media: `(max-width: ${threshold}px)`,\n            },\n        ];\n    };\n\n    return (\n        <Fragment>\n            {'' === link && <Picture sources={getImgSrcSet(img, size)} />}\n            {'' !== link && (\n                <a href={link}>\n                    <Picture sources={getImgSrcSet(img, size)} />\n                </a>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Display;\n","import { Fragment } from '@wordpress/element';\nimport { Button, IconButton, SelectControl } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\nconst Edit = ({ img, size, slot, chartArt, dataHandler }) => {\n    const mediaHandler = media => {\n        if ('disabled' === slot) {\n            dataHandler({ image: media.url, imageSlot: 'default' });\n        } else {\n            dataHandler({ image: media.url });\n        }\n    };\n\n    const Toolbar = ({ handler, open }) => {\n        return (\n            <div className=\"image-editor-toolbar\">\n                <div>\n                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                        <IconButton\n                            icon=\"upload\"\n                            label=\"Select/Upload New Image\"\n                            onClick={open}\n                        />\n                        <IconButton\n                            icon=\"trash\"\n                            label=\"Remove Image\"\n                            onClick={() => {\n                                handler({\n                                    image: '',\n                                    imageSlot: 'disabled',\n                                });\n                            }}\n                        />\n\n                        <Fragment>\n                            {null !== chartArt && (\n                                <IconButton\n                                    icon=\"art\"\n                                    label={\n                                        true === chartArt\n                                            ? 'Disable Chart Art'\n                                            : 'Enable Chart Art'\n                                    }\n                                    onClick={() => {\n                                        handler({\n                                            isChartArt: !chartArt,\n                                        });\n                                    }}\n                                />\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n                {null !== slot && (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <SelectControl\n                            label=\"Image Size\"\n                            value={size}\n                            options={[\n                                { value: 'XL', label: 'XL' },\n                                { value: 'A1', label: 'A1' },\n                                { value: 'A2', label: 'A2' },\n                                { value: 'A3', label: 'A3' },\n                                { value: 'A4', label: 'A4' },\n                                {\n                                    value: 'legacy-260',\n                                    label: 'Legacy Homepage 260x260',\n                                },\n                                {\n                                    value: 'legacy-260-173',\n                                    label: 'Legacy Homepage 260x173',\n                                },\n                            ]}\n                            onChange={imageSize => handler({ imageSize })}\n                            style={{ marginBottom: '0px', maxWidth: '140px' }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={mediaHandler}\n                allowedTypes={ALLOWED_MEDIA_TYPES}\n                render={({ open }) => (\n                    <Fragment>\n                        {'' !== img && (\n                            <Toolbar handler={dataHandler} open={open} />\n                        )}\n                        {'' === img && (\n                            <p>\n                                <Button isPrimary onClick={open}>\n                                    Insert Image\n                                </Button>\n                            </p>\n                        )}\n                    </Fragment>\n                )}\n            />\n        </MediaUploadCheck>\n    );\n};\n\nexport default Edit;\n","import './imageEditor.scss';\nimport Display from './display';\nimport Edit from './edit';\nimport classNames from 'classnames/bind';\n\n/**\n * Props:\n * img: string url of image to display\n * size: string of image/slot size (A1,A2,A3,A4)\n * link: string of url to go to when image is clicked on front end\n * slot: if set to null then no image size chooser will be display\n * chartArt: if set to null then no chart art button will appear\n * dataHandler: defaults to false unless otherwise provided a function to pass data back up to a HOC state.\n *\n * <Image id={} img={} size={} link={} slot={} chartArt={} dataHandler={}/>\n */\n\nconst Image = ({ img, link, size, slot, chartArt, dataHandler }) => {\n    const classes = () => {\n        let isMedium = false;\n        let isXL = false;\n        let isA1 = false;\n        let isA2 = false;\n        let isA3 = false;\n        let isA4 = false;\n        if (false !== slot) {\n            if ( 'XL' === size ) {\n                isXL = true;\n            } else if ( 'A1' === size ) {\n                isA1 = true;\n            } else if ( 'A2' === size ) {\n                isA2 = true;\n            } else if ( 'A3' === size ) {\n                isA3 = true;\n            } else if ( 'A4' === size ) {\n                isA4 = true;\n            } else {\n                if ('left' === slot || 'right' === slot) {\n                    isMedium = true;\n                }\n            }\n        }\n\n        return classNames({\n            ui: true,\n            XL: isXL,\n            A1: isA1,\n            A2: isA2,\n            A3: isA3,\n            A4: isA4,\n            medium: isMedium,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <Display\n                img={img}\n                size={size}\n                link={false !== dataHandler ? '' : link}\n            />\n            {false !== dataHandler && (\n                <Edit\n                    img={img}\n                    slot={slot}\n                    size={size}\n                    chartArt={chartArt}\n                    dataHandler={dataHandler}\n                />\n            )}\n        </div>\n    );\n};\n\nImage.defaultProps = {\n    img: '',\n    link: '',\n    size: 'A1',\n    slot: false,\n    chartArt: false,\n    dataHandler: false,\n};\n\nexport default Image;\n","import './style.scss';\nimport { RichText } from '@wordpress/block-editor';\nimport { Icon } from 'semantic-ui-react';\n\nconst CollapsibleList = ({\n    heading,\n    chevron,\n    placeholder,\n    setAttributes,\n    children,\n}) => {\n    return (\n        <div className=\"prc-collapsible-list\">\n            <div className=\"title\">\n                <div>\n                    <Icon name=\"caret down\" />\n                </div>\n                {false !== setAttributes && (\n                    <RichText\n                        tagName=\"h2\"\n                        value={heading}\n                        onChange={h => setAttributes({ heading: h })}\n                        placeholder={placeholder}\n                        formattingControls={['link']}\n                        keepPlaceholderOnFocus\n                        className=\"sans-serif\"\n                    />\n                )}\n                {false === setAttributes && (\n                    <RichText.Content\n                        tagName=\"h2\"\n                        value={heading}\n                        className=\"sans-serif\"\n                    />\n                )}\n                {true === chevron && (\n                    <div>\n                        <Icon name=\"chevron right\" size=\"large\" />\n                    </div>\n                )}\n            </div>\n            <div className=\"content\">{children}</div>\n        </div>\n    );\n};\n\nexport default CollapsibleList;\n","import { getTerms } from 'shared';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { CheckboxControl } from '@wordpress/components';\nimport { withState } from '@wordpress/compose';\nimport { useDidMount } from '@daniakash/lifecycle-hooks';\nimport { Fragment } from '@wordpress/element';\n\nconst TaxonomySelectList = withState({\n    termsData: [],\n    excludeData: [],\n    includeData: [],\n})(\n    ({\n        termsData,\n        excludeData,\n        includeData,\n        setState,\n        exclude,\n        include,\n        letter,\n        taxonomy,\n        setAttributes,\n        isSelected,\n    }) => {\n        const stateInit = terms => {\n            const state = {};\n\n            // Initialize exclude data from exclude prop\n            if (0 !== terms.length && 0 !== exclude.length) {\n                state.excludeData = JSON.parse(exclude);\n            }\n\n            // Initialize include data from scratch OR the include data from the include prop\n            if (0 !== terms.length && 0 === include.length) {\n                const includeArr = [];\n                terms.map(term => {\n                    includeArr.push({\n                        id: term.term_id,\n                        name: term.name,\n                        slug: term.slug,\n                    });\n                });\n                // We need to take this array and object and json stringify it, we will also need a function to convert back to an array of objects.\n                setAttributes({ include: JSON.stringify(includeArr) });\n                state.includeData = includeArr;\n            } else if (0 !== terms.length && 0 !== include.length) {\n                state.includeData = JSON.parse(include);\n            }\n\n            setState(state);\n        };\n\n        const staticInit = () => {\n            if (0 !== include.length && false === setAttributes) {\n                return JSON.parse(include);\n            }\n            return false;\n        };\n\n        const loadTerms = () => {\n            getTerms(taxonomy, 100, letter).then(terms => {\n                setState({ termsData: terms });\n                stateInit(terms);\n            });\n        };\n\n        // NO HOOKS ON SAVE\n        if (false !== setAttributes) {\n            useDidMount(() => {\n                if (0 === termsData.length) {\n                    loadTerms();\n                }\n            });\n        }\n\n        const processChange = (bool, termId, termName, termSlug) => {\n            const excludeState = excludeData;\n            const includeState = includeData;\n\n            const removeFromInclude = () => {\n                const index = includeState.findIndex(x => x.id === termId);\n                if (-1 !== index) includeState.splice(index, 1);\n            };\n\n            const removeFromExclude = () => {\n                const index = excludeState.indexOf(termId);\n                if (-1 !== index) excludeState.splice(index, 1);\n            };\n\n            if (true === bool) {\n                // Add term to exclude array\n                excludeState.push(termId);\n                // Remove term from includ earray\n                removeFromInclude();\n            } else {\n                // Add term to include array\n                includeState.push({\n                    id: termId,\n                    name: termName,\n                    slug: termSlug,\n                });\n                // Remove term from exclude array\n                removeFromExclude();\n            }\n\n            // Convert excludes array to comma sepparated string for storing in attributes.\n            setAttributes({\n                exclude: JSON.stringify(excludeState),\n                include: JSON.stringify(includeState),\n            });\n        };\n\n        const staticData = staticInit();\n        return (\n            <div className=\"ui link list\">\n                {false !== staticData && (\n                    <Fragment>\n                        {staticData.map(term => {\n                            return (\n                                <a\n                                    className=\"item\"\n                                    href={`/${taxonomy.toLowerCase()}/${\n                                        term.slug\n                                    }`}\n                                >\n                                    {term.name}\n                                </a>\n                            );\n                        })}\n                    </Fragment>\n                )}\n                {false !== setAttributes && (\n                    <Fragment>\n                        {termsData.map(term => {\n                            const checked = exclude.includes(term.term_id);\n\n                            const onChange = b => {\n                                processChange(\n                                    b,\n                                    term.term_id,\n                                    term.name,\n                                    term.slug,\n                                );\n                            };\n\n                            return (\n                                <div className=\"item\">\n                                    <CheckboxControl\n                                        label={decodeEntities(term.name)}\n                                        checked={checked}\n                                        onChange={onChange}\n                                        data-termid={term.term_id}\n                                        data-term={term.name}\n                                    />\n                                    <div\n                                        style={{\n                                            height: '15px',\n                                            marginTop: '-5px',\n                                        }}\n                                    >\n                                        {true === isSelected && (\n                                            <pre\n                                                style={{\n                                                    fontSize: '11px',\n                                                    margin: 0,\n                                                }}\n                                            >\n                                                ({term.slug})\n                                            </pre>\n                                        )}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </Fragment>\n                )}\n            </div>\n        );\n    },\n);\n\nexport default TaxonomySelectList;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n// eslint-disable-next-line import/no-unresolved\nimport { CollapsibleList, TaxonomySelectList } from 'shared';\nimport { SelectControl } from '@wordpress/components';\n\nconst edit = ({ attributes, className, setAttributes, isSelected }) => {\n    const { heading, letter, exclude, include } = attributes;\n\n    const SelectLetter = () => {\n        return (\n            <SelectControl\n                label=\"Chose a letter\"\n                value={letter}\n                options={[\n                    { label: '(Click to select letter)', value: '' },\n                    { label: 'A', value: 'A' },\n                    { label: 'B', value: 'B' },\n                    { label: 'C', value: 'C' },\n                    { label: 'D', value: 'D' },\n                    { label: 'E', value: 'E' },\n                    { label: 'F', value: 'F' },\n                    { label: 'G', value: 'G' },\n                    { label: 'H', value: 'H' },\n                    { label: 'I', value: 'I' },\n                    { label: 'J', value: 'J' },\n                    { label: 'K', value: 'K' },\n                    { label: 'L', value: 'L' },\n                    { label: 'M', value: 'M' },\n                    { label: 'N', value: 'N' },\n                    { label: 'O', value: 'O' },\n                    { label: 'P', value: 'P' },\n                    { label: 'Q', value: 'Q' },\n                    { label: 'R', value: 'R' },\n                    { label: 'S', value: 'S' },\n                    { label: 'T', value: 'T' },\n                    { label: 'U', value: 'U' },\n                    { label: 'V', value: 'V' },\n                    { label: 'W', value: 'W' },\n                    { label: 'X', value: 'X' },\n                    { label: 'Y', value: 'Y' },\n                    { label: 'Z', value: 'Z' },\n                ]}\n                onChange={l => {\n                    setAttributes({\n                        letter: l,\n                        heading: l,\n                        exclude: '',\n                        include: '',\n                    });\n                }}\n            />\n        );\n    };\n\n    return (\n        <div className={className}>\n            <CollapsibleList\n                heading={heading}\n                placeholder=\"A\"\n                setAttributes={false}\n            >\n                {'' === letter && <SelectLetter />}\n                {'' !== letter && (\n                    <TaxonomySelectList\n                        exclude={exclude}\n                        include={include}\n                        letter={letter}\n                        taxonomy=\"Topics\"\n                        setAttributes={setAttributes}\n                        isSelected={isSelected}\n                    />\n                )}\n            </CollapsibleList>\n        </div>\n    );\n};\n\nexport default edit;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n// eslint-disable-next-line import/no-unresolved\nimport { CollapsibleList, TaxonomySelectList } from 'shared';\n\nconst save = ({ attributes, className }) => {\n    const { heading, letter, include } = attributes;\n\n    return (\n        <div className={className}>\n            <CollapsibleList\n                heading={heading}\n                placeholder=\"A\"\n                setAttributes={false}\n            >\n                <TaxonomySelectList\n                    include={include}\n                    letter={letter}\n                    taxonomy=\"Topics\"\n                    setAttributes={false}\n                />\n            </CollapsibleList>\n        </div>\n    );\n};\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/a-z-taxonomy-list',\n    {\n        title: __('A-Z Taxonomy List'),\n        description:\n            'A taxonomy list sorted alphabeticaly. Check terms you want to exclude.',\n        category: 'layout',\n        icon: 'networking',\n        keywords: [__('Taxonomy List'), __('Taxonomies'), __('A-Z'), __('AZ')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            heading: {\n                type: 'string',\n                source: 'html',\n                selector: 'h2',\n                default: 'A',\n            },\n            letter: {\n                type: 'string',\n                default: '',\n            },\n            exclude: {\n                type: 'string',\n                default: '',\n            },\n            include: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import './style.scss';\nimport { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","module.exports = moment;","module.exports = wp.i18n;","module.exports = ReactDOM;","module.exports = wp.element;","module.exports = lodash;"],"sourceRoot":""}