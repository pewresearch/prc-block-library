{"version":3,"sources":["webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.blocks\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/pancake-promo/index.js","webpack:///external \"wp.element\""],"names":["module","exports","wp","blockEditor","blocks","path","replace","window","concat","__","i18n","registerBlockType","title","icon","category","keywords","styles","name","label","isDefault","supports","html","attributes","content","type","default","edit","props","console","log","className","id","width","height","viewBox","fill","xmlns","d","fill-rule","clip-rule","tagName","value","onChange","setAttributes","placeholder","save","Content","element"],"mappings":";;;;;;;;;;;;;;;;;uIAAAA,EAAOC,QAAUC,GAAGC,a,cCApBH,EAAOC,QAAUC,GAAGE,Q,kECSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,6BCVlD,qCAGQI,EAAOP,GAAGQ,KAAVD,GAkBRE,4BAAmB,0BAA2B,CAE7CC,MAAOH,EAAI,iBACXI,KAAM,eACNC,SAAU,UACVC,SAAU,CACTN,EAAI,OACJA,EAAI,MACJA,EAAI,SACJA,EAAI,YAELO,OAAQ,CACP,CACCC,KAAM,UACNC,MAAO,UACPC,WAAW,GAEZ,CACCF,KAAM,QACNC,MAAO,UAGTE,SAAU,CACTC,MAAM,GAGPC,WAAY,CACXC,QAAS,CACRC,KAAM,SACNC,QAAS,eAgBXC,KAAM,SAAEC,GAGP,OAFAC,QAAQC,IAAI,QACZD,QAAQC,IAAIF,GAEX,2BAAKG,UAAWH,EAAMG,WACtB,2BAAKC,GAAG,gBAAgBC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACpF,4BAAMC,EAAE,wQAAwQF,KAAK,YACrR,4BAAME,EAAE,oQAAoQF,KAAK,YACjR,4BAAMG,YAAU,UAAUC,YAAU,UAAUF,EAAE,mJAAmJF,KAAK,YACxM,4BAAME,EAAE,mLAAmLF,KAAK,UAChM,4BAAME,EAAE,iLAAiLF,KAAK,WAE/L,oBAAC,WAAD,CACCK,QAAQ,MACRC,MAAQd,EAAML,WAAWC,QACzBmB,SAAW,SAAEnB,GAAF,OAAeI,EAAMgB,cAAe,CAAEpB,aACjDqB,YAAcjB,EAAML,WAAWC,QAC/BO,UAAU,iBAkBbe,KAAM,SAAElB,GAGP,OAFAC,QAAQC,IAAI,QACZD,QAAQC,IAAIF,GAEX,2BAAKG,UAAWH,EAAMG,WACrB,2BAAKC,GAAG,gBAAgBC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACpF,4BAAMC,EAAE,wQAAwQF,KAAK,YACrR,4BAAME,EAAE,oQAAoQF,KAAK,YACjR,4BAAMG,YAAU,UAAUC,YAAU,UAAUF,EAAE,mJAAmJF,KAAK,YACxM,4BAAME,EAAE,mLAAmLF,KAAK,UAChM,4BAAME,EAAE,iLAAiLF,KAAK,WAE/L,oBAAC,WAASW,QAAV,CAAkBN,QAAQ,MAAMC,MAAQd,EAAML,WAAWC,QAAUO,UAAU,oB,gCCjHjF9B,EAAOC,QAAUC,GAAG6C,U","file":"pancake-promo/main-00e921f0.js","sourcesContent":["module.exports = wp.blockEditor;","module.exports = wp.blocks;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","//  Import CSS\nimport './style.scss';\n\nconst { __ } = wp.i18n; // Import __() from wp.i18n\nimport { registerBlockType } from '@wordpress/blocks';\nimport { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { RichText, BlockControls, AlignmentToolbar } from '@wordpress/block-editor';\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/promo-pancake', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Pancake Promo' ), // Block title.\n\ticon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'ad' ),\n\t\t__( 'promo' ),\n\t\t__( 'pancake' ),\n\t],\n\tstyles: [\n\t\t{\n\t\t\tname: 'oatmeal',\n\t\t\tlabel: 'Oatmeal',\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'white',\n\t\t\tlabel: 'White',\n\t\t},\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\tcontent: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'EMPTY TEXT',\n\t\t},\n\t},\n\t\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: ( props ) => {\n\t\tconsole.log('edit');\n\t\tconsole.log(props);\n\t\treturn(\n\t\t\t<div className={props.className}>\n\t\t\t<svg id=\"election_icon\" width=\"74\" height=\"57\" viewBox=\"0 0 74 57\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path d=\"M5.98906 10.4812C2.68139 10.4812 0 13.1788 0 16.5065V34.6553C0 37.983 2.68139 40.6806 5.98905 40.6806H11.1692L8.36363 56.6748L29.8727 40.6806H35.4756C38.7832 40.6806 41.4646 37.983 41.4646 34.6553V16.5065C41.4646 13.1788 38.7832 10.4812 35.4756 10.4812H5.98906Z\" fill=\"#3178A7\"/>\n\t\t\t\t<path d=\"M67.5087 0C70.8164 0 73.4978 2.69763 73.4978 6.02532V24.1741C73.4978 27.5018 70.8164 30.1994 67.5087 30.1994H62.3286L65.1341 46.1936L43.6251 30.1994H38.0222C34.7145 30.1994 32.0331 27.5018 32.0331 24.1741V6.02532C32.0331 2.69763 34.7145 0 38.0222 0H67.5087Z\" fill=\"#DA571F\"/>\n\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.4646 30.1993H38.0225C34.7148 30.1993 32.0334 27.5017 32.0334 24.174V10.4814H35.4756C38.7832 10.4814 41.4646 13.1791 41.4646 16.5068V30.1993Z\" fill=\"#6B3635\"/>\n\t\t\t\t<path d=\"M52.4212 4.79321L54.8808 12.3632L62.8403 12.3632L56.4009 17.0417L58.8605 24.6116L52.4212 19.9331L45.9818 24.6116L48.4414 17.0417L42.002 12.3632L49.9615 12.3632L52.4212 4.79321Z\" fill=\"white\"/>\n\t\t\t\t<path d=\"M20.7323 14.9265L23.1919 22.4965L31.1514 22.4965L24.712 27.175L27.1717 34.7449L20.7323 30.0664L14.2929 34.7449L16.7525 27.175L10.3131 22.4965L18.2727 22.4965L20.7323 14.9265Z\" fill=\"white\"/>\n\t\t\t</svg>\n\t\t\t<RichText\n\t\t\t\ttagName=\"div\" // The tag here is the element output and editable in the admin\n\t\t\t\tvalue={ props.attributes.content } // Any existing content, either from the database or an attribute default\n\t\t\t\tonChange={ ( content ) => props.setAttributes( { content } ) } // Store updated content as a block attribute\n\t\t\t\tplaceholder={ props.attributes.content } // Display this text before any content has been added by the user\n\t\t\t\tclassName='sans-serif'\n\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t},\n\n\t// Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\tconsole.log('save');\n\t\tconsole.log(props);\n\t\treturn (\n\t\t\t<div className={props.className}>\n\t\t\t\t<svg id=\"election_icon\" width=\"74\" height=\"57\" viewBox=\"0 0 74 57\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path d=\"M5.98906 10.4812C2.68139 10.4812 0 13.1788 0 16.5065V34.6553C0 37.983 2.68139 40.6806 5.98905 40.6806H11.1692L8.36363 56.6748L29.8727 40.6806H35.4756C38.7832 40.6806 41.4646 37.983 41.4646 34.6553V16.5065C41.4646 13.1788 38.7832 10.4812 35.4756 10.4812H5.98906Z\" fill=\"#3178A7\"/>\n\t\t\t\t\t<path d=\"M67.5087 0C70.8164 0 73.4978 2.69763 73.4978 6.02532V24.1741C73.4978 27.5018 70.8164 30.1994 67.5087 30.1994H62.3286L65.1341 46.1936L43.6251 30.1994H38.0222C34.7145 30.1994 32.0331 27.5018 32.0331 24.1741V6.02532C32.0331 2.69763 34.7145 0 38.0222 0H67.5087Z\" fill=\"#DA571F\"/>\n\t\t\t\t\t<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.4646 30.1993H38.0225C34.7148 30.1993 32.0334 27.5017 32.0334 24.174V10.4814H35.4756C38.7832 10.4814 41.4646 13.1791 41.4646 16.5068V30.1993Z\" fill=\"#6B3635\"/>\n\t\t\t\t\t<path d=\"M52.4212 4.79321L54.8808 12.3632L62.8403 12.3632L56.4009 17.0417L58.8605 24.6116L52.4212 19.9331L45.9818 24.6116L48.4414 17.0417L42.002 12.3632L49.9615 12.3632L52.4212 4.79321Z\" fill=\"white\"/>\n\t\t\t\t\t<path d=\"M20.7323 14.9265L23.1919 22.4965L31.1514 22.4965L24.712 27.175L27.1717 34.7449L20.7323 30.0664L14.2929 34.7449L16.7525 27.175L10.3131 22.4965L18.2727 22.4965L20.7323 14.9265Z\" fill=\"white\"/>\n\t\t\t\t</svg>\n\t\t\t\t<RichText.Content tagName=\"div\" value={ props.attributes.content } className='sans-serif'/>\n\t\t\t</div>\n\t\t);\n\t},\n} );\n","module.exports = wp.element;"],"sourceRoot":""}