{"version":3,"sources":["webpack:///./src/taxonomy-tree/frontend.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js"],"names":["treeCollapseHandler","window","innerWidth","blocks","document","querySelectorAll","undefined","block","parentElement","classList","contains","title","querySelector","content","linkCheck","titleLink","console","log","getAttribute","removeAttribute","addEventListener","e","stopPropagation","display","style","caret","jQuery","transition","animation","add","remove","setTimeout","path","replace","concat"],"mappings":";;;;;;;;;;;;;;;;;wpCAAA,IAAMA,EAAsB,WAExB,KAAK,KAAOC,OAAOC,YAAnB,CAGA,IACMC,EAASC,SAASC,iBAAiB,qCACzC,QAAKC,IAAcH,EAAnB,CAPmC,UAUjBA,GAViB,yBAU1BI,EAV0B,QAW/B,GAAKA,EAAMC,cAAcC,UAAUC,SAAS,kCACxC,iBAEJ,IAAMC,EAAQJ,EAAMK,cAAc,UAC5BC,EAAUN,EAAMK,cAAc,YACpC,QAAKN,IAAcK,EACf,iBAEJ,GAAK,OAASA,EACV,iBAEJ,IAAMG,EAAYH,EAAMC,cAAc,KAClCG,GAAY,EAChBC,QAAQC,IAAIH,GACP,OAASA,IACVE,QAAQC,IAAI,iBACZF,EAAYD,EAAUI,aAAa,QACnCF,QAAQC,IAAI,UAAUF,GACtBD,EAAUK,gBAAgB,SAE9BR,EAAMS,iBAAiB,SAAS,SAASC,GACrCA,EAAEC,kBADsC,IAEhCC,EAAYV,EAAQW,MAApBD,QACFE,EAAQd,EAAMC,cAAc,eAC9B,UAAYW,GAEZG,OAAOb,GAASc,WAAWC,aACtBH,EAAMhB,UAAUC,SAAS,UAC1Be,EAAMhB,UAAUoB,IAAI,SACpBJ,EAAMhB,UAAUqB,OAAO,WAI3BJ,OAAOb,GAASc,WAAWC,WACtBH,EAAMhB,UAAUC,SAAS,WAC1Be,EAAMhB,UAAUoB,IAAI,QACpBJ,EAAMhB,UAAUqB,OAAO,eArCvC,2BAA0B,IAVS,kCAsDvC1B,SAASgB,iBAAiB,oBAAoB,WAC1CW,WAAW/B,EAAqB,S,gCC9CpB,IAAIgC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBhC,OAAO,YAAYiC,OAAOF,M","file":"taxonomy-tree/frontend-df42d6d0.js","sourcesContent":["const treeCollapseHandler = function() {\n    // If viewport is greater than mobile threshold disable\n    if ( 541 <= window.innerWidth ) {\n        return;\n    }\n    const animation = 'fade';\n    const blocks = document.querySelectorAll('.wp-block-prc-block-taxonomy-tree');\n    if ( undefined === blocks ) {\n        return;\n    }\n    for (let block of blocks) {\n        if ( block.parentElement.classList.contains('block-editor-block-list__block') ) {\n            continue;\n        }\n        const title = block.querySelector('.title');\n        const content = block.querySelector('.content');\n        if ( undefined === title ) {\n            continue;\n        }\n        if ( null === title ) {\n            continue;\n        }\n        const linkCheck = title.querySelector('a');\n        let titleLink = false;\n        console.log(linkCheck);\n        if ( null !== linkCheck ) {\n            console.log('removing href');\n            titleLink = linkCheck.getAttribute('href');\n            console.log('link : '+titleLink);\n            linkCheck.removeAttribute('href');\n        }\n        title.addEventListener('click', function(e) {\n            e.stopPropagation(); // Short-circuit any links\n            const { display } = content.style;\n            const caret = title.querySelector('.icon.caret');\n            if ('block' !== display) {\n                // Closed State - Force Open\n                jQuery(content).transition(animation + ' down');\n                if ( caret.classList.contains('down') ) {\n                    caret.classList.add('right');\n                    caret.classList.remove('down');\n                }\n            } else {\n                // Open State - Force Closed\n                jQuery(content).transition(animation + ' up');\n                if ( caret.classList.contains('right') ) {\n                    caret.classList.add('down');\n                    caret.classList.remove('right');\n                }\n            }\n        });\n    }\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n    setTimeout(treeCollapseHandler, 1000);\n});","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}"],"sourceRoot":""}