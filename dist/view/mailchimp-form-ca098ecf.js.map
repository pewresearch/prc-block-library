{"version":3,"sources":["webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"domReady\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./src/mailchimp-form/view.js"],"names":["module","exports","window","path","replace","concat","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","err","o","minLen","n","Object","prototype","toString","slice","constructor","name","from","test","TypeError","parseStylesString","stylesString","split","filter","style","reduce","acc","key","map","word","index","charAt","toUpperCase","join","parseClassesString","classesString","className","Form","input","styles","classes","type","placeholder","button","text","inputStylesObj","form","inputClassesArr","buttonStylesObj","buttonClassesArr","useState","setValue","useEffect","console","log","onChange","e","target","background","border","padding","domReady","document","querySelectorAll","forEach","elm","segmentId","getAttribute","querySelector","inputStyles","inputClasses","buttonStyles","buttonClasses","hydrate","innerText","innerHTML"],"mappings":"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","file":"view/mailchimp-form-ca098ecf.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"domReady\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * WordPress Dependencies\n */\nimport { hydrate, useEffect, useState } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\n\nfunction parseStylesString(stylesString) {\n\t// check if stylesString is empty.\n\tif (!stylesString) {\n\t\treturn {};\n\t}\n\treturn stylesString\n\t\t.split(';')\n\t\t.filter((style) => style)\n\t\t.reduce((acc, style) => {\n\t\t\tconst [key, value] = style.split(':');\n\t\t\t// convert key to camelCase.\n\t\t\tconst camelCaseKey = key\n\t\t\t\t.split('-')\n\t\t\t\t.map((word, index) => {\n\t\t\t\t\tif (0 === index) {\n\t\t\t\t\t\treturn word;\n\t\t\t\t\t}\n\t\t\t\t\treturn word.charAt(0).toUpperCase() + word.slice(1);\n\t\t\t\t})\n\t\t\t\t.join('');\n\t\t\tacc[camelCaseKey] = value;\n\t\t\treturn acc;\n\t\t}, {});\n}\n\nfunction parseClassesString(classesString) {\n\t// check if classesString is empty.\n\tif (!classesString) {\n\t\treturn [];\n\t}\n\treturn classesString.split(' ').filter((className) => className);\n}\n\nfunction Form({\n\tinput = {\n\t\tstyles: '',\n\t\tclasses: '',\n\t\ttype: 'email',\n\t\tplaceholder: '',\n\t},\n\tbutton = {\n\t\tstyles: '',\n\t\tclasses: '',\n\t\ttext: '',\n\t},\n\tform = {\n\t\tsegmentId: false,\n\t},\n}) {\n\t// Split up inputStyles into an object.\n\tconst inputStylesObj = parseStylesString(input.styles);\n\t// Split up inputClasses into an array.\n\tconst inputClassesArr = parseClassesString(input.classes);\n\t// Split up buttonStyles into an object.\n\tconst buttonStylesObj = parseStylesString(button.styles);\n\t// Split up buttonClasses into an array.\n\tconst buttonClassesArr = parseClassesString(button.classes);\n\n\tconst [value, setValue] = useState('');\n\n\tuseEffect(() => {\n\t\tconsole.log('Form value...', value);\n\t});\n\n\treturn (\n\t\t<form>\n\t\t\t<input\n\t\t\t\ttype={input.type}\n\t\t\t\tplaceholder={input.placeholder}\n\t\t\t\tstyle={inputStylesObj}\n\t\t\t\tclassName={inputClassesArr.join(' ')}\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\tvalue={value}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"wp-block-button\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'none',\n\t\t\t\t\tborder: 'none',\n\t\t\t\t\tpadding: 0,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span style={buttonStylesObj} className={buttonClassesArr.join(' ')}>\n\t\t\t\t\t{button.text}\n\t\t\t\t</span>\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\ndomReady(() => {\n\tconst forms = document.querySelectorAll('.wp-block-prc-block-mailchimp-form');\n\tforms.forEach((elm) => {\n\t\tconst segmentId = elm.getAttribute('data-segment-id');\n\n\t\tconst input = elm.querySelector('.wp-block-prc-block-form-input-field');\n\t\tconst button = elm.querySelector('.wp-block-button__link');\n\n\t\tconst inputStyles = input.getAttribute('style');\n\t\tconst inputClasses = input.getAttribute('class');\n\t\tconst buttonStyles = button.getAttribute('style');\n\t\tconst buttonClasses = button.getAttribute('class');\n\t\thydrate(\n\t\t\t<Form\n\t\t\t\t{...{\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tstyles: inputStyles,\n\t\t\t\t\t\tclasses: inputClasses,\n\t\t\t\t\t\ttype: input.getAttribute('type'),\n\t\t\t\t\t\tplaceholder: input.getAttribute('placeholder'),\n\t\t\t\t\t},\n\t\t\t\t\tbutton: {\n\t\t\t\t\t\tstyles: buttonStyles,\n\t\t\t\t\t\tclasses: buttonClasses,\n\t\t\t\t\t\ttext: button.innerText,\n\t\t\t\t\t},\n\t\t\t\t\tform: {\n\t\t\t\t\t\tsegmentId,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{elm.innerHTML}\n\t\t\t</Form>,\n\t\t\telm,\n\t\t);\n\t});\n});\n"],"sourceRoot":""}