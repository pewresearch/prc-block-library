{"version":3,"sources":["webpack:///external [\"wp\",\"domReady\"]","webpack:///./node_modules/enquire.js/src/Util.js","webpack:///./node_modules/enquire.js/src/index.js","webpack:///./node_modules/enquire.js/src/MediaQueryDispatch.js","webpack:///./node_modules/enquire.js/src/MediaQuery.js","webpack:///./node_modules/enquire.js/src/QueryHandler.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/group/frontend.js"],"names":["module","exports","window","isFunction","target","isArray","Object","prototype","toString","apply","each","collection","fn","i","length","MediaQueryDispatch","MediaQuery","Util","matchMedia","Error","this","queries","browserIsIncapable","matches","constructor","register","q","options","shouldDegrade","isUnconditional","match","handler","addHandler","unregister","query","removeHandler","clear","QueryHandler","handlers","mql","self","listener","currentTarget","assess","addListener","constuctor","qh","push","on","h","equals","destroy","splice","removeListener","action","deferSetup","setup","initialised","off","unmatch","path","replace","concat","hasOwnProperty","prcBlocks","groupBlocks","breakpoints","elms","initResponsiveGroupBlocks","responsiveBlocks","document","querySelectorAll","forEach","block","attachId","getAttribute","threshold","attachBlock","getElementById","console","log","includes","returnPoint","createElement","returnId","setAttribute","parentNode","insertBefore","nextSibling","addResponsiveBlock","enquire","viewportWidth","append","domReady","stickyBlocks","classList","add"],"mappings":";;;;;;;;;;;;;;;;;0HAAcA,EAAOC,QAAUC,OAAW,GAAY,U,kBCgBYF,EAAOC,QAAQ,CAACE,WAA/E,SAAoBC,GAAQ,MAAuB,mBAATA,GAA2DC,QALrG,SAAiBD,GAAQ,MAAiD,mBAA1CE,OAAOC,UAAUC,SAASC,MAAML,IAKqDM,KAXrH,SAAcC,EAAWC,GAA0C,IAAtC,IAAIC,EAAE,EAAEC,EAAOH,EAAWG,OAAkBD,EAAEC,IAA+C,IAA9BF,EAAGD,EAAWE,GAAGA,GAA3BA,S,oBCLrF,IAAIE,EAAmB,EAAQ,KAAwBf,EAAOC,QAAQ,IAAIc,G,oBCA1E,IAAIC,EAAW,EAAQ,KAAoBC,EAAK,EAAQ,KAAcP,EAAKO,EAAKP,KAASP,EAAWc,EAAKd,WAAeE,EAAQY,EAAKZ,QAKlI,SAASU,IAAqB,IAAIb,OAAOgB,WAAY,MAAM,IAAIC,MAAM,8DAA+DC,KAAKC,QAAQ,GAAGD,KAAKE,oBAAoBpB,OAAOgB,WAAW,YAAYK,QAASR,EAAmBR,UAAU,CAACiB,YAAYT,EAU1PU,SAAS,SAAkBC,EAAEC,EAAQC,GAAe,IAAIP,EAAQD,KAAKC,QAAQQ,EAAgBD,GAAeR,KAAKE,mBACoF,OAD7DD,EAAQK,KAAIL,EAAQK,GAAG,IAAIV,EAAWU,EAAEG,IACpL1B,EAAWwB,KAAUA,EAAQ,CAACG,MAAMH,IAActB,EAAQsB,KAAUA,EAAQ,CAACA,IAAUjB,EAAKiB,GAAQ,SAASI,GAAY5B,EAAW4B,KAAUA,EAAQ,CAACD,MAAMC,IAAUV,EAAQK,GAAGM,WAAWD,MAAmBX,MAK5Ma,WAAW,SAAoBP,EAAEK,GAAS,IAAIG,EAAMd,KAAKC,QAAQK,GAAmG,OAA7FQ,IAAUH,EAASG,EAAMC,cAAcJ,IAAeG,EAAME,eAAehB,KAAKC,QAAQK,KAAYN,OAAQpB,EAAOC,QAAQc,G,oBCrBzM,IAAIsB,EAAa,EAAQ,KAAsB3B,EAAK,EAAQ,KAAUA,KAMnE,SAASM,EAAWkB,EAAML,GAAiBT,KAAKc,MAAMA,EAAMd,KAAKS,gBAAgBA,EAAgBT,KAAKkB,SAAS,GAAGlB,KAAKmB,IAAIrC,OAAOgB,WAAWgB,GAAO,IAAIM,EAAKpB,KAAKA,KAAKqB,SAAS,SAASF,GAC5LC,EAAKD,IAAIA,EAAIG,eAAeH,EAAIC,EAAKG,UAAWvB,KAAKmB,IAAIK,YAAYxB,KAAKqB,UAAWzB,EAAWT,UAAU,CAACsC,WAAW7B,EAQ/GgB,WAAW,SAAoBD,GAAS,IAAIe,EAAG,IAAIT,EAAaN,GAASX,KAAKkB,SAASS,KAAKD,GAAI1B,KAAKG,WAAWuB,EAAGE,MAInHb,cAAc,SAAuBJ,GAAS,IAAIO,EAASlB,KAAKkB,SAAS5B,EAAK4B,GAAS,SAASW,EAAEpC,GAAG,GAAGoC,EAAEC,OAAOnB,GAAsB,OAAZkB,EAAEE,WAAiBb,EAASc,OAAOvC,EAAE,OAKhKU,QAAQ,WAAmB,OAAOH,KAAKmB,IAAIhB,SAASH,KAAKS,iBAEzDO,MAAM,WAAiB1B,EAAKU,KAAKkB,UAAS,SAASP,GAASA,EAAQoB,aAAa/B,KAAKmB,IAAIc,eAAejC,KAAKqB,UAAUrB,KAAKkB,SAASxB,OAAO,GAG1I6B,OAAO,WAAkB,IAAIW,EAAOlC,KAAKG,UAAU,KAAK,MAAMb,EAAKU,KAAKkB,UAAS,SAASP,GAASA,EAAQuB,UAAgBtD,EAAOC,QAAQe,G,kBCpBjJ,SAASqB,EAAaV,GAASP,KAAKO,QAAQA,GAASA,EAAQ4B,YAAYnC,KAAKoC,QAASnB,EAAa9B,UAAU,CAACiB,YAAYa,EAIvHmB,MAAM,WAAoBpC,KAAKO,QAAQ6B,OAAOpC,KAAKO,QAAQ6B,QAASpC,KAAKqC,aAAY,GAIrFT,GAAG,YAAe5B,KAAKqC,aAAarC,KAAKoC,QAAQpC,KAAKO,QAAQG,OAAOV,KAAKO,QAAQG,SAIlF4B,IAAI,WAAetC,KAAKO,QAAQgC,SAASvC,KAAKO,QAAQgC,WAKtDR,QAAQ,WAAmB/B,KAAKO,QAAQwB,QAAQ/B,KAAKO,QAAQwB,UAAU/B,KAAKsC,OAM5ER,OAAO,SAAgB9C,GAAQ,OAAOgB,KAAKO,UAAUvB,GAAQgB,KAAKO,QAAQG,QAAQ1B,IAAUJ,EAAOC,QAAQoC,G,mBCvBlG,IAAIuB,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwB3D,OAAO,YAAY4D,OAAOF,K,6ECVlD,8CAUM1D,OAAO6D,eAAe,eAC3B7D,OAAO8D,UAAY,IAEpB9D,OAAO8D,UAAUC,YAAc,CAC9BC,YAAa,GACbC,KAAM,IAGP,IAUMC,EAA4B,WAEjC,IA2DMC,EAAmBC,SAASC,iBAAiB,gCAC/CF,EAAiBvD,SACpBuD,EAAiBG,SAAQ,SAAAC,GACxB,IAAMC,EAAWD,EAAME,aAAa,kBAC9BC,EAAYH,EAAME,aAAa,6BAE/BE,EAAcP,SAASQ,eAAeJ,GAExCG,GAnEqB,SAACJ,EAAOI,EAAaD,GAC/CG,QAAQC,IAAI9E,OAAO8D,UAAUC,YAAYC,YAAaU,GAClD1E,OAAO8D,UAAUC,YAAYC,YAAYe,SAASL,IACrD1E,OAAO8D,UAAUC,YAAYC,YAAYnB,KAAK6B,GAE/CG,QAAQC,IAAI9E,OAAO8D,UAAUC,YAAYE,KAAMS,GAC3C1E,OAAO8D,UAAUC,YAAYE,KAAKJ,eAAea,KACpD1E,OAAO8D,UAAUC,YAAYE,KAAKS,GAAa,IAEhD1E,OAAO8D,UAAUC,YAAYE,KAAKS,GAAW7B,KAAK0B,GAGlD,IAAMS,EAAcZ,SAASa,cAAc,OACrCC,EAAWX,EAAME,aAAa,kBACpCO,EAAYG,aAAa,KAAMD,GAC/BL,QAAQC,IAAI,qBAAsBP,EAAOS,GACzCT,EAAMa,WAAWC,aAAaL,EAAaT,EAAMe,aAoD/CC,CAAmBhB,EAAOI,EAAaD,MA1BzCG,QAAQC,IAAI,wBAAyB9E,OAAO8D,UAAUC,aAEtD/D,OAAO8D,UAAUC,YAAYC,YAAYM,SAAQ,SAAAI,GAEhDc,IAAQjE,SAAR,iCAA2CmD,EAA3C,OAA2D,CAC1D9C,MAAQ,WA5BkB,IAAC6D,EA6B1BZ,QAAQC,IAAI,QAASJ,GA7BKe,EA8BLf,EA7BxB1E,OAAO8D,UAAUC,YAAYE,KAAKwB,GAAenB,SAAQ,SAAAC,GAExD,IAAMC,EAAWD,EAAME,aAAa,kBAC9BE,EAAcP,SAASQ,eAAeJ,GACvCG,GACJA,EAAYe,OAAOnB,OA0BnBd,QAAU,WArBkB,IAACgC,IAsBLf,EArB1B1E,OAAO8D,UAAUC,YAAYE,KAAKwB,GAAenB,SAAQ,SAAAC,GACxD,IAAMW,EAAWX,EAAME,aAAa,kBAC9BO,EAAcZ,SAASQ,eAAeM,GAEvCF,GACJA,EAAYI,WAAWC,aAAad,EAAOS,EAAYM,wBAwC3DK,KAAS,WAxFgB,IAClBC,EAwFN1B,KAxFM0B,EAAexB,SAASC,iBAAiB,6BAE9BzD,QAChBgF,EAAatB,SAAQ,SAAAC,GACpBA,EAAMsB,UAAUC,IAAI,kB","file":"frontend/group-ed5ed921.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"domReady\"]; }());","/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */function each(collection,fn){var i=0,length=collection.length,cont;for(i;i<length;i++){cont=fn(collection[i],i);if(cont===false){break;//allow early exit\n}}}/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */function isArray(target){return Object.prototype.toString.apply(target)==='[object Array]';}/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */function isFunction(target){return typeof target==='function';}module.exports={isFunction:isFunction,isArray:isArray,each:each};","var MediaQueryDispatch=require('./MediaQueryDispatch');module.exports=new MediaQueryDispatch();","var MediaQuery=require('./MediaQuery');var Util=require('./Util');var each=Util.each;var isFunction=Util.isFunction;var isArray=Util.isArray;/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */function MediaQueryDispatch(){if(!window.matchMedia){throw new Error('matchMedia not present, legacy browsers require a polyfill');}this.queries={};this.browserIsIncapable=!window.matchMedia('only all').matches;}MediaQueryDispatch.prototype={constructor:MediaQueryDispatch,/**\n     * Registers a handler for the given media query\n     *\n     * @param {string} q the media query\n     * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n     * @param {function} options.match fired when query matched\n     * @param {function} [options.unmatch] fired when a query is no longer matched\n     * @param {function} [options.setup] fired when handler first triggered\n     * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n     * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n     */register:function register(q,options,shouldDegrade){var queries=this.queries,isUnconditional=shouldDegrade&&this.browserIsIncapable;if(!queries[q]){queries[q]=new MediaQuery(q,isUnconditional);}//normalise to object in an array\nif(isFunction(options)){options={match:options};}if(!isArray(options)){options=[options];}each(options,function(handler){if(isFunction(handler)){handler={match:handler};}queries[q].addHandler(handler);});return this;},/**\n     * unregisters a query and all it's handlers, or a specific handler for a query\n     *\n     * @param {string} q the media query to target\n     * @param {object || function} [handler] specific handler to unregister\n     */unregister:function unregister(q,handler){var query=this.queries[q];if(query){if(handler){query.removeHandler(handler);}else{query.clear();delete this.queries[q];}}return this;}};module.exports=MediaQueryDispatch;","var QueryHandler=require('./QueryHandler');var each=require('./Util').each;/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */function MediaQuery(query,isUnconditional){this.query=query;this.isUnconditional=isUnconditional;this.handlers=[];this.mql=window.matchMedia(query);var self=this;this.listener=function(mql){// Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\nself.mql=mql.currentTarget||mql;self.assess();};this.mql.addListener(this.listener);}MediaQuery.prototype={constuctor:MediaQuery,/**\n     * add a handler for this query, triggering if already active\n     *\n     * @param {object} handler\n     * @param {function} handler.match callback for when query is activated\n     * @param {function} [handler.unmatch] callback for when query is deactivated\n     * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n     * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n     */addHandler:function addHandler(handler){var qh=new QueryHandler(handler);this.handlers.push(qh);this.matches()&&qh.on();},/**\n     * removes the given handler from the collection, and calls it's destroy methods\n     *\n     * @param {object || function} handler the handler to remove\n     */removeHandler:function removeHandler(handler){var handlers=this.handlers;each(handlers,function(h,i){if(h.equals(handler)){h.destroy();return!handlers.splice(i,1);//remove from array and exit each early\n}});},/**\n     * Determine whether the media query should be considered a match\n     *\n     * @return {Boolean} true if media query can be considered a match, false otherwise\n     */matches:function matches(){return this.mql.matches||this.isUnconditional;},/**\n     * Clears all handlers and unbinds events\n     */clear:function clear(){each(this.handlers,function(handler){handler.destroy();});this.mql.removeListener(this.listener);this.handlers.length=0;//clear array\n},/*\n        * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n        */assess:function assess(){var action=this.matches()?'on':'off';each(this.handlers,function(handler){handler[action]();});}};module.exports=MediaQuery;","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */function QueryHandler(options){this.options=options;!options.deferSetup&&this.setup();}QueryHandler.prototype={constructor:QueryHandler,/**\n     * coordinates setup of the handler\n     *\n     * @function\n     */setup:function setup(){if(this.options.setup){this.options.setup();}this.initialised=true;},/**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */on:function on(){!this.initialised&&this.setup();this.options.match&&this.options.match();},/**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */off:function off(){this.options.unmatch&&this.options.unmatch();},/**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */destroy:function destroy(){this.options.destroy?this.options.destroy():this.off();},/**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */equals:function equals(target){return this.options===target||this.options.match===target;}};module.exports=QueryHandler;","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * External Dependencies\n */\nimport enquire from 'enquire.js';\n\n/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\nif ( !window.hasOwnProperty('prcBlocks') ) {\n\twindow.prcBlocks = {};\n}\nwindow.prcBlocks.groupBlocks = {\n\tbreakpoints: [],\n\telms: {},\n};\n\nconst initStickyBlocks = () => {\n\tconst stickyBlocks = document.querySelectorAll('.prc-group-block--sticky');\n\t// If there are any sticky blocks init them.\n\tif (stickyBlocks.length) {\n\t\tstickyBlocks.forEach(block => {\n\t\t\tblock.classList.add('sticky');\n\t\t});\n\t}\n}\n\nconst initResponsiveGroupBlocks = () => {\n\t// Helper Functions:\n\tconst addResponsiveBlock = (block, attachBlock, threshold) => {\n\t\tconsole.log(window.prcBlocks.groupBlocks.breakpoints, threshold);\n\t\tif(!window.prcBlocks.groupBlocks.breakpoints.includes(threshold)) {\n\t\t\twindow.prcBlocks.groupBlocks.breakpoints.push(threshold);\n\t\t}\n\t\tconsole.log(window.prcBlocks.groupBlocks.elms, threshold);\n\t\tif(!window.prcBlocks.groupBlocks.elms.hasOwnProperty(threshold)) {\n\t\t\twindow.prcBlocks.groupBlocks.elms[threshold] = [];\n\t\t}\n\t\twindow.prcBlocks.groupBlocks.elms[threshold].push(block);\n\n\t\t// Create return point.\n\t\tconst returnPoint = document.createElement('div');\n\t\tconst returnId = block.getAttribute('data-return-id');\n\t\treturnPoint.setAttribute('id', returnId);\n\t\tconsole.log('addResponsiveBlock', block, returnPoint);\n\t\tblock.parentNode.insertBefore(returnPoint, block.nextSibling)\n\t}\n\n\tconst matchResponsiveBlock = (viewportWidth) => {\n\t\twindow.prcBlocks.groupBlocks.elms[viewportWidth].forEach(block => {\n\t\t\t// We should remove the sticky class if it exists.\n\t\t\tconst attachId = block.getAttribute('data-attach-id');\n\t\t\tconst attachBlock = document.getElementById(attachId);\n\t\t\tif ( attachBlock ){\n\t\t\t\tattachBlock.append(block);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst unmatchResponsiveBlock = (viewportWidth) => {\n\t\twindow.prcBlocks.groupBlocks.elms[viewportWidth].forEach(block => {\n\t\t\tconst returnId = block.getAttribute('data-return-id');\n\t\t\tconst returnPoint = document.getElementById(returnId);\n\t\t\t// If the sticky class should be here re-add it.\n\t\t\tif ( returnPoint ){\n\t\t\t\treturnPoint.parentNode.insertBefore(block, returnPoint.nextSibling)\n\t\t\t}\n\t\t});\n\t}\n\n\tconst watchResponsiveBlocks = () => {\n\t\tconsole.log('watchResponsiveBlocks', window.prcBlocks.groupBlocks);\n\n\t\twindow.prcBlocks.groupBlocks.breakpoints.forEach(threshold => {\n\t\t\t// Register the enquire listener.\n\t\t\tenquire.register(`screen and (max-width: ${threshold}px)`, {\n\t\t\t\tmatch : () => {\n\t\t\t\t\tconsole.log('match', threshold);\n\t\t\t\t\tmatchResponsiveBlock(threshold);\n\t\t\t\t},\n\t\t\t\tunmatch : () => {\n\t\t\t\t\tunmatchResponsiveBlock(threshold);\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\t// If there are any resposnive blocks init them.\n\tconst responsiveBlocks = document.querySelectorAll('.prc-group-block--responsive');\n\tif (responsiveBlocks.length) {\n\t\tresponsiveBlocks.forEach(block => {\n\t\t\tconst attachId = block.getAttribute('data-attach-id');\n\t\t\tconst threshold = block.getAttribute('data-responsive-threshold');\n\n\t\t\tconst attachBlock = document.getElementById(attachId);\n\t\t\t// If we have an attach point then init the responsive block.\n\t\t\tif (attachBlock) {\n\t\t\t\taddResponsiveBlock(block, attachBlock, threshold);\n\t\t\t}\n\t\t});\n\t\t// Watch for changes in the viewport.\n\t\twatchResponsiveBlocks();\n\t}\n}\n\ndomReady(() => {\n\tinitResponsiveGroupBlocks();\n\tinitStickyBlocks();\n});\n"],"sourceRoot":""}