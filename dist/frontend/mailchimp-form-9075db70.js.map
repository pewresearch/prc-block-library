{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-form/component.js","webpack:///./src/mailchimp-form/frontend.js","webpack:///external \"ReactDOM\"","webpack:///external \"wp.apiFetch\""],"names":["module","exports","React","wp","domReady","element","MailchimpForm","display","interest","className","useState","buttonText","changeButtonText","success","toggleSuccess","error","toggleError","loading","toggleLoading","emailAddress","setEmail","subscribed","Icon","name","Form","onSubmit","e","preventDefault","email","setTimeout","apiFetch","path","method","then","catch","code","console","info","Field","Input","placeholder","data-validate","required","onChange","target","value","Button","secondary","positive","negative","icon","log","document","querySelector","querySelectorAll","forEach","elm","props","getAttribute","render","ReactDOM"],"mappings":";;;;;;;;;;;;;;;;;yHAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,U,iBCApBJ,EAAOC,QAAUE,GAAGE,S,iLC0FLC,G,OA9EO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAAgB,EACjBC,mBAAS,WADQ,mBACjDC,EADiD,KACrCC,EADqC,OAEvBF,oBAAS,GAFc,mBAEjDG,EAFiD,KAExCC,EAFwC,OAG3BJ,oBAAS,GAHkB,mBAGjDK,EAHiD,KAG1CC,EAH0C,OAIvBN,oBAAS,GAJc,mBAIjDO,EAJiD,KAIxCC,EAJwC,OAKvBR,mBAAS,IALc,mBAKjDS,EALiD,KAKnCC,EALmC,KAOlDC,EAAa,WACfL,GAAY,GACZE,GAAc,GACdJ,GAAc,GACdF,EAAiB,oBAACU,EAAA,EAAD,CAAMC,KAAK,kBAC5BH,EAAS,KAsCb,OACI,2BAAKX,UAAWA,GACZ,oBAACe,EAAA,EAAD,CAAMf,UAAU,YAAYM,MAAOA,EAAOU,SArC5B,SAAAC,GAGlB,GAFAA,EAAEC,kBAEE,IAASpB,EAAb,CAIA,IAAMqB,EAAQT,EAEdD,GAAc,GAEdW,YAAW,WACPC,IAAS,CACLC,KAAK,0CAAD,OAA4CH,EAA5C,sBAA+DpB,GACnEwB,OAAQ,SAEPC,MAAK,WACFZ,OAEHa,OAAM,SAAAR,GACHR,GAAc,GACV,qBAAuBQ,EAAES,MACzBd,IACAe,QAAQC,KAAR,UACOlB,EADP,kCAC6CX,MAG7CM,GAAc,GACdE,GAAY,GACZJ,EAAiB,eAG9B,QAMK,oBAACY,EAAA,EAAKc,MAAN,KACI,oBAACd,EAAA,EAAKe,MAAN,CACIC,YAAY,gBACZC,gBAAc,WACdC,UAAQ,EACRC,SAAU,SAAAjB,GACNN,EAASM,EAAEkB,OAAOC,QAEtBA,MAAO1B,IAEX,oBAACK,EAAA,EAAKsB,OAAN,CACIC,WAAS,EACTC,SAAUnC,EACVoC,SAAUlC,EACVE,QAASA,EACTiC,KAAMrC,GAELF,QCrEzBP,KAAS,YACLgC,QAAQe,IAAI,sBACRC,SAASC,cAAc,wCACTD,SAASE,iBACnB,sCAEEC,SAAQ,SAAAC,GACV,IAAMC,EAAQ,CACVlD,SAAS,EACTC,SAAUgD,EAAIE,aAAa,mBAC3BjD,UAAW+C,EAAIE,aAAa,UAEhCC,iBAAO,oBAAC,EAAkBF,GAAWD,U,iBCzBjDxD,EAAOC,QAAU2D,U,iBCAjB5D,EAAOC,QAAUE,GAAG2B,W","file":"frontend/mailchimp-form-9075db70.js","sourcesContent":["module.exports = React;","module.exports = wp.domReady;","module.exports = wp.element;","/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { Form, Icon } from 'semantic-ui-react';\nimport './style.scss';\n\nconst MailchimpForm = ({ display, interest, className }) => {\n    const [buttonText, changeButtonText] = useState('SIGN UP');\n    const [success, toggleSuccess] = useState(false);\n    const [error, toggleError] = useState(false);\n    const [loading, toggleLoading] = useState(false);\n    const [emailAddress, setEmail] = useState('');\n\n    const subscribed = () => {\n        toggleError(false);\n        toggleLoading(false);\n        toggleSuccess(true);\n        changeButtonText(<Icon name=\"check circle\" />);\n        setEmail('');\n    };\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        if (true !== display) {\n            return; // Never allow running this from inside Gutenberg.\n        }\n\n        const email = emailAddress;\n\n        toggleLoading(true);\n\n        setTimeout(() => {\n            apiFetch({\n                path: `/prc-api/v2/mailchimp/subscribe/?email=${email}&interests=${interest}`,\n                method: 'POST',\n            })\n                .then(() => {\n                    subscribed();\n                })\n                .catch(e => {\n                    toggleLoading(false);\n                    if ('add-member-error' === e.code) {\n                        subscribed();\n                        console.info(\n                            `${emailAddress} already subscribed to ${interest}`,\n                        );\n                    } else {\n                        toggleSuccess(false);\n                        toggleError(true);\n                        changeButtonText('ERROR');\n                    }\n                });\n        }, 2000);\n    };\n\n    return (\n        <div className={className}>\n            <Form className=\"mailchimp\" error={error} onSubmit={submitHandler}>\n                <Form.Field>\n                    <Form.Input\n                        placeholder=\"Email address\"\n                        data-validate=\"mc-email\"\n                        required\n                        onChange={e => {\n                            setEmail(e.target.value);\n                        }}\n                        value={emailAddress}\n                    />\n                    <Form.Button\n                        secondary\n                        positive={success}\n                        negative={error}\n                        loading={loading}\n                        icon={success}\n                    >\n                        {buttonText}\n                    </Form.Button>\n                </Form.Field>\n            </Form>\n        </div>\n    );\n};\n\nexport default MailchimpForm;\n","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal dependencies\n */\nimport MailchimpForm from './component';\nimport './style.scss';\n\n// When the document is fully loaded load the mailchimp-form.\ndomReady(() => {\n    console.log('MailChimpForm Init');\n    if (document.querySelector('.wp-block-prc-block-mailchimp-form')) {\n        const forms = document.querySelectorAll(\n            '.wp-block-prc-block-mailchimp-form',\n        );\n        forms.forEach(elm => {\n            const props = {\n                display: true,\n                interest: elm.getAttribute('data-segment-id'),\n                className: elm.getAttribute('class'),\n            };\n            render(<MailchimpForm {...props} />, elm);\n        });\n    }\n});\n","module.exports = ReactDOM;","module.exports = wp.apiFetch;"],"sourceRoot":""}