{"version":3,"sources":["webpack:///external [\"wp\",\"domReady\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/cover/frontend.js"],"names":["module","exports","window","path","replace","concat","essayCoverMobileToggle","covers","document","querySelectorAll","vw","documentElement","clientWidth","forEach","cover","el","referenceNode","content","querySelector","nextElementSibling","classList","remove","appendChild","toggle","parentNode","insertBefore","nextSibling","addEventListener","domReady"],"mappings":";;;;;;;;;;;;;;;;;0HAAcA,EAAOC,QAAUC,OAAW,GAAY,U,mBCStC,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOF,K,yGCI5CG,EAAyB,WAC3B,IAAMC,EAASC,SAASC,iBAAiB,kCACnCC,EAAKF,SAASG,gBAAgBC,YACpCL,EAAOM,SAAQ,SAAAC,GACX,IARaC,EAAIC,EAQXC,EAAUH,EAAMI,cAAc,oCAGhC,KAAOR,IACNI,EAAMI,cAAc,sCAErBJ,EAAMK,mBAAmBC,UAAUC,OAC/B,gCAEJP,EAAMQ,YAAYR,EAAMK,qBAExB,KAAOT,GAAM,OAASO,IACtBA,EAAQG,UAAUG,OAAO,gCApBhBR,EAqBGE,GArBCD,EAqBQF,GApBfU,WAAWC,aAAaV,EAAIC,EAAcU,kBAyB5DxB,OAAOyB,iBAAiB,SAAUrB,GAElCsB,KAAS,WACLtB,S","file":"frontend/cover-cb5ac68b.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"domReady\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\n\nconst insertAfter = (el, referenceNode) => {\n    referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n};\n\nconst essayCoverMobileToggle = () => {\n    const covers = document.querySelectorAll('.wp-block-cover.is-style-essay');\n    const vw = document.documentElement.clientWidth;\n    covers.forEach(cover => {\n        const content = cover.querySelector('.wp-block-cover__inner-container');\n        // If tablet+ and the inner container is not present then move it back\n        if (\n            741 <= vw &&\n            !cover.querySelector('.wp-block-cover__inner-container')\n        ) {\n            cover.nextElementSibling.classList.remove(\n                'is-style-mobile-essay-header',\n            );\n            cover.appendChild(cover.nextElementSibling);\n        }\n        if (740 >= vw && null !== content) {\n            content.classList.toggle('is-style-mobile-essay-header');\n            insertAfter(content, cover);\n        }\n    });\n};\n\nwindow.addEventListener('resize', essayCoverMobileToggle);\n\ndomReady(() => {\n    essayCoverMobileToggle();\n});\n"],"sourceRoot":""}