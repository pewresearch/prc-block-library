{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.i18n\"","webpack:///./src/collapsible/frontend.js"],"names":["module","exports","React","wp","element","domReady","i18n","CollapsibleBlock","title","style","children","defaultOpen","useState","isOpen","setOpen","icon","styled","Title","active","index","onClick","name","__","marginLeft","Content","collapsibleBlocks","document","querySelectorAll","length","forEach","elm","innerHTML","getAttribute","render"],"mappings":";;;;;;;;;;;;;;;;;yHAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,S,gBCApBJ,EAAOC,QAAUE,GAAGE,U,iBCApBL,EAAOC,QAAUE,GAAGG,M,6ICYdC,EAAmB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAoC,IAA1BC,mBAA0B,WAChDC,mBAASD,GADuC,mBACnEE,EADmE,KAC3DC,EAD2D,KAGtEC,EAAOF,EAAS,aAAe,cAKnC,MAJI,uBAAyBJ,IACzBM,EAAOF,EAAS,QAAU,QAI1B,oBAAC,IAAD,CAAWG,QAAM,GACb,oBAAC,IAAUC,MAAX,CACIC,QAAQ,IAASL,EACjBM,MAAO,EACPC,QAAS,WACLN,GAASD,KAGb,oBAAC,WAAD,KACK,uBAAyBJ,GACtB,oBAAC,IAAD,CACIY,KAAMN,EACNK,QAAS,WACLN,GAASD,MAIpBS,aAAGd,GACH,uBAAyBC,GACtB,oBAAC,IAAD,CACIY,KAAMN,EACNN,MAAO,CAAEc,WAAY,SACrBH,QAAS,WACLN,GAASD,QAM7B,oBAAC,IAAUW,QAAX,CAAmBN,QAAQ,IAASL,GAChC,oBAAC,UAAD,KAAUH,MAM1BL,KAAS,WACL,IAAMoB,EAAoBC,SAASC,iBAC/B,yBAEA,GAAKF,EAAkBG,QACvBH,EAAkBI,SAAQ,SAAAC,GACtB,IAAMpB,EAAWoB,EAAIC,UACfvB,EAAQsB,EAAIE,aAAa,cACzBvB,EAAQqB,EAAIE,aAAa,cAC/BC,iBACI,oBAAC1B,EAAD,CAAkBC,MAAOA,EAAOC,MAAOA,GAClCC,GAELoB,W","file":"frontend/collapsible-eb19fe75.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","module.exports = wp.domReady;","module.exports = wp.i18n;","/**\n * External dependencies\n */\nimport { Accordion, Icon } from 'semantic-ui-react';\n\n/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, Fragment, RawHTML, render } from '@wordpress/element';\n\nconst CollapsibleBlock = ({ title, style, children, defaultOpen = false }) => {\n    const [isOpen, setOpen] = useState(defaultOpen);\n\n    let icon = isOpen ? 'caret down' : 'caret right';\n    if ('is-style-alternate' === style) {\n        icon = isOpen ? 'minus' : 'plus';\n    }\n\n    return (\n        <Accordion styled>\n            <Accordion.Title\n                active={true === isOpen}\n                index={0}\n                onClick={() => {\n                    setOpen(!isOpen);\n                }}\n            >\n                <Fragment>\n                    {'is-style-alternate' !== style && (\n                        <Icon\n                            name={icon}\n                            onClick={() => {\n                                setOpen(!isOpen);\n                            }}\n                        />\n                    )}\n                    {__(title)}\n                    {'is-style-alternate' === style && (\n                        <Icon\n                            name={icon}\n                            style={{ marginLeft: '0.5em' }}\n                            onClick={() => {\n                                setOpen(!isOpen);\n                            }}\n                        />\n                    )}\n                </Fragment>\n            </Accordion.Title>\n            <Accordion.Content active={true === isOpen}>\n                <RawHTML>{children}</RawHTML>\n            </Accordion.Content>\n        </Accordion>\n    );\n};\n\ndomReady(() => {\n    const collapsibleBlocks = document.querySelectorAll(\n        '.js-react-collapsible',\n    );\n    if (1 <= collapsibleBlocks.length) {\n        collapsibleBlocks.forEach(elm => {\n            const children = elm.innerHTML;\n            const title = elm.getAttribute('data-title');\n            const style = elm.getAttribute('data-style');\n            render(\n                <CollapsibleBlock title={title} style={style}>\n                    {children}\n                </CollapsibleBlock>,\n                elm,\n            );\n        });\n    }\n});\n"],"sourceRoot":""}