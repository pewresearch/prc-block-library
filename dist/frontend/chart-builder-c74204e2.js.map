{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///external \"regeneratorRuntime\"","webpack:///external \"wp.domReady\"","webpack:///external \"lodash\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.data\"","webpack:///./src/chart-builder/utils/colors.js","webpack:///./src/chart-builder/utils/helpers.js","webpack:///./src/chart-builder/frontend.js","webpack:///external \"wp.apiFetch\""],"names":["module","exports","React","wp","element","regeneratorRuntime","domReady","lodash","i18n","data","colors","general","stringToArrayOfNums","str","split","map","Number","filter","num","isNaN","getDomain","min","max","type","scale","axis","orientation","Date","parseFloat","renderCharts","document","querySelectorAll","forEach","chart","renderEl","querySelector","config","el","ticks","layout","masterConfig","xAxis","yAxis","hash","dataset","chartHash","json","window","chartConfigs","xTicks","xTickExact","yTicks","yTickExact","chartType","chartOrientation","width","height","padding","top","paddingTop","bottom","paddingBottom","left","paddingLeft","right","paddingRight","active","xAxisActive","label","xLabel","xScale","dateFormat","xScaleFormat","domain","xMinDomain","xMaxDomain","tickCount","xTickNum","tickValues","length","tick","domainPadding","xDomainPadding","stroke","xAxisStroke","grid","xGridStroke","yAxisActive","yScale","yScaleFormat","yTickNum","yMinDomain","yMaxDomain","yDomainPadding","showZero","showYMinDomainLabel","yAxisStroke","yGridStroke","dataRender","xFormat","yFormat","sortKey","sortOrder","tooltip","tooltipActive","format","tooltipFormat","animate","duration","line","interpolation","lineInterpolation","showPoints","lineNodes","showArea","strokeWidth","lineStrokeWidth","pointSize","nodeSize","pointStrokeWidth","nodeStroke","areaFillOpacity","legend","legendPosition","bar","barWidth","barToSpaceRatio","groupOffset","barGroupOffset","scatter","nodes","size","fill","nodeFill","labels","labelsActive","color","fontWeight","fontSize","labelPositionDX","labelPositionDY","labelBarPosition","barLabelPosition","labelCutoff","barLabelCutoff","labelCutoffMobile","barLabelCutoffMobile","pieLabelRadius","legendActive","legendOrientation","title","legendTitle","offsetX","legendOffsetX","offsetY","legendOffsetY","markerStyle","legendMarkerStyle","borderStroke","legendBorderStroke","legendFill","metadata","metaTextActive","metaTitle","subtitle","metaSubtitle","note","metaNote","source","metaSource","tag","metaTag","customColors","colorObj","colorValue","getConfig","dataArrStr","innerText","dataArr","JSON","parse","dataObj","arr","headers","categories","body","seriesData","scaleData","getTime","i","series","row","x","y","category","yLabel","push","arrayToDataObj","formattedData","panes","menuItem","render","horizontalRules","Table","celled","Header","Row","cell","Cell","Body","Tab","id","apiFetch"],"mappings":"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","file":"frontend/chart-builder-c74204e2.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","module.exports = regeneratorRuntime;","module.exports = wp.domReady;","module.exports = lodash;","module.exports = wp.i18n;","module.exports = wp.data;","const colors = {\n  general: ['#436983', '#bf3927', '#756a7e', '#ea9e2c'],\n  'politics-main': ['#d1a730', '#a55a26', '#949d48'],\n  'global-main': ['#949d48', '#006699', '#a55a26'],\n  'religion-main': ['#0090bf', '#a55a26', '#949d48'],\n  'social-trends-main': ['#377668', '#d1a730', '#949d48'],\n  'journalism-main': ['#733d47', '#d1a730', '#949d48'],\n  'internet-main': ['#006699', '#949d48', '#d1a730'],\n  'hispanic-main': ['#a55a26', '#d1a730', '#949d48'],\n  'politics-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'global-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'religion-spectrum': [\n    '#0090C0',\n    '#C9DEEE',\n    '#9DC7E1',\n    '#71B2D6',\n    '#0073A5',\n    '#00557E',\n  ],\n  'journalism-spectrum': [\n    '#733D47',\n    '#E8D3D7',\n    '#D1A8AF',\n    '#BC7B86',\n    '#552E35',\n    '#391E22',\n  ],\n  'social-trends-spectrum': [\n    '#387668',\n    '#D1E9E4',\n    '#A2D2C8',\n    '#64B6AA',\n    '#005645',\n    '#003A2C',\n  ],\n  'hispanic-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'internet-spectrum': [\n    '#006699',\n    '#C9D1E1',\n    '#9DAECB',\n    '#7591B7',\n    '#004A75',\n    '#002748',\n  ],\n  'blue-spectrum': [\n    '#456A83',\n    '#D5E1E9',\n    '#ACC4D3',\n    '#82A6BF',\n    '#335062',\n    '#213441',\n  ],\n  'green-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'purple-spectrum': [\n    '#746A7E',\n    '#E3E1E5',\n    '#C7C1CB',\n    '#ACA4B1',\n    '#584F5E',\n    '#3A343F',\n  ],\n  'medium-brown-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'light-brown-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'orange-spectrum': [\n    '#EA9E2C',\n    '#F9EAD4',\n    '#F5D6A9',\n    '#F1C37F',\n    '#BB792A',\n    '#7C5220',\n  ],\n  'red-spectrum': [\n    '#BF3B27',\n    '#F5D4CF',\n    '#EBABA2',\n    '#E37F73',\n    '#902D1E',\n    '#5F1D14',\n  ],\n};\n\nconst colorNames = [\n  { label: 'General', value: 'general' },\n  { label: 'Politics Main', value: 'politics-main' },\n  { label: 'Global Main', value: 'global-main' },\n  { label: 'Religion Main', value: 'religion-main' },\n  {\n    label: 'Social Trends Main',\n    value: 'social-trends-main',\n  },\n  { label: 'Journalism Main', value: 'journalism-main' },\n  { label: 'Internet Main', value: 'internet-main' },\n  { label: 'Hispanic Main', value: 'hispanic-main' },\n  {\n    label: 'Politics Spectrum',\n    value: 'politics-spectrum',\n  },\n  { label: 'Global Spectrum', value: 'global-spectrum' },\n  {\n    label: 'Religion Spectrum',\n    value: 'religion-spectrum',\n  },\n  {\n    label: 'Social Trends Spectrum',\n    value: 'social-trends-spectrum',\n  },\n  {\n    label: 'Journalism Spectrum',\n    value: 'journalism-spectrum',\n  },\n  {\n    label: 'Internet Spectrum',\n    value: 'internet-spectrum',\n  },\n  {\n    label: 'Hispanic Spectrum',\n    value: 'hispanic-spectrum',\n  },\n  { label: 'Blue Spectrum', value: 'blue-spectrum' },\n  { label: 'Green Spectrum', value: 'green-spectrum' },\n  { label: 'Purple Spectrum', value: 'purple-spectrum' },\n  {\n    label: 'Medium Brown Spectrum',\n    value: 'medium-brown-spectrum',\n  },\n  {\n    label: 'Light Brown Spectrum',\n    value: 'light-brown-spectrum',\n  },\n  { label: 'Orange Spectrum', value: 'orange-spectrum' },\n  { label: 'Red Spectrum', value: 'red-spectrum' },\n];\n\nexport { colors, colorNames };\n","/**\n * Wordpress dependencies\n */\nimport { useDispatch } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n/**\n * External dependencies\n */\nimport html2canvas from 'html2canvas';\n\n// Transform data from table block into json useable for chart builder\nexport const formattedData = (data, scale, chartType) => {\n    const { body, tableHeaders } = data;\n    const seriesData = [];\n    const scaleData = (data, scale) => {\n        if (\n            chartType === 'bar' ||\n            chartType === 'stacked-bar' ||\n            chartType === 'pie' ||\n            chartType === 'dot-plot'\n        ) {\n            return data;\n        }\n        if (scale === 'time') {\n            return new Date(data).getTime();\n        }\n        return parseFloat(data);\n    };\n\n    // if (chartType === 'dot-plot') {\n    //     for (let i = 0; i < body.length; i++) {\n    //         const row = {};\n    //         for (let j = 0; j < headers.length; j++) {\n    //             if (j === 0) {\n    //                 row['y'] = body[i].cells[j].content;\n    //             }\n    //             if (j === 1) {\n    //                 row.x = parseFloat(body[i].cells[j].content);\n    //                 row.x__label = headers[j].content;\n    //             }\n    //             if (j > 1) {\n    //                 row[`x${j}`] = parseFloat(body[i].cells[j].content);\n    //                 row[`x${j}__label`] = body[i].cells[j].content;\n    //             }\n    //         }\n    //         seriesData.push(row);\n    //     }\n    // } else {\n    for (var i = 1; i < tableHeaders.length; i++) {\n        var series = body\n            .filter((row) => !isNaN(parseFloat(row.cells[i].content)))\n            .map((row) => ({\n                x: scaleData(row.cells[0].content, scale),\n                y: parseFloat(row.cells[i].content),\n                category: tableHeaders[i],\n                yLabel: `${parseFloat(row.cells[i].content)}`,\n            }));\n        seriesData.push(series);\n    }\n    // }\n    return seriesData;\n};\n\nexport const stringToArrayOfNums = (str) => {\n    return str\n        .split(',')\n        .map(Number)\n        .filter((num) => !isNaN(num));\n};\n\nexport const getDomain = (min, max, type, scale, axis, orientation) => {\n    if (isNaN(min) || isNaN(max)) {\n        return [0, 100];\n    }\n    // x axis is a bit of a misnomer for bar types. It refers exclusively to the dependent axis.\n    if (type === 'bar' && axis === 'x') {\n        return null;\n    }\n    if (type === 'stacked-bar' && axis === 'x') {\n        return null;\n    }\n    if (type === 'dot-plot' && axis === 'x') {\n        return null;\n    }\n    // likewise, no domain for a pie chart\n    if (type === 'pie') {\n        return null;\n    }\n    if (scale === 'time' && axis === 'x') {\n        return [new Date(min, 0), new Date(max, 0)];\n    }\n    return [parseFloat(min), parseFloat(max)];\n};\n\nexport const getTicks = (ticks, scale) => {\n    if (scale === 'time') {\n        return ticks.map((tick) => new Date(`${tick}`));\n    }\n    return ticks;\n};\n\nexport const formatNum = (num, output) => {\n    if (typeof num === 'string' && output === 'integer') {\n        return parseInt(num);\n    }\n    if (typeof num === 'string' && output === 'float') {\n        return parseFloat(num);\n    }\n    return num;\n};\n\nexport const uploadToMediaLibrary = (blob, name, type) => {\n    uploadMedia({\n        filesList: [\n            new File([blob], name, {\n                type,\n            }),\n        ],\n        onFileChange: ([fileObj]) => {\n            console.log(fileObj);\n            const { editPost } = dispatch('core/editor');\n            editPost({ featured_media: fileObj.id });\n        },\n        onError: console.error,\n    });\n};\n\nexport const createHTMLCanvas = (clientId) => {\n    const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n    html2canvas(blockEl).then((canvas) => {\n        canvas.toBlob(\n            function (blob) {\n                uploadToMediaLibrary(\n                    blob,\n                    `chart-${clientId}-${Date.now()}.png`,\n                    'image/png',\n                );\n            },\n            'image/png',\n            1,\n        );\n    });\n};\n\nexport const createSvg = (clientId) => {\n    const blockEl = document.querySelector(`[data-block=\"${clientId}\"]`);\n    const svg = blockEl.querySelector('svg');\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    console.log(svg.outerHTML);\n    var blob = new Blob([svg.outerHTML], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n    console.log({ blob, url });\n    upload(blob, `chart-${clientId}-${Date.now()}.svg`, 'image/svg+xml');\n};\n","/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { render, Fragment } from '@wordpress/element';\n/**\n * External dependencies\n */\nimport { Tab, Table } from 'semantic-ui-react';\nimport {\n    ChartBuilderWrapper,\n    ChartBuilderTextWrapper,\n    masterConfig,\n} from '@pewresearch/pew-chart-builder/dist';\n/**\n * Internal  dependencies\n */\nimport { colors as colorObj } from './utils/colors';\nimport { stringToArrayOfNums, getDomain, getTicks } from './utils/helpers';\nimport './styles.css';\n\nconst getConfig = (el) => {\n    const { layout, xAxis, yAxis } = masterConfig;\n    const hash = el.dataset.chartHash;\n    const json = window.chartConfigs[hash];\n    const xTicks = stringToArrayOfNums(json.xTickExact);\n    const yTicks = stringToArrayOfNums(json.yTickExact);\n    const config = {\n        ...masterConfig,\n        layout: {\n            ...layout,\n            type: json.chartType,\n            orientation: json.chartOrientation,\n            width: json.width,\n            height: json.height,\n            padding: {\n                top: json.paddingTop,\n                bottom: json.paddingBottom,\n                left: json.paddingLeft,\n                right: json.paddingRight,\n            },\n        },\n        // NOTE: xAxis is typically the dependent axis, except for when we've got a horizontal bar chart or dot plot\n        xAxis: {\n            ...xAxis,\n            active: json.xAxisActive,\n            label: json.xLabel,\n            scale: json.xScale,\n            dateFormat: json.xScaleFormat,\n            domain: getDomain(\n                json.xMinDomain,\n                json.xMaxDomain,\n                json.chartType,\n                json.xScale,\n                'x',\n                json.chartOrientation,\n            ),\n            padding: 50,\n            tickCount: json.xTickNum,\n            tickValues: xTicks.length <= 1 ? null : getTicks(xTicks, xScale),\n            domainPadding: json.xDomainPadding,\n            axis: {\n                stroke: json.xAxisStroke,\n            },\n            grid: {\n                stroke: json.xGridStroke,\n            },\n        },\n        yAxis: {\n            ...yAxis,\n            active: json.yAxisActive,\n            scale: json.yScale,\n            dateFormat: json.yScaleFormat,\n            padding: 20,\n            tickCount: json.yTickNum,\n            tickValues: yTicks.length <= 1 ? null : yTicks,\n            domain: getDomain(\n                json.yMinDomain,\n                json.yMaxDomain,\n                json.chartType,\n                json.yScale,\n                'y',\n                json.chartOrientation,\n            ),\n            domainPadding: json.yDomainPadding,\n            showZero: json.showYMinDomainLabel,\n            axis: {\n                stroke: json.yAxisStroke,\n            },\n            grid: {\n                stroke: json.yGridStroke,\n            },\n        },\n        dataRender: {\n            ...masterConfig.dataRender,\n            xScale: json.xScale,\n            yScale: json.yScale,\n            xFormat: json.xScaleFormat,\n            yFormat: json.yScaleFormat,\n            sortKey: 'x',\n            sortOrder: json.sortOrder,\n            // categories: categoryArray,\n        },\n        tooltip: {\n            active: json.tooltipActive,\n            format: json.tooltipFormat,\n        },\n        animate: {\n            active: false,\n            duration: 500,\n        },\n        line: {\n            ...masterConfig.line,\n            interpolation: json.lineInterpolation,\n            showPoints: json.lineNodes,\n            showArea: json.chartType === 'area' ? true : false,\n            strokeWidth: json.lineStrokeWidth,\n            pointSize: json.nodeSize,\n            pointStrokeWidth: json.nodeStroke,\n            areaFillOpacity: json.areaFillOpacity,\n        },\n        legend: {\n            active: false,\n            legendPosition: 'top',\n        },\n        bar: {\n            ...masterConfig.bar,\n            width: json.barWidth,\n            barToSpaceRatio: 0.8,\n            groupOffset: json.barGroupOffset,\n        },\n        scatter: {\n            pointSize: json.nodeSize,\n        },\n        nodes: {\n            size: json.nodeSize,\n            fill: json.nodeFill,\n            strokeWidth: json.nodeStroke,\n        },\n        labels: {\n            ...masterConfig.labels,\n            active: json.labelsActive,\n            color: 'black',\n            fontWeight: 200,\n            fontSize: 12,\n            labelPositionDX: json.labelPositionDX,\n            labelPositionDY: json.labelPositionDY,\n            labelBarPosition: json.barLabelPosition,\n            labelCutoff:\n                json.barLabelPosition === 'inside' ? json.barLabelCutoff : null,\n            labelCutoffMobile:\n                json.barLabelPosition === 'inside'\n                    ? json.barLabelCutoffMobile\n                    : null,\n            pieLabelRadius: 60,\n        },\n        legend: {\n            ...masterConfig.legend,\n            active: json.legendActive,\n            orientation: json.legendOrientation,\n            title: json.legendTitle,\n            offsetX: json.legendOffsetX,\n            offsetY: json.legendOffsetY,\n            markerStyle: json.legendMarkerStyle,\n            borderStroke: json.legendBorderStroke,\n            fill: json.legendFill,\n        },\n        metadata: {\n            ...masterConfig.metadata,\n            active: json.metaTextActive,\n            title: json.metaTitle,\n            subtitle: json.metaSubtitle,\n            note: json.metaNote,\n            source: json.metaSource,\n            tag: json.metaTag,\n        },\n        colors:\n            json.customColors.length > 0\n                ? json.customColors\n                : colorObj[json.colorValue],\n    };\n    return config;\n};\n\n//this feels redundant for the formatter function in helpers.js, but we need to mod slightly because the param is an array\nconst arrayToDataObj = (arr, scale, chartType) => {\n    const headers = arr[0];\n    const [, ...categories] = headers;\n    const [, ...body] = arr;\n    const seriesData = [];\n    const scaleData = (data, scale) => {\n        if (\n            chartType === 'bar' ||\n            chartType === 'stacked-bar' ||\n            chartType === 'pie' ||\n            chartType === 'dot-plot'\n        ) {\n            return data;\n        }\n        if (scale === 'time') {\n            return new Date(data).getTime();\n        }\n        return parseFloat(data);\n    };\n    for (let i = 1; i < headers.length; i++) {\n        var series = body\n            .filter((row) => !isNaN(parseFloat(row[i])))\n            .map((row) => ({\n                x: scaleData(row[0], scale),\n                y: parseFloat(row[i]),\n                category: headers[i],\n                yLabel: `${parseFloat(row[i])}`,\n            }));\n        seriesData.push(series);\n    }\n    return { categories, seriesData };\n};\n\nconst generateSvgDownload = (hash) => {\n    const tabWrapper = document.getElementById(`tab-wrapper-${hash}`);\n    const svg = tabWrapper.querySelector('svg');\n    const svgBlob = new Blob([svg.outerHTML], {\n        type: 'image/svg+xml;charset=utf-8',\n    });\n    console.log(svgBlob);\n};\n\nconst renderCharts = () => {\n    const charts = document.querySelectorAll('.wp-chart-builder-wrapper');\n    charts.forEach((chart) => {\n        const renderEl = chart.querySelector('.wp-chart-builder-inner');\n        const config = getConfig(renderEl);\n        const hash = renderEl.dataset.chartHash;\n        const dataArrStr = chart.querySelector('.table-array-data').innerText;\n        const dataArr = JSON.parse(dataArrStr);\n        const dataObj = arrayToDataObj(\n            dataArr,\n            config.xAxis.scale,\n            config.layout.type,\n        );\n        config.dataRender.categories = dataObj.categories;\n        const formattedData =\n            config.layout.type === 'pie'\n                ? dataObj.seriesData[0]\n                : dataObj.seriesData;\n        const panes = [\n            {\n                menuItem: 'Chart',\n                render: () => (\n                    <ChartBuilderTextWrapper\n                        active={config.metadata.active}\n                        width={config.layout.width}\n                        horizontalRules={config.layout.horizontalRules}\n                        title={config.metadata.title}\n                        subtitle={config.metadata.subtitle}\n                        note={config.metadata.note}\n                        source={config.metadata.source}\n                        tag={config.metadata.tag}\n                    >\n                        <ChartBuilderWrapper\n                            config={config}\n                            data={formattedData}\n                        />\n                    </ChartBuilderTextWrapper>\n                ),\n            },\n            {\n                menuItem: 'Table',\n                // render: () => <div dangerouslySetInnerHTML={createTable()} />,\n                render: () => (\n                    <Table celled>\n                        <Table.Header>\n                            <Table.Row>\n                                {dataArr[0].map((cell) => (\n                                    <Table.Cell>{cell}</Table.Cell>\n                                ))}\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {dataArr\n                                .filter((row, i) => i > 0)\n                                .map((row) => (\n                                    <Table.Row>\n                                        {row.map((cell) => (\n                                            <Table.Cell>{cell}</Table.Cell>\n                                        ))}\n                                    </Table.Row>\n                                ))}\n                        </Table.Body>\n                    </Table>\n                ),\n            },\n            {\n                menuItem: 'Share',\n                render: () => {},\n            },\n        ];\n        render(<Tab id={`tab-wrapper-${hash}`} panes={panes} />, renderEl);\n    });\n};\n\ndomReady(() => {\n    renderCharts();\n});\n","module.exports = wp.apiFetch;"],"sourceRoot":""}