{"version":3,"sources":["webpack:///external \"wp.domReady\"","webpack:///external \"wp.url\"","webpack:///./src/tabs/controller/frontend.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js"],"names":["module","exports","wp","domReady","url","document","querySelectorAll","forEach","t","id","getAttribute","classList","contains","menuItem","uuid","addEventListener","currentlyActiveMenuItem","getElementById","querySelector","remove","currentlyActivePane","hideActive","add","pane","newUrlArgs","newUrl","addQueryArgs","window","location","href","console","log","history","pushState","title","makeActive","path","replace","concat"],"mappings":";;;;;;;;;;;;;;;;;0HAAAA,EAAOC,QAAUC,GAAGC,U,iBCApBH,EAAOC,QAAUC,GAAGE,K,6ECApB,oCAyCAD,KAAS,WACQE,SAASC,iBAAiB,4BAClCC,SAAQ,SAAAC,GACT,IAAMC,EAAKD,EAAEE,aAAa,MACNF,EAAEG,UAAUC,SAAS,aAEvBJ,EAAEF,iBAChB,sCAEMC,SAAQ,SAAAM,GACd,IAAMC,EAAOD,EAASH,aAAa,aACnCG,EAASE,iBAAiB,SAAS,YA3B5B,SAAAN,GACf,IAAMO,EAA0BX,SAC3BY,eAAeR,GACfS,cAF2B,6CAG5BF,GACAA,EAAwBL,UAAUQ,OAAO,UAG7C,IAAMC,EAAsBf,SACvBY,eAAeR,GACfS,cAFuB,wCAGxBE,GACAA,EAAoBT,UAAUQ,OAAO,UAgB7BE,CAAWZ,GAlDR,SAAAK,GACf,IAAMD,EAAWR,SAASa,cAAT,wDACoCJ,EADpC,OAGbD,GACAA,EAASF,UAAUW,IAAI,UAG3B,IAAMC,EAAOlB,SAASa,cAAT,mDACmCJ,EADnC,OAGb,GAAIS,EAAM,CAEN,IAAMC,EAAa,CAAEX,SAAUC,GACzBW,EAASC,uBAAaC,OAAOC,SAASC,KAAML,GAClDM,QAAQC,IAAI,SAAUN,GACtBE,OAAOK,QAAQC,UAAUT,EAAYnB,SAAS6B,MAAOT,GAErDF,EAAKZ,UAAUW,IAAI,WAiCXa,CAAWrB,gB,gCC7CX,IAAIsB,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBV,OAAO,YAAYW,OAAOF,M","file":"frontend/tabs-controller-b91ecda3.js","sourcesContent":["module.exports = wp.domReady;","module.exports = wp.url;","import domReady from '@wordpress/dom-ready';\nimport { addQueryArgs, removeQueryArgs } from '@wordpress/url';\n\nconst makeActive = uuid => {\n    const menuItem = document.querySelector(\n        `.wp-block-prc-block-tabs-menu-item[data-uuid=\"${uuid}\"]`,\n    );\n    if (menuItem) {\n        menuItem.classList.add('active');\n    }\n\n    const pane = document.querySelector(\n        `.wp-block-prc-block-tabs-pane[data-uuid=\"${uuid}\"]`,\n    );\n    if (pane) {\n        // Update the url with new ?menuItem arg.\n        const newUrlArgs = { menuItem: uuid };\n        const newUrl = addQueryArgs(window.location.href, newUrlArgs);\n        console.log('newUrl', newUrl);\n        window.history.pushState(newUrlArgs, document.title, newUrl);\n\n        pane.classList.add('active');\n    }\n};\n\nconst hideActive = id => {\n    const currentlyActiveMenuItem = document\n        .getElementById(id)\n        .querySelector(`.wp-block-prc-block-tabs-menu-item.active`);\n    if (currentlyActiveMenuItem) {\n        currentlyActiveMenuItem.classList.remove('active');\n    }\n\n    const currentlyActivePane = document\n        .getElementById(id)\n        .querySelector(`.wp-block-prc-block-tabs-pane.active`);\n    if (currentlyActivePane) {\n        currentlyActivePane.classList.remove('active');\n    }\n};\n\ndomReady(() => {\n    const tabs = document.querySelectorAll('.wp-block-prc-block-tabs');\n    tabs.forEach(t => {\n        const id = t.getAttribute('id');\n        const isAccordion = t.classList.contains('accordion');\n\n        const menuItems = t.querySelectorAll(\n            '.wp-block-prc-block-tabs-menu-item',\n        );\n        menuItems.forEach(menuItem => {\n            const uuid = menuItem.getAttribute('data-uuid');\n            menuItem.addEventListener('click', () => {\n                hideActive(id);\n                makeActive(uuid);\n            });\n        });\n    });\n});\n","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}"],"sourceRoot":""}