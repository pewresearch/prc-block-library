{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.element\"","webpack:///external \"wp.domReady\"","webpack:///external \"regeneratorRuntime\"","webpack:///external \"lodash\"","webpack:///./src/chart-builder/utils/colors.js","webpack:///./src/chart-builder/utils/helpers.js","webpack:///./src/chart-builder/frontend.js"],"names":["module","exports","React","wp","i18n","element","domReady","regeneratorRuntime","lodash","colors","general","stringToArrayOfNums","str","split","map","Number","filter","num","isNaN","getDomain","min","max","type","scale","axis","orientation","Date","parseFloat","renderCharts","document","querySelectorAll","forEach","chart","el","ticks","layout","xAxis","yAxis","hash","json","xTicks","yTicks","renderEl","querySelector","config","masterConfig","dataset","chartHash","window","chartConfigs","xTickExact","yTickExact","chartType","chartOrientation","width","height","padding","top","paddingTop","bottom","paddingBottom","left","paddingLeft","right","paddingRight","active","xAxisActive","label","xLabel","xScale","dateFormat","xScaleFormat","domain","xMinDomain","xMaxDomain","tickCount","xTickNum","tickValues","length","tick","domainPadding","yAxisActive","yScale","yScaleFormat","yTickNum","yMinDomain","yMaxDomain","showZero","showYMinDomainLabel","dataRender","xFormat","yFormat","tooltip","tooltipActive","format","tooltipFormat","animate","duration","line","interpolation","lineInterpolation","showPoints","lineNodes","showArea","strokeWidth","lineStrokeWidth","pointSize","lineNodeSize","pointStrokeWidth","lineNodeStroke","areaFillOpacity","legend","legendPosition","bar","barWidth","barToSpaceRatio","groupOffset","barGroupOffset","scatter","labels","labelsActive","color","fontWeight","fontSize","labelPositionDX","labelPositionDY","labelBarPosition","barLabelPosition","labelCutoff","barLabelCutoff","labelCutoffMobile","barLabelCutoffMobile","pieLabelRadius","legendActive","legendOrientation","title","legendTitle","offsetX","legendOffsetX","offsetY","legendOffsetY","markerStyle","legendMarkerStyle","borderStroke","legendBorderStroke","fill","legendFill","metadata","metaTextActive","metaTitle","subtitle","metaSubtitle","note","metaNote","source","metaSource","tag","metaTag","customColors","colorObj","colorValue","dataArrStr","innerText","dataArr","JSON","parse","dataObj","arr","headers","categories","body","seriesData","scaleData","data","getTime","i","series","row","x","y","category","yLabel","push","arrayToDataObj","formattedData","panes","menuItem","render","horizontalRules","Table","celled","Header","Row","cell","Cell","Body","Tab","console","log"],"mappings":"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","file":"frontend/chart-builder-69ea280b.js","sourcesContent":["module.exports = React;","module.exports = wp.i18n;","module.exports = wp.element;","module.exports = wp.domReady;","module.exports = regeneratorRuntime;","module.exports = lodash;","const colors = {\n  general: ['#436983', '#bf3927', '#756a7e', '#ea9e2c'],\n  'politics-main': ['#d1a730', '#a55a26', '#949d48'],\n  'global-main': ['#949d48', '#006699', '#a55a26'],\n  'religion-main': ['#0090bf', '#a55a26', '#949d48'],\n  'social-trends-main': ['#377668', '#d1a730', '#949d48'],\n  'journalism-main': ['#733d47', '#d1a730', '#949d48'],\n  'internet-main': ['#006699', '#949d48', '#d1a730'],\n  'hispanic-main': ['#a55a26', '#d1a730', '#949d48'],\n  'politics-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'global-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'religion-spectrum': [\n    '#0090C0',\n    '#C9DEEE',\n    '#9DC7E1',\n    '#71B2D6',\n    '#0073A5',\n    '#00557E',\n  ],\n  'journalism-spectrum': [\n    '#733D47',\n    '#E8D3D7',\n    '#D1A8AF',\n    '#BC7B86',\n    '#552E35',\n    '#391E22',\n  ],\n  'social-trends-spectrum': [\n    '#387668',\n    '#D1E9E4',\n    '#A2D2C8',\n    '#64B6AA',\n    '#005645',\n    '#003A2C',\n  ],\n  'hispanic-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'internet-spectrum': [\n    '#006699',\n    '#C9D1E1',\n    '#9DAECB',\n    '#7591B7',\n    '#004A75',\n    '#002748',\n  ],\n  'blue-spectrum': [\n    '#456A83',\n    '#D5E1E9',\n    '#ACC4D3',\n    '#82A6BF',\n    '#335062',\n    '#213441',\n  ],\n  'green-spectrum': [\n    '#949D48',\n    '#EAECD8',\n    '#D6DAB3',\n    '#C2C98B',\n    '#6E7537',\n    '#494E24',\n  ],\n  'purple-spectrum': [\n    '#746A7E',\n    '#E3E1E5',\n    '#C7C1CB',\n    '#ACA4B1',\n    '#584F5E',\n    '#3A343F',\n  ],\n  'medium-brown-spectrum': [\n    '#A55A26',\n    '#F2DBCD',\n    '#E7BA9A',\n    '#DE996A',\n    '#7C441C',\n    '#532E16',\n  ],\n  'light-brown-spectrum': [\n    '#D1A730',\n    '#F6EED6',\n    '#ECDBAC',\n    '#E4CB83',\n    '#9E7F2D',\n    '#6A5522',\n  ],\n  'orange-spectrum': [\n    '#EA9E2C',\n    '#F9EAD4',\n    '#F5D6A9',\n    '#F1C37F',\n    '#BB792A',\n    '#7C5220',\n  ],\n  'red-spectrum': [\n    '#BF3B27',\n    '#F5D4CF',\n    '#EBABA2',\n    '#E37F73',\n    '#902D1E',\n    '#5F1D14',\n  ],\n};\n\nconst colorNames = [\n  { label: 'General', value: 'general' },\n  { label: 'Politics Main', value: 'politics-main' },\n  { label: 'Global Main', value: 'global-main' },\n  { label: 'Religion Main', value: 'religion-main' },\n  {\n    label: 'Social Trends Main',\n    value: 'social-trends-main',\n  },\n  { label: 'Journalism Main', value: 'journalism-main' },\n  { label: 'Internet Main', value: 'internet-main' },\n  { label: 'Hispanic Main', value: 'hispanic-main' },\n  {\n    label: 'Politics Spectrum',\n    value: 'politics-spectrum',\n  },\n  { label: 'Global Spectrum', value: 'global-spectrum' },\n  {\n    label: 'Religion Spectrum',\n    value: 'religion-spectrum',\n  },\n  {\n    label: 'Social Trends Spectrum',\n    value: 'social-trends-spectrum',\n  },\n  {\n    label: 'Journalism Spectrum',\n    value: 'journalism-spectrum',\n  },\n  {\n    label: 'Internet Spectrum',\n    value: 'internet-spectrum',\n  },\n  {\n    label: 'Hispanic Spectrum',\n    value: 'hispanic-spectrum',\n  },\n  { label: 'Blue Spectrum', value: 'blue-spectrum' },\n  { label: 'Green Spectrum', value: 'green-spectrum' },\n  { label: 'Purple Spectrum', value: 'purple-spectrum' },\n  {\n    label: 'Medium Brown Spectrum',\n    value: 'medium-brown-spectrum',\n  },\n  {\n    label: 'Light Brown Spectrum',\n    value: 'light-brown-spectrum',\n  },\n  { label: 'Orange Spectrum', value: 'orange-spectrum' },\n  { label: 'Red Spectrum', value: 'red-spectrum' },\n];\n\nexport { colors, colorNames };\n","// Transform data from table block into json useable for chart builder\nexport const formattedData = (data, scale, chartType) => {\n    const { body, tableHeaders } = data;\n    const seriesData = [];\n    const scaleData = (data, scale) => {\n        if (chartType === 'bar') {\n            return data;\n        }\n        if (scale === 'time') {\n            return new Date(data).getTime();\n        }\n        return parseFloat(data);\n    };\n    for (var i = 1; i < tableHeaders.length; i++) {\n        var series = body\n            .filter((row) => !isNaN(parseFloat(row.cells[i].content)))\n            .map((row) => ({\n                x: scaleData(row.cells[0].content, scale),\n                y: parseFloat(row.cells[i].content),\n                category: tableHeaders[i],\n                yLabel: `${parseFloat(row.cells[i].content)}`,\n            }));\n        seriesData.push(series);\n    }\n    return seriesData;\n};\n\nexport const stringToArrayOfNums = (str) => {\n    return str\n        .split(',')\n        .map(Number)\n        .filter((num) => !isNaN(num));\n};\n\nexport const getDomain = (min, max, type, scale, axis, orientation) => {\n    if (isNaN(min) || isNaN(max)) {\n        return [0, 100];\n    }\n    if (type === 'bar' && axis === 'x') {\n        // x axis is a bit of a misnomer for bars. It refers exclusively to the dependent axis.\n        return null;\n    }\n    if (type === 'pie') {\n        return null;\n    }\n    if (scale === 'time' && axis === 'x') {\n        return [new Date(min, 0), new Date(max, 0)];\n    }\n    return [parseFloat(min), parseFloat(max)];\n};\n\nexport const getTicks = (ticks, scale) => {\n    if (scale === 'time') {\n        return ticks.map((tick) => new Date(`${tick}`));\n    }\n    return ticks;\n};\n\nexport const formatNum = (num, output) => {\n    if (typeof num === 'string' && output === 'integer') {\n        return parseInt(num);\n    }\n    if (typeof num === 'string' && output === 'float') {\n        return parseFloat(num);\n    }\n    return num;\n};\n\nexport const svgToCanvasToPng = (svg) => {};\n","import domReady from '@wordpress/dom-ready';\nimport { render, Fragment } from '@wordpress/element';\nimport { Tab, Table } from 'semantic-ui-react';\nimport { colors as colorObj } from './utils/colors';\nimport { stringToArrayOfNums, getDomain, getTicks } from './utils/helpers';\nimport {\n    ChartBuilderWrapper,\n    ChartBuilderTextWrapper,\n    masterConfig,\n} from '@prcdigital/chart-builder/dist';\n\nconst getConfig = (el) => {\n    const { layout, xAxis, yAxis } = masterConfig;\n    const hash = el.dataset.chartHash;\n    const json = window.chartConfigs[hash];\n    const xTicks = stringToArrayOfNums(json.xTickExact);\n    const yTicks = stringToArrayOfNums(json.yTickExact);\n    const config = {\n        ...masterConfig,\n        layout: {\n            ...layout,\n            type: json.chartType,\n            orientation: json.chartOrientation,\n            width: json.width,\n            height: json.height,\n            padding: {\n                top: json.paddingTop,\n                bottom: json.paddingBottom,\n                left: json.paddingLeft,\n                right: json.paddingRight,\n            },\n        },\n        // NOTE: xAxis is typically the dependent axis, except for when we've got a horizontal bar chart or dot plot\n        xAxis: {\n            ...xAxis,\n            active: json.xAxisActive,\n            label: json.xLabel,\n            scale: json.xScale,\n            dateFormat: json.xScaleFormat,\n            domain: getDomain(\n                json.xMinDomain,\n                json.xMaxDomain,\n                json.chartType,\n                json.xScale,\n                'x',\n                json.chartOrientation,\n            ),\n            padding: 50,\n            tickCount: json.xTickNum,\n            tickValues: xTicks.length <= 1 ? null : getTicks(xTicks, xScale),\n            domainPadding: 50,\n        },\n        yAxis: {\n            ...yAxis,\n            active: json.yAxisActive,\n            scale: json.yScale,\n            dateFormat: json.yScaleFormat,\n            padding: 20,\n            tickCount: json.yTickNum,\n            tickValues: yTicks.length <= 1 ? null : yTicks,\n            domain: getDomain(\n                json.yMinDomain,\n                json.yMaxDomain,\n                json.chartType,\n                json.yScale,\n                'y',\n                json.chartOrientation,\n            ),\n            domainPadding: 20,\n            showZero: json.showYMinDomainLabel,\n        },\n        dataRender: {\n            ...masterConfig.dataRender,\n            xScale: json.xScale,\n            yScale: json.yScale,\n            xFormat: json.xScaleFormat,\n            yFormat: json.yScaleFormat,\n            // categories: categoryArray,\n        },\n        tooltip: {\n            active: json.tooltipActive,\n            format: json.tooltipFormat,\n        },\n        animate: {\n            active: false,\n            duration: 500,\n        },\n        line: {\n            ...masterConfig.line,\n            interpolation: json.lineInterpolation,\n            showPoints: json.lineNodes,\n            showArea: json.chartType === 'area' ? true : false,\n            strokeWidth: json.lineStrokeWidth,\n            pointSize: json.lineNodeSize,\n            pointStrokeWidth: json.lineNodeStroke,\n            areaFillOpacity: json.areaFillOpacity,\n        },\n        legend: {\n            active: false,\n            legendPosition: 'top',\n        },\n        bar: {\n            ...masterConfig.bar,\n            width: json.barWidth,\n            barToSpaceRatio: 0.8,\n            groupOffset: json.barGroupOffset,\n        },\n        scatter: {\n            pointSize: json.lineNodeSize,\n        },\n        labels: {\n            ...masterConfig.labels,\n            active: json.labelsActive,\n            color: 'black',\n            fontWeight: 200,\n            fontSize: 12,\n            labelPositionDX: json.labelPositionDX,\n            labelPositionDY: json.labelPositionDY,\n            labelBarPosition: json.barLabelPosition,\n            labelCutoff:\n                json.barLabelPosition === 'inside' ? json.barLabelCutoff : null,\n            labelCutoffMobile:\n                json.barLabelPosition === 'inside'\n                    ? json.barLabelCutoffMobile\n                    : null,\n            pieLabelRadius: 60,\n        },\n        legend: {\n            ...masterConfig.legend,\n            active: json.legendActive,\n            orientation: json.legendOrientation,\n            title: json.legendTitle,\n            offsetX: json.legendOffsetX,\n            offsetY: json.legendOffsetY,\n            markerStyle: json.legendMarkerStyle,\n            borderStroke: json.legendBorderStroke,\n            fill: json.legendFill,\n        },\n        metadata: {\n            ...masterConfig.metadata,\n            active: json.metaTextActive,\n            title: json.metaTitle,\n            subtitle: json.metaSubtitle,\n            note: json.metaNote,\n            source: json.metaSource,\n            tag: json.metaTag,\n        },\n        colors:\n            json.customColors.length > 0\n                ? json.customColors\n                : colorObj[json.colorValue],\n    };\n    return config;\n};\n\n//this feels redundant for the formatter function in helpers.js, but we need to mod slightly because the param is an array\nconst arrayToDataObj = (arr, scale, type) => {\n    const headers = arr[0];\n    const [, ...categories] = headers;\n    const [, ...body] = arr;\n    const seriesData = [];\n    const scaleData = (data, scale) => {\n        if (type === 'bar') {\n            return data;\n        }\n        if (scale === 'time') {\n            return new Date(data).getTime();\n        }\n        return parseFloat(data);\n    };\n    for (let i = 1; i < headers.length; i++) {\n        var series = body\n            .filter((row) => !isNaN(parseFloat(row[i])))\n            .map((row) => ({\n                x: scaleData(row[0], scale),\n                y: parseFloat(row[i]),\n                category: headers[i],\n                yLabel: `${parseFloat(row[i])}`,\n            }));\n        seriesData.push(series);\n    }\n    return { categories, seriesData };\n};\n\nconst renderCharts = () => {\n    const charts = document.querySelectorAll('.wp-chart-builder-wrapper');\n    charts.forEach((chart) => {\n        const renderEl = chart.querySelector('.wp-chart-builder-inner');\n        const config = getConfig(renderEl);\n        const dataArrStr = chart.querySelector('.table-array-data').innerText;\n        const dataArr = JSON.parse(dataArrStr);\n        const dataObj = arrayToDataObj(\n            dataArr,\n            config.xAxis.scale,\n            config.layout.type,\n        );\n        config.dataRender.categories = dataObj.categories;\n        const formattedData =\n            config.layout.type === 'pie'\n                ? dataObj.seriesData[0]\n                : dataObj.seriesData;\n        const panes = [\n            {\n                menuItem: 'Chart',\n                render: () => (\n                    <ChartBuilderTextWrapper\n                        active={config.metadata.active}\n                        width={config.layout.width}\n                        horizontalRules={config.layout.horizontalRules}\n                        title={config.metadata.title}\n                        subtitle={config.metadata.subtitle}\n                        note={config.metadata.note}\n                        source={config.metadata.source}\n                        tag={config.metadata.tag}\n                    >\n                        <ChartBuilderWrapper\n                            config={config}\n                            data={formattedData}\n                        />\n                    </ChartBuilderTextWrapper>\n                ),\n            },\n            {\n                menuItem: 'Table',\n                // render: () => <div dangerouslySetInnerHTML={createTable()} />,\n                render: () => (\n                    <Table celled>\n                        <Table.Header>\n                            <Table.Row>\n                                {dataArr[0].map((cell) => (\n                                    <Table.Cell>{cell}</Table.Cell>\n                                ))}\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {dataArr\n                                .filter((row, i) => i > 0)\n                                .map((row) => (\n                                    <Table.Row>\n                                        {row.map((cell) => (\n                                            <Table.Cell>{cell}</Table.Cell>\n                                        ))}\n                                    </Table.Row>\n                                ))}\n                        </Table.Body>\n                    </Table>\n                ),\n            },\n        ];\n        render(<Tab panes={panes} />, renderEl);\n    });\n};\n\ndomReady(() => {\n    renderCharts();\n    console.log('frontend loaded');\n});\n"],"sourceRoot":""}