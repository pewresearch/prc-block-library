{"version":3,"sources":["webpack:///external [\"wp\",\"domReady\"]","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./src/popup/controller/frontend.js"],"names":["module","exports","window","path","replace","concat","show","modal","args","jQuery","domReady","controllers","document","querySelectorAll","length","forEach","controller","id","getAttribute","querySelector","trigger","setAttribute","initArgs","inverted","on","e","preventDefault","console","log"],"mappings":";;;;;;;;;;;;;;;;;2HAAcA,EAAOC,QAAUC,OAAW,GAAY,U,mBCStC,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBF,OAAO,YAAYG,OAAOF,K,6ECVlD,mBAKMG,EAAO,SAACC,GAAmC,IAA5BD,IAA2B,yDAAdE,EAAc,uDAAP,IACnC,IAASF,EACbG,OAAOF,GAAOA,MAAM,QAEpBE,OAAOF,GAAOA,MAAMC,IATtB,MAaAE,IAAS,WACR,IAAMC,EAAcC,SAASC,iBAAiB,wCAC1CF,EAAYG,QACfH,EAAYI,SAAQ,SAAAC,GACnB,IAAMC,EAAKD,EAAWE,aAAa,MAC/BX,EAAQS,EAAWG,cAAX,mCACNC,EAAUJ,EAAWG,cAAc,qCAEzCZ,EAAMc,aAAa,kBAAmBJ,GAGtC,IAAMK,EAAW,GACZ,IAHLf,EAAQK,SAASO,cAAT,2DAA2EF,EAA3E,QAGWC,aAAa,mBAC/BI,EAASC,UAAW,GAGrBjB,EAAKC,GAAO,EAAOe,GAEnBb,OAAOW,GAASI,GAAG,SAAS,SAASC,GACpCA,EAAEC,iBACFC,QAAQC,IAAI,WAEZtB,EAAKC,c","file":"frontend/popup-controller-eb19c8cd.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"domReady\"]; }());","/* eslint-disable camelcase */ /* eslint-disable babel/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\nconst show = (modal, show = true, args = {}) => {\n\tif ( true === show ) {\n\t\tjQuery(modal).modal('show');\n\t} else {\n\t\tjQuery(modal).modal(args);\n\t}\n}\n\ndomReady(() => {\n\tconst controllers = document.querySelectorAll('.wp-block-prc-block-popup-controller');\n\tif (controllers.length) {\n\t\tcontrollers.forEach(controller => {\n\t\t\tconst id = controller.getAttribute('id');\n\t\t\tlet modal = controller.querySelector(`.wp-block-prc-block-popup-modal`);\n\t\t\tconst trigger = controller.querySelector('.wp-block-prc-block-popup-content');\n\n\t\t\tmodal.setAttribute('data-trigger-id', id);\n\t\t\tmodal = document.querySelector(`.wp-block-prc-block-popup-modal[data-trigger-id=\"${id}\"]`);\n\n\t\t\tconst initArgs = {};\n\t\t\tif ( true == modal.getAttribute('data-inverted') ) {\n\t\t\t\tinitArgs.inverted = true;\n\t\t\t}\n\n\t\t\tshow(modal, false, initArgs);\n\n\t\t\tjQuery(trigger).on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconsole.log(\"CLICKED\");\n\t\t\t\t// @TODO If this is a video modal then we should scan for the video and autoplay when opening...\n\t\t\t\tshow(modal);\n\t\t\t});\n\t\t});\n\t}\n});\n"],"sourceRoot":""}