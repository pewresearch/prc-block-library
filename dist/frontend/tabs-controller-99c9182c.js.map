{"version":3,"sources":["webpack:///external \"wp.domReady\"","webpack:///external \"wp.url\"","webpack:///./src/tabs/controller/frontend.js","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js"],"names":["module","exports","wp","domReady","url","document","querySelectorAll","forEach","t","id","getAttribute","isAccordion","classList","contains","menuItem","uuid","addEventListener","currentlyActiveMenuItem","getElementById","querySelector","remove","currentlyActivePane","hideActive","console","log","toggle","add","pane","newUrlArgs","newUrl","addQueryArgs","window","location","href","removeQueryArgs","history","pushState","title","makeActive","path","replace","concat"],"mappings":";;;;;;;;;;;;;;;;;0HAAAA,EAAOC,QAAUC,GAAGC,U,iBCApBH,EAAOC,QAAUC,GAAGE,K,6ECApB,oCA+DAD,KAAS,WACQE,SAASC,iBAAiB,4BAClCC,SAAQ,SAAAC,GACT,IAAMC,EAAKD,EAAEE,aAAa,MACpBC,EAAcH,EAAEI,UAAUC,SAAS,aAEvBL,EAAEF,iBAChB,sCAEMC,SAAQ,SAAAO,GACd,IAAMC,EAAOD,EAASJ,aAAa,aACnCI,EAASE,iBAAiB,SAAS,YA3B5B,SAAAP,GACf,IAAMQ,EAA0BZ,SAC3Ba,eAAeT,GACfU,cAF2B,6CAG5BF,GACAA,EAAwBL,UAAUQ,OAAO,UAG7C,IAAMC,EAAsBhB,SACvBa,eAAeT,GACfU,cAFuB,wCAGxBE,GACAA,EAAoBT,UAAUQ,OAAO,UAgB7BE,CAAWb,GAjER,SAACM,EAAMJ,GACtBY,QAAQC,IAAI,aAAcT,EAAMJ,GAChC,IAAMG,EAAWT,SAASc,cAAT,wDACoCJ,EADpC,OAGbD,IACAS,QAAQC,IAAIb,GAERA,GACAY,QAAQC,IAAI,0BAA2BV,EAASF,WAChDE,EAASF,UAAUa,OAAO,UAAU,IAEpCX,EAASF,UAAUc,IAAI,WAI/B,IAAMC,EAAOtB,SAASc,cAAT,mDACmCJ,EADnC,OAGb,GAAIY,EAAM,CAEN,IAAMC,EAAa,CAAEd,SAAUC,GAC3Bc,EAASC,uBAAaC,OAAOC,SAASC,KAAML,GAE5CjB,GACIgB,EAAKf,UAAUC,SAAS,YACxBgB,EAASK,0BAAgBL,EAAQ,aAErCF,EAAKf,UAAUa,OAAO,UAAU,IAEhCE,EAAKf,UAAUc,IAAI,UAGvBK,OAAOI,QAAQC,UAAUR,EAAYvB,SAASgC,MAAOR,IAiC7CS,CAAWvB,EAAMJ,gB,gCCnEjB,IAAI4B,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBT,OAAO,YAAYU,OAAOF,M","file":"frontend/tabs-controller-99c9182c.js","sourcesContent":["module.exports = wp.domReady;","module.exports = wp.url;","import domReady from '@wordpress/dom-ready';\nimport { addQueryArgs, removeQueryArgs } from '@wordpress/url';\n\n/**\n * Sets a title/item and content/tab active by UUID.\n * Accepts a boolean for isAccordion if true changes the logic to hide currently active items if clicked on again.\n * @param {string} uuid\n * @param {boolean} isAccordion\n * @returns Sets matching items to active;\n */\nconst makeActive = (uuid, isAccordion) => {\n    console.log('makeActive', uuid, isAccordion);\n    const menuItem = document.querySelector(\n        `.wp-block-prc-block-tabs-menu-item[data-uuid=\"${uuid}\"]`,\n    );\n    if (menuItem) {\n        console.log(isAccordion);\n\n        if (isAccordion) {\n            console.log('doing accordion things?', menuItem.classList);\n            menuItem.classList.toggle('active', true);\n        } else {\n            menuItem.classList.add('active');\n        }\n    }\n\n    const pane = document.querySelector(\n        `.wp-block-prc-block-tabs-pane[data-uuid=\"${uuid}\"]`,\n    );\n    if (pane) {\n        // Update the url with new ?menuItem arg.\n        const newUrlArgs = { menuItem: uuid };\n        let newUrl = addQueryArgs(window.location.href, newUrlArgs);\n\n        if (isAccordion) {\n            if (pane.classList.contains('active')) {\n                newUrl = removeQueryArgs(newUrl, 'menuItem');\n            }\n            pane.classList.toggle('active', true);\n        } else {\n            pane.classList.add('active');\n        }\n\n        window.history.pushState(newUrlArgs, document.title, newUrl);\n    }\n};\n\nconst hideActive = id => {\n    const currentlyActiveMenuItem = document\n        .getElementById(id)\n        .querySelector(`.wp-block-prc-block-tabs-menu-item.active`);\n    if (currentlyActiveMenuItem) {\n        currentlyActiveMenuItem.classList.remove('active');\n    }\n\n    const currentlyActivePane = document\n        .getElementById(id)\n        .querySelector(`.wp-block-prc-block-tabs-pane.active`);\n    if (currentlyActivePane) {\n        currentlyActivePane.classList.remove('active');\n    }\n};\n\ndomReady(() => {\n    const tabs = document.querySelectorAll('.wp-block-prc-block-tabs');\n    tabs.forEach(t => {\n        const id = t.getAttribute('id');\n        const isAccordion = t.classList.contains('accordion');\n\n        const menuItems = t.querySelectorAll(\n            '.wp-block-prc-block-tabs-menu-item',\n        );\n        menuItems.forEach(menuItem => {\n            const uuid = menuItem.getAttribute('data-uuid');\n            menuItem.addEventListener('click', () => {\n                hideActive(id);\n                makeActive(uuid, isAccordion);\n            });\n        });\n    });\n});\n","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}"],"sourceRoot":""}