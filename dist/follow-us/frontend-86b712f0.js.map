{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///./src/follow-us/frontend.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"ReactDOM\"","webpack:///./src/follow-us/component.js","webpack:///external \"wp.apiFetch\""],"names":["module","exports","React","wp","element","document","addEventListener","querySelector","elms","querySelectorAll","elm","socialMediaMarkup","innerHTML","props","newsletters","getAttribute","setAttributes","render","blockEditor","ReactDOM","FollowUs","undefined","editMode","selected","split","length","setState","ID","state","includes","index","indexOf","splice","push","e","console","log","loading","window","prcMailchimpBlock","interests","map","item","class","Field","label","value","checked","className","onChange","data","join","update","classes","classNames","SelectNewsletters","selectNewsletters","fluid","Header","Content","tagName","socialMedia","formattingControls","placeholder","multiline","children","onSubmit","submitHandler","isSelected","selectNewsletter","required","size","action","color","content","style","justifyContent","width","type","email","target","bind","Component","apiFetch"],"mappings":"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","file":"follow-us/frontend-86b712f0.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","import { render } from '@wordpress/element';\n\nimport FollowUs from './component';\n\n// When DOM is fully loaded load the filters\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n\tif ( document.querySelector('.js-react-follow-us') ) {\n\t\tconst elms = document.querySelectorAll('.js-react-follow-us');\n\t\tfor ( let elm of elms ) {\n\t\t\tconst socialMediaMarkup = elm.innerHTML;\n\t\t\tconst props = {\n\t\t\t\tnewsletters: elm.getAttribute('data-newsletters'),\n\t\t\t\tsetAttributes: false,\n\t\t\t}\n\t\t\trender( \n\t\t\t\t<FollowUs {...props}>{socialMediaMarkup}</FollowUs>,\n\t\t\t\telm\n\t\t\t);\t\n\t\t}\n\t}\n});\n","module.exports = wp.blockEditor;","module.exports = ReactDOM;","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport { Card as SemanticCard, Checkbox, Button, Form, Input } from 'semantic-ui-react';\nimport classNames from 'classnames/bind';\nimport apiFetch from '@wordpress/api-fetch';\n\nclass FollowUs extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tloading: false,\n\t\t\tselected: [],\n\t\t}\n\t\tthis.setState = this.setState.bind(this);\n\t\tthis.submitHandler = this.submitHandler.bind(this);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tif ( undefined !== this.props.editMode && true === this.props.editMode ) {\n\t\t\tconst selected = this.props.newsletters.split(',');\n\t\t\tif ( 0 !== selected.length ) {\n\t\t\t\tthis.setState({selected});\n\t\t\t}\n\t\t}\n\t}\n\n\tselectNewsletter = (ID) => {\n\t\tlet selected = this.state.selected;\n\n\t\tif ( selected.includes(ID) ) {\n\t\t\t// If currently selected then remove\n\t\t\tvar index = selected.indexOf(ID);\n\t\t\tif ( index > -1 ) {\n\t\t\t\tselected.splice(index, 1);\n\t\t\t}\n\t\t} else {\n\t\t\tselected.push(ID);\n\t\t}\n\t\t\n\t\tthis.setState({ selected });\n\t}\n\n\tisSelected = ( ID ) => {\n\t\tlet newsletters = this.props.newsletters.split(',');\n\t\tif ( newsletters.includes(ID) ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsubmitHandler = (e) => {\n\t\tconsole.log(this.state);\n\t\tthis.setState({loading: true});\n\t\t// Do apifetch and return success message\n\t}\n\n\tselectNewsletters = () =>{\n\t\tconst update = ( ID ) => {\n\t\t\tlet selected = this.state.selected;\n\t\n\t\t\tif ( selected.includes(ID) ) {\n\t\t\t\t// If currently selected then remove \"toggle\"\n\t\t\t\tvar index = selected.indexOf(ID);\n\t\t\t\tif ( index > -1 ) {\n\t\t\t\t\tselected.splice(index, 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tselected.push(ID);\n\t\t\t}\n\t\t\t\n\t\t\t// Update the selection of newsletters in the context of the sidebar:\n\t\t\tthis.setState({ selected });\n\t\t\t// Covnert array to string for data storage:\n\t\t\tthis.props.setAttributes({ newsletters: selected.join() });\n\t\t}\n\n\t\tconst isSelected = ( ID ) => {\n\t\t\tlet newsletters = this.state.selected;\n\t\t\tif ( newsletters.includes(ID) ) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tlet newsletters = window.prcMailchimpBlock.interests;\n\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{ newsletters.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div class=\"item\">\n\t\t\t\t\t\t\t<Form.Field><Checkbox label={item.label} value={item.value} checked={ isSelected(item.value)} className=\"sans-serif\" onChange={ (e, data) => update(data.value) }/></Form.Field>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}) }\n\t\t\t</Fragment>\n\t\t)\n\t}\n\n\trender = () => {\n\t\tlet classes = classNames(this.props.className, 'inverted', 'beige');\n\t\tconst newsletters = window.prcMailchimpBlock.interests;\n\t\tconst SelectNewsletters = this.selectNewsletters;\n\t\t\n\t\treturn(\n\t\t\t<SemanticCard fluid className={classes}>\n\t\t\t\t<SemanticCard.Header>Follow Us</SemanticCard.Header>\n\n\t\t\t\t<SemanticCard.Content>\n\t\t\t\t\t<div class=\"ui sub header\">Social Media</div>\n\t\t\t\t\t{/* Edit */}\n\t\t\t\t\t{ false !== this.props.setAttributes && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"ul\"\n\t\t\t\t\t\t\tvalue={ this.props.socialMedia }\n\t\t\t\t\t\t\tonChange={ ( socialMedia ) => {\n\t\t\t\t\t\t\t\tthis.props.setAttributes( { socialMedia } );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tformattingControls={ ['link'] }\n\t\t\t\t\t\t\tplaceholder={ this.props.socialMedia }\n\t\t\t\t\t\t\tmultiline=\"li\"\n\t\t\t\t\t\t\tclassName=\"ui link list\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{/* Display */}\n\t\t\t\t\t{ false === this.props.setAttributes && true === this.props.editMode && (\n\t\t\t\t\t\tthis.props.children\n\t\t\t\t\t) }\n\t\t\t\t\t{ false === this.props.setAttributes && undefined === this.props.editMode && (\n\t\t\t\t\t\t<RawHTML>{this.props.children}</RawHTML>\n\t\t\t\t\t) }\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"ui sub header\">Newsletters</div>\n\t\t\t\t\t<Form onSubmit={this.submitHandler}>\n\t\t\t\t\t\t<div class=\"ui list\">\n\t\t\t\t\t\t{ false === this.props.setAttributes && (\n\t\t\t\t\t\t\tnewsletters.map((item, index) => {\n\t\t\t\t\t\t\t\tif ( this.isSelected(item.value) ) {\n\t\t\t\t\t\t\t\t\treturn <div className=\"item\"><Form.Field><Checkbox label={item.label} value={item.value} className=\"sans-serif\" onChange={ (e, data) => this.selectNewsletter(data.value) }/></Form.Field></div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ false !== this.props.setAttributes && (\n\t\t\t\t\t\t\t<SelectNewsletters/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Form.Field required>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tfluid \n\t\t\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\t\t\taction={{\n\t\t\t\t\t\t\t\t\tcolor: 'secondary',\n\t\t\t\t\t\t\t\t\tsize: 'mini',\n\t\t\t\t\t\t\t\t\tcontent: 'Sign Up',\n\t\t\t\t\t\t\t\t\tloading: this.state.loading,\n\t\t\t\t\t\t\t\t\tstyle: {justifyContent: 'center', width: 'auto'}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tplaceholder='Email Address'\n\t\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\t\tonChange={ (e) => this.setState({email: e.target.value}) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form>\n\t\t\t\t</SemanticCard.Content>\n\n\t\t\t</SemanticCard>\n\t\t)\n\t}\t\n}\n\nexport default FollowUs;","module.exports = wp.apiFetch;"],"sourceRoot":""}