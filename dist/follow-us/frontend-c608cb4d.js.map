{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.element\"","webpack:///./src/follow-us/frontend.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"ReactDOM\"","webpack:///./src/follow-us/component.js","webpack:///external \"wp.apiFetch\""],"names":["module","exports","React","wp","domReady","element","document","querySelector","querySelectorAll","forEach","elm","socialMediaMarkup","innerHTML","props","newsletters","getAttribute","setAttributes","render","blockEditor","ReactDOM","FollowUs","undefined","editMode","selected","split","length","setState","ID","state","includes","index","indexOf","splice","push","e","interests","join","email","dimmed","loading","message","apiFetch","path","method","then","catch","err","console","error","finally","window","prcMailchimpBlock","map","item","className","Field","label","value","checked","onChange","data","update","classes","classNames","SelectNewsletters","selectNewsletters","fluid","style","marginBottom","Header","Dimmable","as","tagName","socialMedia","formattingControls","placeholder","multiline","children","onSubmit","submitHandler","isSelected","selectNewsletter","required","size","action","color","content","justifyContent","width","type","disabled","target","active","onClickOutside","bind","Component"],"mappings":";;;;;;;;;;;;;;;;;iIAAAA,EAAOC,QAAUC,O,kBCAjBF,EAAOC,QAAUE,GAAGC,U,iBCApBJ,EAAOC,QAAUE,GAAGE,S,8ECApB,6CAKAD,KAAS,WACDE,SAASC,cAAc,wBACVD,SAASE,iBAAiB,uBAClCC,SAAQ,SAAAC,GACT,IAAMC,EAAoBD,EAAIE,UACxBC,EAAQ,CACVC,YAAaJ,EAAIK,aAAa,oBAC9BC,eAAe,GAEnBC,iBAAO,oBAAC,IAAaJ,EAAQF,GAA+BD,U,iBCdxEV,EAAOC,QAAUE,GAAGe,a,iBCApBlB,EAAOC,QAAUkB,U,mnBCMXC,E,wCACF,WAAYP,GAAQ,IAAD,6BACf,cAAMA,GADS,gDAaC,WAChB,QAAIQ,IAAc,EAAKR,MAAMS,WAAY,IAAS,EAAKT,MAAMS,SAAU,CACnE,IAAMC,EAAW,EAAKV,MAAMC,YAAYU,MAAM,KAC1C,IAAMD,EAASE,QACf,EAAKC,SAAS,CAAEH,iBAjBT,+CAsBA,SAAAI,GAAO,IACdJ,EAAa,EAAKK,MAAlBL,SAER,GAAIA,EAASM,SAASF,GAAK,CAEvB,IAAMG,EAAQP,EAASQ,QAAQJ,IAC1B,EAAIG,GACLP,EAASS,OAAOF,EAAO,QAG3BP,EAASU,KAAKN,GAGlB,EAAKD,SAAS,CAAEH,gBAnCD,yCAsCN,SAAAI,GAET,QADoB,EAAKd,MAAMC,YAAYU,MAAM,KACjCK,SAASF,MAxCV,4CA8CH,SAAAO,GAAM,IACVR,EADS,eACTA,SACFS,EAAY,EAAKP,MAAML,SAASa,OAC9BC,EAAU,EAAKT,MAAfS,MACFT,EAAQ,CACVU,QAAQ,EACRC,SAAS,EACTC,QAAS,IAGbd,EAAS,CAAEa,SAAS,IAEpBE,IAAS,CACLC,KAAK,0CAAD,OAA4CL,EAA5C,sBAA+DF,GACnEQ,OAAQ,SAEPC,MAAK,WACFhB,EAAMY,QACF,4DAEPK,OAAM,SAAAC,GACHC,QAAQC,MAAMF,GACdlB,EAAMY,QACF,qFAEPS,SAAQ,WACLvB,EAASE,SAxEF,gDA4EC,WAChB,IA2BMd,EAAcoC,OAAOC,kBAE3B,OACI,oBAAC,WAAD,KACKrC,EAAYsC,KAAI,SAACC,EAAMvB,GACpB,OACI,2BAAKwB,UAAU,QACX,oBAAC,IAAKC,MAAN,KACI,oBAAC,IAAD,CACIC,MAAOH,EAAKG,MACZC,MAAOJ,EAAKI,MACZC,SAnBT/B,EAmB6B0B,EAAKI,QAlB7B,EAAK7B,MAAML,SACfM,SAASF,IAkBD2B,UAAU,aACVK,SAAU,SAACzB,EAAG0B,GAAJ,OAxCvB,SAAAjC,GAAO,IACVJ,EAAa,EAAKK,MAAlBL,SAER,GAAIA,EAASM,SAASF,GAAK,CAEvB,IAAMG,EAAQP,EAASQ,QAAQJ,IAC1B,EAAIG,GACLP,EAASS,OAAOF,EAAO,QAG3BP,EAASU,KAAKN,GAIlB,EAAKD,SAAS,CAAEH,aAEhB,EAAKV,MAAMG,cAAc,CAAEF,YAAaS,EAASa,SAwBFyB,CAAOD,EAAKH,YArB5C,IAAA9B,SAhGJ,qCA+HV,WACL,IAAMmC,EAAUC,IAAW,EAAKlD,MAAMyC,UAAW,WAAY,SACvDxC,EAAcoC,OAAOC,kBACrBa,EAAoB,EAAKC,kBAC/B,OACI,oBAAC,IAAD,CAAMC,OAAK,EAACZ,UAAWQ,EAASK,MAAO,CAAEC,aAAc,SACnD,oBAAC,IAAKC,OAAN,kBACA,oBAAC,IAAOC,SAAR,CACIC,GAAG,MACHjB,UAAU,UACVhB,OAAQ,EAAKV,MAAMU,QAEnB,2BAAKgB,UAAU,iBAAf,iBAEC,IAAU,EAAKzC,MAAMG,eAClB,oBAAC,WAAD,CACIwD,QAAQ,KACRf,MAAO,EAAK5C,MAAM4D,YAClBd,SAAU,SAAAc,GACN,EAAK5D,MAAMG,cAAc,CAAEyD,iBAE/BC,mBAAoB,CAAC,QACrBC,YAAa,EAAK9D,MAAM4D,YACxBG,UAAU,KACVtB,UAAU,kBAIjB,IAAU,EAAKzC,MAAMG,gBAClB,IAAS,EAAKH,MAAMS,UACpB,EAAKT,MAAMgE,UACd,IAAU,EAAKhE,MAAMG,oBAClBK,IAAc,EAAKR,MAAMS,UACrB,oBAAC,UAAD,KAAU,EAAKT,MAAMgE,UAG7B,2BAAKvB,UAAU,iBAAf,eACA,oBAAC,IAAD,CAAMwB,SAAU,EAAKC,eACjB,2BAAKzB,UAAU,YACV,IAAU,EAAKzC,MAAMG,eAClBF,EAAYsC,KAAI,SAACC,EAAMvB,GACnB,GAAI,EAAKkD,WAAW3B,EAAKI,OACrB,OACI,2BAAKH,UAAU,QACX,oBAAC,IAAKC,MAAN,KACI,oBAAC,IAAD,CACIC,MAAOH,EAAKG,MACZC,MAAOJ,EAAKI,MACZH,UAAU,aACVK,SAAU,SAACzB,EAAG0B,GAAJ,OACN,EAAKqB,iBACDrB,EAAKH,gBASxC,IAAU,EAAK5C,MAAMG,eAClB,oBAACgD,EAAD,OAIR,oBAAC,IAAKT,MAAN,CAAY2B,UAAQ,GAChB,oBAAC,IAAD,CACIhB,OAAK,EACLiB,KAAK,OACLC,OAAQ,CACJC,MAAO,YACPF,KAAM,OACNG,QAAS,UACT/C,QAAS,EAAKX,MAAMW,QACpB4B,MAAO,CACHoB,eAAgB,SAChBC,MAAO,SAGfC,KAAK,QACLd,YAAY,gBACZlB,MAAO,EAAK7B,MAAMS,MAClBqD,SAAU,EAAK9D,MAAMW,QACrBoB,SAAU,SAAAzB,GAAC,OACP,EAAKR,SAAS,CAAEW,MAAOH,EAAEyD,OAAOlC,aAMhD,oBAAC,IAAD,CACImC,OAAQ,EAAKhE,MAAMU,OACnBuD,eAAgB,WACZ,EAAKnE,SAAS,CAAEY,QAAQ,MAG5B,yBAAGgB,UAAU,cACR,EAAK1B,MAAMY,QADhB,2BA7NhB,EAAKZ,MAAQ,CACTS,MAAO,GACPE,SAAS,EACTD,QAAQ,EACRE,QAAS,GACTjB,SAAU,IAEd,EAAKG,SAAW,EAAKA,SAASoE,KAAd,gBAChB,EAAKf,cAAgB,EAAKA,cAAce,KAAnB,gBAVN,E,UADAC,aA0OR3E,O,iBChPfpB,EAAOC,QAAUE,GAAGsC,W","file":"follow-us/frontend-c608cb4d.js","sourcesContent":["module.exports = React;","module.exports = wp.domReady;","module.exports = wp.element;","import { render } from '@wordpress/element';\n\nimport domReady from '@wordpress/dom-ready';\nimport FollowUs from './component';\n\ndomReady(() => {\n    if (document.querySelector('.js-react-follow-us')) {\n        const elms = document.querySelectorAll('.js-react-follow-us');\n        elms.forEach(elm => {\n            const socialMediaMarkup = elm.innerHTML;\n            const props = {\n                newsletters: elm.getAttribute('data-newsletters'),\n                setAttributes: false,\n            };\n            render(<FollowUs {...props}>{socialMediaMarkup}</FollowUs>, elm);\n        });\n    }\n});\n","module.exports = wp.blockEditor;","module.exports = ReactDOM;","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport { Card, Checkbox, Button, Form, Input, Dimmer } from 'semantic-ui-react';\nimport classNames from 'classnames/bind';\n\nclass FollowUs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            loading: false,\n            dimmed: false,\n            message: '',\n            selected: [],\n        };\n        this.setState = this.setState.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    componentDidMount = () => {\n        if (undefined !== this.props.editMode && true === this.props.editMode) {\n            const selected = this.props.newsletters.split(',');\n            if (0 !== selected.length) {\n                this.setState({ selected });\n            }\n        }\n    };\n\n    selectNewsletter = ID => {\n        const { selected } = this.state;\n\n        if (selected.includes(ID)) {\n            // If currently selected then remove\n            const index = selected.indexOf(ID);\n            if (-1 < index) {\n                selected.splice(index, 1);\n            }\n        } else {\n            selected.push(ID);\n        }\n\n        this.setState({ selected });\n    };\n\n    isSelected = ID => {\n        const newsletters = this.props.newsletters.split(',');\n        if (newsletters.includes(ID)) {\n            return true;\n        }\n        return false;\n    };\n\n    submitHandler = e => {\n        const { setState } = this;\n        const interests = this.state.selected.join();\n        const { email } = this.state;\n        const state = {\n            dimmed: true,\n            loading: false,\n            message: '',\n        };\n\n        setState({ loading: true });\n\n        apiFetch({\n            path: `/prc-api/v2/mailchimp/subscribe/?email=${email}&interests=${interests}`,\n            method: 'POST',\n        })\n            .then(() => {\n                state.message =\n                    'You have succesfully subsrcibed to these newsletter(s)';\n            })\n            .catch(err => {\n                console.error(err);\n                state.message =\n                    'Unfortunately we could not susbscribe you at this time. Please try again later.';\n            })\n            .finally(() => {\n                setState(state);\n            });\n    };\n\n    selectNewsletters = () => {\n        const update = ID => {\n            const { selected } = this.state;\n\n            if (selected.includes(ID)) {\n                // If currently selected then remove \"toggle\"\n                const index = selected.indexOf(ID);\n                if (-1 < index) {\n                    selected.splice(index, 1);\n                }\n            } else {\n                selected.push(ID);\n            }\n\n            // Update the selection of newsletters in the context of the sidebar:\n            this.setState({ selected });\n            // Covnert array to string for data storage:\n            this.props.setAttributes({ newsletters: selected.join() });\n        };\n\n        const isSelected = ID => {\n            const newsletters = this.state.selected;\n            if (newsletters.includes(ID)) {\n                return true;\n            }\n            return false;\n        };\n\n        const newsletters = window.prcMailchimpBlock;\n\n        return (\n            <Fragment>\n                {newsletters.map((item, index) => {\n                    return (\n                        <div className=\"item\">\n                            <Form.Field>\n                                <Checkbox\n                                    label={item.label}\n                                    value={item.value}\n                                    checked={isSelected(item.value)}\n                                    className=\"sans-serif\"\n                                    onChange={(e, data) => update(data.value)}\n                                />\n                            </Form.Field>\n                        </div>\n                    );\n                })}\n            </Fragment>\n        );\n    };\n\n    render = () => {\n        const classes = classNames(this.props.className, 'inverted', 'beige');\n        const newsletters = window.prcMailchimpBlock;\n        const SelectNewsletters = this.selectNewsletters;\n        return (\n            <Card fluid className={classes} style={{ marginBottom: '35px' }}>\n                <Card.Header>Follow Us</Card.Header>\n                <Dimmer.Dimmable\n                    as=\"div\"\n                    className=\"content\"\n                    dimmed={this.state.dimmed}\n                >\n                    <div className=\"ui sub header\">Social Media</div>\n                    {/* Edit */}\n                    {false !== this.props.setAttributes && (\n                        <RichText\n                            tagName=\"ul\"\n                            value={this.props.socialMedia}\n                            onChange={socialMedia => {\n                                this.props.setAttributes({ socialMedia });\n                            }}\n                            formattingControls={['link']}\n                            placeholder={this.props.socialMedia}\n                            multiline=\"li\"\n                            className=\"ui link list\"\n                        />\n                    )}\n                    {/* Display */}\n                    {false === this.props.setAttributes &&\n                        true === this.props.editMode &&\n                        this.props.children}\n                    {false === this.props.setAttributes &&\n                        undefined === this.props.editMode && (\n                            <RawHTML>{this.props.children}</RawHTML>\n                        )}\n\n                    <div className=\"ui sub header\">Newsletters</div>\n                    <Form onSubmit={this.submitHandler}>\n                        <div className=\"ui list\">\n                            {false === this.props.setAttributes &&\n                                newsletters.map((item, index) => {\n                                    if (this.isSelected(item.value)) {\n                                        return (\n                                            <div className=\"item\">\n                                                <Form.Field>\n                                                    <Checkbox\n                                                        label={item.label}\n                                                        value={item.value}\n                                                        className=\"sans-serif\"\n                                                        onChange={(e, data) =>\n                                                            this.selectNewsletter(\n                                                                data.value,\n                                                            )\n                                                        }\n                                                    />\n                                                </Form.Field>\n                                            </div>\n                                        );\n                                    }\n                                })}\n                            {false !== this.props.setAttributes && (\n                                <SelectNewsletters />\n                            )}\n                        </div>\n\n                        <Form.Field required>\n                            <Input\n                                fluid\n                                size=\"mini\"\n                                action={{\n                                    color: 'secondary',\n                                    size: 'mini',\n                                    content: 'Sign Up',\n                                    loading: this.state.loading,\n                                    style: {\n                                        justifyContent: 'center',\n                                        width: 'auto',\n                                    },\n                                }}\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                value={this.state.email}\n                                disabled={this.state.loading}\n                                onChange={e =>\n                                    this.setState({ email: e.target.value })\n                                }\n                            />\n                        </Form.Field>\n                    </Form>\n\n                    <Dimmer\n                        active={this.state.dimmed}\n                        onClickOutside={() => {\n                            this.setState({ dimmed: false });\n                        }}\n                    >\n                        <p className=\"sans-serif\">\n                            {this.state.message} (Click to close)\n                        </p>\n                    </Dimmer>\n                </Dimmer.Dimmable>\n            </Card>\n        );\n    };\n}\n\nexport default FollowUs;\n","module.exports = wp.apiFetch;"],"sourceRoot":""}