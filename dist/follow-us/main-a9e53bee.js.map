{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///./src/follow-us/index.js","webpack:///external \"wp.element\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"ReactDOM\"","webpack:///./src/follow-us/component.js","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.i18n\""],"names":["module","exports","React","wp","blocks","registerBlockType","title","__","icon","category","keywords","supports","html","attributes","newsletters","type","default","socialMedia","source","selector","multiline","edit","props","data","setAttributes","editMode","isSelected","Content","className","tagName","value","save","data-newsletters","element","blockEditor","ReactDOM","FollowUs","undefined","selected","split","length","setState","ID","state","includes","index","indexOf","splice","push","e","interests","join","email","dimmed","loading","message","apiFetch","path","method","then","catch","err","console","error","finally","window","prcMailchimpBlock","map","item","Field","label","checked","onChange","update","classes","classNames","SelectNewsletters","selectNewsletters","fluid","style","marginBottom","Header","Dimmable","as","formattingControls","placeholder","children","onSubmit","submitHandler","selectNewsletter","required","size","action","color","content","justifyContent","width","disabled","target","active","onClickOutside","bind","Component","i18n"],"mappings":"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","file":"follow-us/main-a9e53bee.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","/**\n * BLOCK: prc-blocks\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\n\nimport { __ } from \"@wordpress/i18n\";\nimport { registerBlockType } from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\n\nimport FollowUs from './component';\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/follow-us', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Follow Us' ), // Block title.\n\ticon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'newsletter' ),\n\t\t__( 'follow us' ),\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\tnewsletters: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsocialMedia: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tselector: '.ui.link.list',\n\t\t\tmultiline: 'li',\n\t\t\tdefault: '<li><a href=\"#\">Twitter</a></li>'\n\t\t},\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: ( props ) => {\n\t\tlet data = props.attributes;\n\t\tdata.setAttributes = false;\n\t\tdata.editMode = true;\n\t\tif ( true === props.isSelected ) {\n\t\t\tdata.setAttributes = props.setAttributes;\n\t\t}\n\t\treturn(\n\t\t\t<FollowUs {...data}>\n\t\t\t\t<RichText.Content className=\"ui link list\" tagName=\"div\" value={ data.socialMedia } />\n\t\t\t</FollowUs>\n\t\t)\n\t},\n\n\t// Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\treturn (\n\t\t\t<div className=\"js-react-follow-us\" data-newsletters={props.attributes.newsletters}>\n\t\t\t\t<RichText.Content className=\"ui link list\" tagName=\"div\" value={ props.attributes.socialMedia } />\n\t\t\t</div>\n\t\t);\n\t},\n} );\n","module.exports = wp.element;","module.exports = wp.blockEditor;","module.exports = ReactDOM;","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport { Card, Checkbox, Button, Form, Input, Dimmer } from 'semantic-ui-react';\nimport classNames from 'classnames/bind';\n\nclass FollowUs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            loading: false,\n            dimmed: false,\n            message: '',\n            selected: [],\n        };\n        this.setState = this.setState.bind(this);\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    componentDidMount = () => {\n        if (undefined !== this.props.editMode && true === this.props.editMode) {\n            const selected = this.props.newsletters.split(',');\n            if (0 !== selected.length) {\n                this.setState({ selected });\n            }\n        }\n    };\n\n    selectNewsletter = ID => {\n        const { selected } = this.state;\n\n        if (selected.includes(ID)) {\n            // If currently selected then remove\n            const index = selected.indexOf(ID);\n            if (-1 < index) {\n                selected.splice(index, 1);\n            }\n        } else {\n            selected.push(ID);\n        }\n\n        this.setState({ selected });\n    };\n\n    isSelected = ID => {\n        const newsletters = this.props.newsletters.split(',');\n        if (newsletters.includes(ID)) {\n            return true;\n        }\n        return false;\n    };\n\n    submitHandler = e => {\n        const { setState } = this;\n        const interests = this.state.selected.join();\n        const { email } = this.state;\n        const state = {\n            dimmed: true,\n            loading: false,\n            message: '',\n        };\n\n        setState({ loading: true });\n\n        apiFetch({\n            path: `/prc-api/v2/mailchimp/subscribe/?email=${email}&interests=${interests}`,\n            method: 'POST',\n        })\n            .then(() => {\n                state.message =\n                    'You have succesfully subsrcibed to these newsletter(s)';\n            })\n            .catch(err => {\n                console.error(err);\n                state.message =\n                    'Unfortunately we could not susbscribe you at this time. Please try again later.';\n            })\n            .finally(() => {\n                setState(state);\n            });\n    };\n\n    selectNewsletters = () => {\n        const update = ID => {\n            const { selected } = this.state;\n\n            if (selected.includes(ID)) {\n                // If currently selected then remove \"toggle\"\n                const index = selected.indexOf(ID);\n                if (-1 < index) {\n                    selected.splice(index, 1);\n                }\n            } else {\n                selected.push(ID);\n            }\n\n            // Update the selection of newsletters in the context of the sidebar:\n            this.setState({ selected });\n            // Covnert array to string for data storage:\n            this.props.setAttributes({ newsletters: selected.join() });\n        };\n\n        const isSelected = ID => {\n            const newsletters = this.state.selected;\n            if (newsletters.includes(ID)) {\n                return true;\n            }\n            return false;\n        };\n\n        const newsletters = window.prcMailchimpBlock;\n\n        return (\n            <Fragment>\n                {newsletters.map((item, index) => {\n                    return (\n                        <div className=\"item\">\n                            <Form.Field>\n                                <Checkbox\n                                    label={item.label}\n                                    value={item.value}\n                                    checked={isSelected(item.value)}\n                                    className=\"sans-serif\"\n                                    onChange={(e, data) => update(data.value)}\n                                />\n                            </Form.Field>\n                        </div>\n                    );\n                })}\n            </Fragment>\n        );\n    };\n\n    render = () => {\n        const classes = classNames(this.props.className, 'inverted', 'beige');\n        const newsletters = window.prcMailchimpBlock;\n        const SelectNewsletters = this.selectNewsletters;\n        return (\n            <Card fluid className={classes} style={{ marginBottom: '35px' }}>\n                <Card.Header>Follow Us</Card.Header>\n                <Dimmer.Dimmable\n                    as=\"div\"\n                    className=\"content\"\n                    dimmed={this.state.dimmed}\n                >\n                    <div className=\"ui sub header\">Social Media</div>\n                    {/* Edit */}\n                    {false !== this.props.setAttributes && (\n                        <RichText\n                            tagName=\"ul\"\n                            value={this.props.socialMedia}\n                            onChange={socialMedia => {\n                                this.props.setAttributes({ socialMedia });\n                            }}\n                            formattingControls={['link']}\n                            placeholder={this.props.socialMedia}\n                            multiline=\"li\"\n                            className=\"ui link list\"\n                        />\n                    )}\n                    {/* Display */}\n                    {false === this.props.setAttributes &&\n                        true === this.props.editMode &&\n                        this.props.children}\n                    {false === this.props.setAttributes &&\n                        undefined === this.props.editMode && (\n                            <RawHTML>{this.props.children}</RawHTML>\n                        )}\n\n                    <div className=\"ui sub header\">Newsletters</div>\n                    <Form onSubmit={this.submitHandler}>\n                        <div className=\"ui list\">\n                            {false === this.props.setAttributes &&\n                                newsletters.map((item, index) => {\n                                    if (this.isSelected(item.value)) {\n                                        return (\n                                            <div className=\"item\">\n                                                <Form.Field>\n                                                    <Checkbox\n                                                        label={item.label}\n                                                        value={item.value}\n                                                        className=\"sans-serif\"\n                                                        onChange={(e, data) =>\n                                                            this.selectNewsletter(\n                                                                data.value,\n                                                            )\n                                                        }\n                                                    />\n                                                </Form.Field>\n                                            </div>\n                                        );\n                                    }\n                                })}\n                            {false !== this.props.setAttributes && (\n                                <SelectNewsletters />\n                            )}\n                        </div>\n\n                        <Form.Field required>\n                            <Input\n                                fluid\n                                size=\"mini\"\n                                action={{\n                                    color: 'secondary',\n                                    size: 'mini',\n                                    content: 'Sign Up',\n                                    loading: this.state.loading,\n                                    style: {\n                                        justifyContent: 'center',\n                                        width: 'auto',\n                                    },\n                                }}\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                value={this.state.email}\n                                disabled={this.state.loading}\n                                onChange={e =>\n                                    this.setState({ email: e.target.value })\n                                }\n                            />\n                        </Form.Field>\n                    </Form>\n\n                    <Dimmer\n                        active={this.state.dimmed}\n                        onClickOutside={() => {\n                            this.setState({ dimmed: false });\n                        }}\n                    >\n                        <p className=\"sans-serif\">\n                            {this.state.message} (Click to close)\n                        </p>\n                    </Dimmer>\n                </Dimmer.Dimmable>\n            </Card>\n        );\n    };\n}\n\nexport default FollowUs;\n","module.exports = wp.apiFetch;","module.exports = wp.i18n;"],"sourceRoot":""}