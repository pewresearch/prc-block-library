{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/kicker/display.js","webpack:///./src/_shared/components/kicker/edit.js","webpack:///./src/_shared/components/image/display.js","webpack:///./src/_shared/components/image/edit.js","webpack:///./src/_shared/components/image/index.js","webpack:///./src/story-item/component.js","webpack:///./src/story-item/index.js","webpack:///external \"moment\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.element\"","webpack:///external \"lodash\"","webpack:///external \"wp.components\""],"names":["module","exports","React","wp","blocks","apiFetch","url","blockEditor","getTerms","taxonomy","collection","api","collections","undefined","Promise","resolve","data","fetch","hide_empty","per_page","then","terms","index","length","slug","replace","toLowerCase","id","name","Kicker","label","date","labelSlug","classes","classNames","className","moment","format","KickerEditor","withState","labelOptions","setAttributes","setState","useEffect","Object","keys","forEach","key","termObj","push","value","sort","a","b","getTermsAsOptions","options","style","display","alignItems","onChange","l","marginBottom","d","Display","img","size","link","getImgURL","variant","legacy","default","small","hidpi","smallHidpi","args","resize","addQueryArgs","getImgSrcSet","threshold","srcSet","media","sources","href","ALLOWED_MEDIA_TYPES","Edit","slot","chartArt","dataHandler","Toolbar","handler","open","flexWrap","icon","onClick","image","imageSlot","isChartArt","imageSize","onSelect","allowedTypes","render","isPrimary","Image","isMedium","ui","medium","bordered","defaultProps","Description","content","enabled","sansSerif","tagName","excerpt","placeholder","multiline","Content","Extra","extra","Header","title","currentSize","Item","Meta","controls","map","active","isActive","headerSize","as","StoryItem","props","attrs","enableHeader","enableExcerpt","enableExtra","item","bind","this","isSelected","attributes","enableProgramsTaxonomy","isStacked","isBordered","emphasis","stacked","Component","EditSidebar","path","console","log","siteID","includes","window","siteDomain","getSiteIDFromURL","post","info","postID","__","disabled","setPostByURL","checked","state","registerBlockType","category","keywords","styles","isDefault","supports","html","type","source","selector","horizontal","edit","save","i18n","ReactDOM","element","lodash","components"],"mappings":"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","file":"story-item/main-5be10f6e.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.blockEditor;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nconst getTerms = taxonomy => {\n    const collection = new wp.api.collections[taxonomy]();\n    if (undefined === collection) {\n        return false;\n    }\n    return new Promise(resolve => {\n        const data = {};\n        collection\n            .fetch({\n                data: { hide_empty: false, per_page: 25 },\n            })\n            .then(terms => {\n                for (let index = 0; index < terms.length; index++) {\n                    const slug = terms[index].slug.replace(\n                        `${taxonomy.toLowerCase()}_`,\n                        '',\n                    );\n                    data[terms[index].id] = {\n                        id: terms[index].id,\n                        name: terms[index].name,\n                        slug,\n                    };\n                }\n                resolve(data);\n            });\n    });\n};\n\nconst getTermsAsOptions = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n                labelOptions.push({\n                    value: termObj.name,\n                    label: termObj.name,\n                });\n            });\n\n            labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsAsOptions };\n","import { Fragment } from '@wordpress/element';\nimport classNames from 'classnames/bind';\nimport * as moment from 'moment';\n\nconst Kicker = ({ label = 'Report', date }) => {\n    const formatDate = dateString => {\n        return moment(dateString).format('MMM D, YYYY');\n    };\n\n    const labelSlug = label.replace(/\\s+/g, '-').toLowerCase();\n\n    const classes = classNames(labelSlug, 'label');\n\n    return (\n        <Fragment>\n            <span className={classes}>{label || 'Report'}</span>\n            {' | '}\n            {formatDate(date)}\n        </Fragment>\n    );\n};\n\nexport default Kicker;\n","import { useEffect } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { getTermsAsOptions } from '../../helpers';\n\nconst KickerEditor = withState({\n    labelOptions: [],\n})(({ label, date, taxonomy, setAttributes, setState, labelOptions }) => {\n    // On initial load & taxonomy change:\n    useEffect(() => {\n        getTermsAsOptions(taxonomy).then(options =>\n            setState({ labelOptions: options }),\n        );\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default KickerEditor;\n","import { Fragment } from '@wordpress/element';\nimport { Picture } from 'react-responsive-picture';\nimport { addQueryArgs } from '@wordpress/url';\n\nconst Display = ({ img, size, link }) => {\n    // eslint-disable-next-line no-shadow\n    const getImgURL = (url, size, variant) => {\n        if ('' === url || false === url) {\n            return url;\n        }\n\n        const A1 = {\n            default: '564,317',\n            small: '354,194',\n            hidpi: '1128,634',\n            smallHidpi: '708,388',\n        };\n\n        const A2 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,301',\n            smallHidpi: '708,388',\n        };\n\n        const A3 = {\n            default: '194,110',\n            small: '148,84',\n            hidpi: '388,220',\n            smallHidpi: '296,168',\n        };\n\n        const A4 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,302',\n            smallHidpi: '708,388',\n        };\n\n        const legacy = {\n            '260': {\n                default: '260,260',\n                small: '260,260',\n                hidpi: '520,520',\n                smallHidpi: '520,520',\n            },\n            '260-173': {\n                default: '260,173',\n                small: '260,173',\n                hidpi: '520,346',\n                smallHidpi: '520,346',\n            },\n        };\n\n        // Default to A1\n        let args = { resize: A1[variant] };\n        if ('A2' === size) {\n            args = { resize: A2[variant] };\n        } else if ('A3' === size) {\n            args = { resize: A3[variant] };\n        } else if ('A4' === size) {\n            args = { resize: A4[variant] };\n        }\n\n        // Temp legacy sizes for homepages\n        if ('legacy-260' === size) {\n            args = { resize: legacy['260'][variant] };\n        } else if ('legacy-260-173' === size) {\n            args = { resize: legacy['260-173'][variant] };\n        }\n\n        return addQueryArgs(url, args);\n    };\n\n    // eslint-disable-next-line no-shadow\n    const getImgSrcSet = (url, size, threshold = 420) => {\n        return [\n            {\n                srcSet: `${getImgURL(url, size, 'default')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'hidpi',\n                )} 2x`,\n                media: `(min-width: ${threshold}px)`,\n            },\n            {\n                srcSet: `${getImgURL(url, size, 'small')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'smallHidpi',\n                )} 2x`,\n                media: `(max-width: ${threshold}px)`,\n            },\n        ];\n    };\n\n    return (\n        <Fragment>\n            {'' === link && <Picture sources={getImgSrcSet(img, size)} />}\n            {'' !== link && (\n                <a href={link}>\n                    <Picture sources={getImgSrcSet(img, size)} />\n                </a>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Display;\n","import { Fragment } from '@wordpress/element';\nimport { Button, IconButton, SelectControl } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\nconst Edit = ({ img, size, slot, chartArt, dataHandler }) => {\n    const mediaHandler = media => {\n        if ('disabled' === slot) {\n            dataHandler({ image: media.url, imageSlot: 'default' });\n        } else {\n            dataHandler({ image: media.url });\n        }\n    };\n\n    const Toolbar = ({ handler, open }) => {\n        return (\n            <div className=\"image-editor-toolbar\">\n                <div>\n                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                        <IconButton\n                            icon=\"upload\"\n                            label=\"Select/Upload New Image\"\n                            onClick={open}\n                        />\n                        <IconButton\n                            icon=\"trash\"\n                            label=\"Remove Image\"\n                            onClick={() => {\n                                handler({\n                                    image: '',\n                                    imageSlot: 'disabled',\n                                });\n                            }}\n                        />\n\n                        <Fragment>\n                            {null !== chartArt && (\n                                <IconButton\n                                    icon=\"art\"\n                                    label={\n                                        true === chartArt\n                                            ? 'Disable Chart Art'\n                                            : 'Enable Chart Art'\n                                    }\n                                    onClick={() => {\n                                        handler({\n                                            isChartArt: !chartArt,\n                                        });\n                                    }}\n                                />\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n                {null !== slot && (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <SelectControl\n                            label=\"Image Size\"\n                            value={size}\n                            options={[\n                                { value: 'A1', label: 'A1' },\n                                { value: 'A2', label: 'A2' },\n                                { value: 'A3', label: 'A3' },\n                                { value: 'A4', label: 'A4' },\n                                {\n                                    value: 'legacy-260',\n                                    label: 'Legacy Homepage 260x260',\n                                },\n                                {\n                                    value: 'legacy-260-173',\n                                    label: 'Legacy Homepage 260x173',\n                                },\n                            ]}\n                            onChange={imageSize => handler({ imageSize })}\n                            style={{ marginBottom: '0px' }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={mediaHandler}\n                allowedTypes={ALLOWED_MEDIA_TYPES}\n                render={({ open }) => (\n                    <Fragment>\n                        {'' !== img && (\n                            <Toolbar handler={dataHandler} open={open} />\n                        )}\n                        {'' === img && (\n                            <p>\n                                <Button isPrimary onClick={open}>\n                                    Insert Image\n                                </Button>\n                            </p>\n                        )}\n                    </Fragment>\n                )}\n            />\n        </MediaUploadCheck>\n    );\n};\n\nexport default Edit;\n","import './imageEditor.scss';\n\nimport classNames from 'classnames/bind';\n\nimport Display from './display';\nimport Edit from './edit';\n\n/**\n * Props:\n * img: string url of image to display\n * size: string of image/slot size (A1,A2,A3,A4)\n * link: string of url to go to when image is clicked on front end\n * slot: if set to null then no image size chooser will be display\n * chartArt: if set to null then no chart art button will appear\n * dataHandler: defaults to false unless otherwise provided a function to pass data back up to a HOC state.\n *\n * <Image id={} img={} size={} link={} slot={} chartArt={} dataHandler={}/>\n */\n\nconst Image = ({ img, link, size, slot, chartArt, dataHandler }) => {\n    const classes = () => {\n        let isMedium = false;\n\n        if (false !== slot) {\n            if ('left' === slot || 'right' === slot) {\n                isMedium = true;\n            }\n        }\n\n        return classNames({\n            ui: true,\n            medium: isMedium,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <Display\n                img={img}\n                size={size}\n                link={false !== dataHandler ? '' : link}\n            />\n            {false !== dataHandler && (\n                <Edit\n                    img={img}\n                    slot={slot}\n                    size={size}\n                    chartArt={chartArt}\n                    dataHandler={dataHandler}\n                />\n            )}\n        </div>\n    );\n};\n\nImage.defaultProps = {\n    img: '',\n    link: '',\n    size: 'A1',\n    slot: false,\n    chartArt: false,\n    dataHandler: false,\n};\n\nexport default Image;\n","// WordPress Core\nimport { Component, Fragment } from '@wordpress/element';\nimport { RichText, BlockControls } from '@wordpress/block-editor';\nimport { Toolbar } from '@wordpress/components';\n\n// Utilities\nimport classNames from 'classnames/bind';\n\nimport { Item } from 'semantic-ui-react';\nimport { Image, Kicker, KickerEditor } from '../_shared';\n\nconst Description = function({ content, enabled, setAttributes, sansSerif }) {\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Fragment>\n                    {false !== setAttributes && (\n                        <RichText\n                            tagName=\"div\"\n                            value={content}\n                            onChange={excerpt => setAttributes({ excerpt })}\n                            placeholder={content}\n                            multiline=\"p\"\n                            className={classes}\n                        />\n                    )}\n                    {false === setAttributes && (\n                        <RichText.Content\n                            tagName=\"div\"\n                            value={content}\n                            className={classes}\n                        />\n                    )}\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nconst Extra = function({ enabled, content, setAttributes }) {\n    const classes = classNames('extra');\n    return (\n        <Fragment>\n            {false !== setAttributes && true === enabled && (\n                <RichText\n                    tagName=\"ul\" // The tag here is the element output and editable in the admin\n                    value={content} // Any existing content, either from the database or an attribute default\n                    onChange={extra => setAttributes({ extra })} // Store updated content as a block attribute\n                    placeholder={content} // Display this text before any content has been added by the user\n                    multiline=\"li\"\n                    className={classes}\n                />\n            )}\n            {false === setAttributes && true === enabled && (\n                <RichText.Content\n                    tagName=\"ul\"\n                    value={content}\n                    className={classes}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nconst Header = function({\n    title,\n    label,\n    date,\n    link,\n    enabled,\n    size,\n    taxonomy,\n    setAttributes,\n}) {\n    const currentSize = size;\n    const PostTitle = ({ title, link, as = 'a' }) => {\n        return <RichText.Content href={link} tagName={as} value={title} />;\n    };\n    const createSizeControls = function(size) {\n        let active = false;\n        if (size === currentSize) {\n            active = true;\n        }\n        return {\n            icon: 'editor-textcolor',\n            title: `Size: ${size}`,\n            isActive: active,\n            onClick: () => {\n                setAttributes({ headerSize: size });\n            },\n        };\n    };\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Fragment>\n                    <Item.Meta>\n                        {false !== setAttributes && (\n                            <KickerEditor\n                                date={date}\n                                label={label}\n                                taxonomy={taxonomy}\n                                setAttributes={setAttributes}\n                            />\n                        )}\n                        {false === setAttributes && (\n                            <Kicker label={label} date={date} />\n                        )}\n                    </Item.Meta>\n                    <Item.Header className={size}>\n                        {false !== setAttributes && (\n                            <Fragment>\n                                <BlockControls>\n                                    <Toolbar\n                                        controls={[\n                                            'small',\n                                            'normal',\n                                            'large',\n                                        ].map(createSizeControls)}\n                                    />\n                                </BlockControls>\n                                <RichText\n                                    tagName=\"div\" // The tag here is the element output and editable in the admin\n                                    value={title} // Any existing content, either from the database or an attribute default\n                                    onChange={title => setAttributes({ title })} // Store updated content as a block attribute\n                                    placeholder=\"Title\" // Display this text before any content has been added by the user\n                                    multiline=\"br\"\n                                />\n                            </Fragment>\n                        )}\n                        {false === setAttributes && (\n                            <PostTitle\n                                title={title}\n                                link={link}\n                                as=\"a\"\n                                size={size}\n                            />\n                        )}\n                    </Item.Header>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nclass StoryItem extends Component {\n    constructor(props) {\n        super(props);\n        this.item = this.item.bind(this);\n    }\n\n    item = attrs => {\n        return (\n            <Item as=\"article\" className={attrs.classes}>\n                {('top' === attrs.imageSlot || 'left' === attrs.imageSlot) && (\n                    <Image\n                        img={attrs.image}\n                        size={attrs.imageSize}\n                        link={attrs.link}\n                        slot={attrs.imageSlot}\n                        chartArt={attrs.isChartArt}\n                        dataHandler={attrs.setAttributes}\n                    />\n                )}\n\n                <Item.Content>\n                    <Header\n                        title={attrs.title}\n                        date={attrs.date}\n                        label={attrs.label}\n                        link={attrs.link}\n                        setAttributes={attrs.setAttributes}\n                        enabled={attrs.enableHeader}\n                        size={attrs.headerSize}\n                        taxonomy={attrs.taxonomy} // Where??\n                    />\n\n                    {'default' === attrs.imageSlot && (\n                        <Image\n                            img={attrs.image}\n                            size={attrs.imageSize}\n                            link={attrs.link}\n                            slot={attrs.imageSlot}\n                            chartArt={attrs.isChartArt}\n                            dataHandler={attrs.setAttributes}\n                        />\n                    )}\n\n                    <Description\n                        content={attrs.excerpt}\n                        enabled={attrs.enableExcerpt}\n                        setAttributes={attrs.setAttributes}\n                        sansSerif={!attrs.enableHeader}\n                    />\n\n                    <Extra\n                        enabled={attrs.enableExtra}\n                        content={attrs.extra}\n                        setAttributes={attrs.setAttributes}\n                    />\n                </Item.Content>\n\n                {('bottom' === attrs.imageSlot ||\n                    'right' === attrs.imageSlot) && (\n                    <Image\n                        img={attrs.image}\n                        size={attrs.imageSize}\n                        link={attrs.link}\n                        slot={attrs.imageSlot}\n                        chartArt={attrs.isChartArt}\n                        dataHandler={attrs.setAttributes}\n                    />\n                )}\n            </Item>\n        );\n    };\n\n    render() {\n        // If the block is not selected, it is not in edit mode, disable setAttributes.\n        if (\n            undefined === this.props.isSelected ||\n            true !== this.props.isSelected\n        ) {\n            this.props.setAttributes = false;\n        }\n\n        this.props.attributes.taxonomy = 'Formats';\n        if (true === this.props.attributes.enableProgramsTaxonomy) {\n            this.props.attributes.taxonomy = 'Programs';\n        }\n\n        let isStacked = true;\n        if (\n            'left' === this.props.attributes.imageSlot ||\n            'right' === this.props.attributes.imageSlot\n        ) {\n            isStacked = false;\n        }\n\n        let isBordered = false;\n        if (true === this.props.attributes.emphasis) {\n            isBordered = true;\n        }\n\n        this.props.attributes.classes = classNames(\n            this.props.attributes.className,\n            'story-item',\n            { stacked: isStacked, bordered: isBordered },\n        );\n\n        const attrs = this.props.attributes;\n        attrs.setAttributes = this.props.setAttributes;\n\n        return (\n            <Fragment>\n                <this.item {...attrs} />\n            </Fragment>\n        );\n    }\n}\n\nexport default StoryItem;\n","/**\n * BLOCK: prc-blocks\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\n\n//  Import CSS.\nimport './editor.scss';\n// Our front end styles are included in our theme\n\nimport { __ } from \"@wordpress/i18n\";\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { Button, PanelBody, ToggleControl, TextControl } from '@wordpress/components';\nimport { Component, Fragment } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport * as moment from 'moment';\n\nimport StoryItem from './component';\n\nclass EditSidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\turl: '',\n\t\t}\n\t\tthis.setPostByURL = this.setPostByURL.bind(this);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.setState({ url: this.props.attributes.link });\n\t}\n\n\t/**\n\t * Loading Posts\n\t */\n\tsetPostByURL = () => {\n\t\tconst setAttributes = this.props.setAttributes;\n\t\tlet url = this.props.attributes.link;\n\n\t\tconst getSiteIDFromURL = (url) => {\n\t\t\tconsole.log(url);\n\t\t\tlet siteID = 1;\n\t\t\tif ( url.includes(window.siteDomain + '/global/' ) ) {\n\t\t\t\tsiteID = 2;\n\t\t\t} else if ( url.includes(window.siteDomain + '/hispanic/' ) ) {\n\t\t\t\tsiteID = 5;\n\t\t\t} else if ( url.includes(window.siteDomain + '/science/' ) ) {\n\t\t\t\tsiteID = 16;\n\t\t\t} else if ( url.includes(window.siteDomain + '/methods/' ) ) {\n\t\t\t\tsiteID = 10;\n\t\t\t} else if ( url.includes(window.siteDomain + '/internet/' ) ) {\n\t\t\t\tsiteID = 9;\n\t\t\t} else if ( url.includes('https://www.people-press.org/' ) ) {\n\t\t\t\tsiteID = 4;\n\t\t\t} else if ( url.includes('https://www.pewforum.org/' ) ) {\n\t\t\t\tsiteID = 7;\n\t\t\t} else if ( url.includes('https://www.journalism.org/' ) ) {\n\t\t\t\tsiteID = 8;\n\t\t\t} else if ( url.includes('https://www.pewsocialtrends.org/' ) ) {\n\t\t\t\tsiteID = 3;\n\t\t\t} else if ( url.includes('https://www.pewresearch.org/' ) || url.includes(window.siteDomain) ) {\n\t\t\t\tsiteID = 1;\n\t\t\t}\n\t\t\treturn siteID;\n\t\t}\n\n\t\tif ( undefined === setAttributes || undefined === url ) {\n\t\t\treturn;\n\t\t}\n\n\t\tapiFetch( { path: '/prc-api/v2/blocks/helpers/get-post-by-url/?url=' + url + '&siteID=' + getSiteIDFromURL(url) } ).then( post => {\n\t\t\tconsole.info('Post Returned:');\n\t\t\tconsole.log(post);\n\t\t\tif ( false !== post ) {\n\t\t\t\tsetAttributes({\n\t\t\t\t\ttitle: post.title,\n\t\t\t\t\timage: post.image,\n\t\t\t\t\texcerpt: post.excerpt,\n\t\t\t\t\tlink: post.link,\n\t\t\t\t\tlabel: post.label,\n\t\t\t\t\tdate: post.date,\n\t\t\t\t\tpostID: post.id,\n\t\t\t\t\textra: '', // We want to clear extra when pulling a new post\n\t\t\t\t});\n\t\t\t}\n        } );\n\t} \n\n\trender = () => {\n\t\tconst setAttributes = this.props.setAttributes;\n\t\treturn(\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Story Item Options' ) }>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Post ID\"\n\t\t\t\t\t\t\tvalue={ this.props.attributes.postID }\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='story-item-link'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel=\"Link\"\n\t\t\t\t\t\t\t\tvalue={ this.props.attributes.link }\n\t\t\t\t\t\t\t\tonChange={ ( link ) => setAttributes({link}) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.setPostByURL} isPrimary>Fetch</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p><strong>Content Options:</strong></p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableHeader ? 'Header Enabled' : 'Header Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableHeader }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableHeader: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableExcerpt ? 'Excerpt Enabled' : 'Excerpt Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableExcerpt }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableExcerpt: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableExtra ? 'Extras Enabled' : 'Extras Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableExtra }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableExtra: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.emphasis ? 'Emphasis Enabled' : 'Emphasis Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.emphasis }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ emphasis: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableProgramsTaxonomy ? 'Programs' : 'Formats' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableProgramsTaxonomy }\n\t\t\t\t\t\t\tonChange={ (value) => { \n\t\t\t\t\t\t\t\tsetAttributes({ enableProgramsTaxonomy: value });\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t)\n\t}\n}\n\nconst todaysDate = () => {\n\treturn moment().format(\"MMM D, YYYY\");\n}\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/story-item', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Story Item' ), // Block title.\n\ticon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'story' ),\n\t\t__( 'post' ),\n\t\t__( 'story item' ),\n\t],\n\tstyles: [\n\t\t{\n\t\t\tname: 'disabled',\n\t\t\tlabel: 'Image Disabled',\n\t\t},\n\t\t{\n\t\t\tname: 'default',\n\t\t\tlabel: 'Default Image Alignment',\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'top',\n\t\t\tlabel: 'Image Aligned Top',\n\t\t},\n\t\t{\n\t\t\tname: 'bottom',\n\t\t\tlabel: 'Image Aligned Bottom',\n\t\t},\n\t\t{\n\t\t\tname: 'left',\n\t\t\tlabel: 'Image Aligned Left',\n\t\t},\n\t\t{\n\t\t\tname: 'right',\n\t\t\tlabel: 'Image Aligned Right',\n\t\t}\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\t// Item Content\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Title',\n\t\t},\n\t\texcerpt: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tmultiline: 'p',\n\t\t\tselector: '.description',\n\t\t\tdefault: '<p>Excerpt</p>',\n\t\t},\n\t\textra: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tmultiline: 'li',\n\t\t\tselector: '.extra',\n\t\t\tdefault: '',\n\t\t},\n\t\t// Item Meta\n\t\tlink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\tlabel: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Report',\n\t\t},\n\t\tdate: {\n\t\t\ttype: 'string',\n\t\t\tdefault: todaysDate(),\n\t\t},\n\t\t// Images\n\t\timage: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\timageSlot: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'disabled',\n\t\t},\n\t\timageSize: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'A1',\n\t\t},\n\t\tisChartArt: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\t// Post Meta Data:\n\t\tpostID: {\n\t\t\ttype: 'integer',\n\t\t},\n\t\t// Item Options\n\t\temphasis: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\thorizontal: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\tstacked: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableHeader: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableExcerpt: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableExtra: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\tenableProgramsTaxonomy: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\theaderSize: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'normal',\n\t\t},\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: ( props ) => {\n\t\t// Set Image Slot by Style\n\t\tif ( 'is-style-default' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'default' });\n\t\t} else if ( 'is-style-top' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'top' });\n\t\t} else if ( 'is-style-bottom' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'bottom' });\n\t\t} else if ( 'is-style-left' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'left' });\n\t\t} else if ( 'is-style-right' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'right' });\n\t\t} else if ( 'is-style-disabled' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'disabled' });\n\t\t}\n\t\tconsole.log('StoryItem');\n\t\tconsole.log(props);\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{ true === props.isSelected && (\n\t\t\t\t\t<EditSidebar {...props}/>\n\t\t\t\t) }\n\t\t\t\t<StoryItem {...props}/>\n\t\t\t</Fragment>\n\t\t)\n\t},\n\n\t// Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\treturn (\n\t\t\t<StoryItem {...props}/>\n\t\t);\n\t},\n} );","module.exports = moment;","module.exports = wp.i18n;","module.exports = ReactDOM;","module.exports = wp.element;","module.exports = lodash;","module.exports = wp.components;"],"sourceRoot":""}