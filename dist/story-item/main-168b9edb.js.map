{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/story-item/component/description.js","webpack:///./src/story-item/component/extra.js","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/kicker/display.js","webpack:///./src/_shared/components/kicker/edit.js","webpack:///./src/_shared/components/image/display.js","webpack:///./src/_shared/components/image/edit.js","webpack:///./src/_shared/components/image/index.js","webpack:///./src/story-item/component/header.js","webpack:///./src/story-item/component/index.js","webpack:///./src/story-item/edit.js","webpack:///./src/story-item/save.js","webpack:///./src/story-item/settings.js","webpack:///./src/story-item/index.js","webpack:///external \"moment\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.element\"","webpack:///external \"lodash\"","webpack:///external \"wp.components\""],"names":["module","exports","React","wp","blocks","apiFetch","url","blockEditor","Description","content","sansSerif","enabled","setAttributes","classes","classNames","tagName","value","onChange","excerpt","placeholder","multiline","className","Content","Extra","breakingNews","extra","window","prcBreakingNews","href","label","getTerms","taxonomy","perPage","undefined","collection","api","collections","Promise","resolve","data","fetch","hide_empty","per_page","then","terms","index","length","slug","replace","toLowerCase","id","name","Kicker","date","labelSlug","d","moment","format","classNmae","KickerEditor","withState","labelOptions","setState","useEffect","Object","keys","forEach","key","termObj","push","sort","a","b","getTermsAsOptions","options","style","display","alignItems","l","marginBottom","Display","img","size","link","getImgURL","variant","legacy","default","small","hidpi","smallHidpi","args","resize","addQueryArgs","getImgSrcSet","threshold","srcSet","media","sources","ALLOWED_MEDIA_TYPES","Edit","slot","chartArt","dataHandler","Toolbar","handler","open","flexWrap","icon","onClick","image","imageSlot","isChartArt","imageSize","onSelect","allowedTypes","render","isPrimary","Image","isXL","isA1","isA2","isA3","isA4","ui","XL","A1","A2","A3","A4","medium","bordered","defaultProps","PostTitle","title","as","Header","currentSize","Item","Meta","controls","map","active","isActive","headerSize","StoryItem","props","console","info","log","isSelected","attributes","enableProgramsTaxonomy","isStacked","isBordered","emphasis","stacked","attrs","enableHeader","enableExcerpt","enableExtra","enableBreakingNews","EditSidebar","path","siteID","includes","siteDomain","getSiteIDFromURL","post","postID","__","disabled","setPostByURL","checked","alert","state","bind","Component","edit","save","settings","category","keywords","styles","isDefault","example","supports","html","type","source","selector","horizontal","registerBlockType","i18n","ReactDOM","element","lodash","components"],"mappings":"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","file":"story-item/main-168b9edb.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.blockEditor;","// WordPress Core\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport classNames from 'classnames/bind';\n\nconst Description = function({ content, sansSerif, enabled, setAttributes, }) {\n    if ( true !== enabled ) {\n        return <Fragment></Fragment>;\n    }\n\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n    return (\n        <Fragment>\n            {false !== setAttributes && (\n                <RichText\n                    tagName=\"div\"\n                    value={content}\n                    onChange={excerpt => setAttributes({ excerpt })}\n                    placeholder={content}\n                    multiline=\"p\"\n                    className={classes}\n                />\n            )}\n            {false === setAttributes && (\n                <RichText.Content\n                    tagName=\"div\"\n                    value={content}\n                    className={classes}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nexport default Description;","// WordPress Core\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport classNames from 'classnames/bind';\n\nconst Extra = function({ enabled, content, setAttributes, breakingNews }) {\n    const classes = classNames('extra');\n    return (\n        <Fragment>\n            {false !== setAttributes && true === enabled && (\n                <RichText\n                    tagName=\"ul\" // The tag here is the element output and editable in the admin\n                    value={content} // Any existing content, either from the database or an attribute default\n                    onChange={extra => setAttributes({ extra })} // Store updated content as a block attribute\n                    placeholder={content} // Display this text before any content has been added by the user\n                    multiline=\"li\"\n                    className={classes}\n                />\n            )}\n            {false === setAttributes && true === enabled && (\n                <RichText.Content\n                    tagName=\"ul\"\n                    value={content}\n                    className={classes}\n                />\n            )}\n            {true === breakingNews && false !== window.prcBreakingNews && (\n                <ul className=\"extra-breaking-news\">\n                    <li>\n                        <a\n                            href={window.prcBreakingNews.url}\n                            className=\"kicker-breaking-news\"\n                        >\n                            {window.prcBreakingNews.label}\n                        </a>\n                    </li>\n                </ul>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Extra;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nconst getTerms = (taxonomy, perPage) => {\n    if (undefined === perPage) {\n        perPage = 25;\n    }\n    const collection = new wp.api.collections[taxonomy]();\n    if (undefined === collection) {\n        return false;\n    }\n    return new Promise(resolve => {\n        const data = {};\n        collection\n            .fetch({\n                data: { hide_empty: false, per_page: perPage },\n            })\n            .then(terms => {\n                for (let index = 0; index < terms.length; index++) {\n                    const slug = terms[index].slug.replace(\n                        `${taxonomy.toLowerCase()}_`,\n                        '',\n                    );\n                    data[terms[index].id] = {\n                        id: terms[index].id,\n                        name: terms[index].name,\n                        slug,\n                    };\n                }\n                resolve(data);\n            });\n    });\n};\n\nconst getTermsAsOptions = (taxonomy, perPage) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n                labelOptions.push({\n                    value: termObj.name,\n                    label: termObj.name,\n                });\n            });\n\n            labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsAsOptions };\n","import { Fragment } from '@wordpress/element';\nimport classNames from 'classnames/bind';\nimport * as moment from 'moment';\n\nconst Kicker = ({ label = 'Report', date }) => {\n    const formatDate = dateString => {\n        return moment(dateString).format('MMM D, YYYY');\n    };\n\n    const labelSlug = label.replace(/\\s+/g, '-').toLowerCase();\n\n    const classes = classNames(labelSlug, 'label');\n\n    let d = formatDate(date);\n\n    return (\n        <Fragment>\n            <span className={classes}>{label || 'Report'}</span>\n            {' | '}\n            <span classNmae=\"date\">{d}</span>\n        </Fragment>\n    );\n};\n\nexport default Kicker;\n","import { useEffect } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { getTermsAsOptions } from '../../helpers';\n\nconst KickerEditor = withState({\n    labelOptions: [],\n})(({ label, date, taxonomy, setAttributes, setState, labelOptions }) => {\n    // On initial load & taxonomy change:\n    useEffect(() => {\n        getTermsAsOptions(taxonomy).then(options =>\n            setState({ labelOptions: options }),\n        );\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default KickerEditor;\n","import { Fragment } from '@wordpress/element';\nimport { Picture } from 'react-responsive-picture';\nimport { addQueryArgs } from '@wordpress/url';\n\nconst Display = ({ img, size, link }) => {\n    // eslint-disable-next-line no-shadow\n    const getImgURL = (url, size, variant) => {\n        if ('' === url || false === url) {\n            return url;\n        }\n\n        const A1 = {\n            default: '564,317',\n            small: '354,194',\n            hidpi: '1128,634',\n            smallHidpi: '708,388',\n        };\n\n        const A2 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,301',\n            smallHidpi: '708,388',\n        };\n\n        const A3 = {\n            default: '194,110',\n            small: '148,84',\n            hidpi: '388,220',\n            smallHidpi: '296,168',\n        };\n\n        const A4 = {\n            default: '268,151',\n            small: '354,194',\n            hidpi: '536,302',\n            smallHidpi: '708,388',\n        };\n\n        const XL = {\n            default: '720,405',\n            small: '354,194',\n            hidpi: '1440,810',\n            smallHidpi: '708,388',\n        };\n\n        const legacy = {\n            '260': {\n                default: '260,260',\n                small: '260,260',\n                hidpi: '520,520',\n                smallHidpi: '520,520',\n            },\n            '260-173': {\n                default: '260,173',\n                small: '260,173',\n                hidpi: '520,346',\n                smallHidpi: '520,346',\n            },\n        };\n\n        // Default to A1\n        let args = { resize: A1[variant] };\n        if ('A2' === size) {\n            args = { resize: A2[variant] };\n        } else if ('A3' === size) {\n            args = { resize: A3[variant] };\n        } else if ('A4' === size) {\n            args = { resize: A4[variant] };\n        } else if ('XL' === size) {\n            args = { resize: XL[variant] };\n        }\n\n        // Temp legacy sizes for homepages\n        if ('legacy-260' === size) {\n            args = { resize: legacy['260'][variant] };\n        } else if ('legacy-260-173' === size) {\n            args = { resize: legacy['260-173'][variant] };\n        }\n\n        return addQueryArgs(url, args);\n    };\n\n    // eslint-disable-next-line no-shadow\n    const getImgSrcSet = (url, size, threshold = 420) => {\n        return [\n            {\n                srcSet: `${getImgURL(url, size, 'default')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'hidpi',\n                )} 2x`,\n                media: `(min-width: ${threshold}px)`,\n            },\n            {\n                srcSet: `${getImgURL(url, size, 'small')} 1x, ${getImgURL(\n                    url,\n                    size,\n                    'smallHidpi',\n                )} 2x`,\n                media: `(max-width: ${threshold}px)`,\n            },\n        ];\n    };\n\n    return (\n        <Fragment>\n            {'' === link && <Picture sources={getImgSrcSet(img, size)} />}\n            {'' !== link && (\n                <a href={link}>\n                    <Picture sources={getImgSrcSet(img, size)} />\n                </a>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Display;\n","import { Fragment } from '@wordpress/element';\nimport { Button, IconButton, SelectControl } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\nconst Edit = ({ img, size, slot, chartArt, dataHandler }) => {\n    const mediaHandler = media => {\n        if ('disabled' === slot) {\n            dataHandler({ image: media.url, imageSlot: 'default' });\n        } else {\n            dataHandler({ image: media.url });\n        }\n    };\n\n    const Toolbar = ({ handler, open }) => {\n        return (\n            <div className=\"image-editor-toolbar\">\n                <div>\n                    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                        <IconButton\n                            icon=\"upload\"\n                            label=\"Select/Upload New Image\"\n                            onClick={open}\n                        />\n                        <IconButton\n                            icon=\"trash\"\n                            label=\"Remove Image\"\n                            onClick={() => {\n                                handler({\n                                    image: '',\n                                    imageSlot: 'disabled',\n                                });\n                            }}\n                        />\n\n                        <Fragment>\n                            {null !== chartArt && (\n                                <IconButton\n                                    icon=\"art\"\n                                    label={\n                                        true === chartArt\n                                            ? 'Disable Chart Art'\n                                            : 'Enable Chart Art'\n                                    }\n                                    onClick={() => {\n                                        handler({\n                                            isChartArt: !chartArt,\n                                        });\n                                    }}\n                                />\n                            )}\n                        </Fragment>\n                    </div>\n                </div>\n                {null !== slot && (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                        <SelectControl\n                            label=\"Image Size\"\n                            value={size}\n                            options={[\n                                { value: 'XL', label: 'XL' },\n                                { value: 'A1', label: 'A1' },\n                                { value: 'A2', label: 'A2' },\n                                { value: 'A3', label: 'A3' },\n                                { value: 'A4', label: 'A4' },\n                                {\n                                    value: 'legacy-260',\n                                    label: 'Legacy Homepage 260x260',\n                                },\n                                {\n                                    value: 'legacy-260-173',\n                                    label: 'Legacy Homepage 260x173',\n                                },\n                            ]}\n                            onChange={imageSize => handler({ imageSize })}\n                            style={{ marginBottom: '0px' }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={mediaHandler}\n                allowedTypes={ALLOWED_MEDIA_TYPES}\n                render={({ open }) => (\n                    <Fragment>\n                        {'' !== img && (\n                            <Toolbar handler={dataHandler} open={open} />\n                        )}\n                        {'' === img && (\n                            <p>\n                                <Button isPrimary onClick={open}>\n                                    Insert Image\n                                </Button>\n                            </p>\n                        )}\n                    </Fragment>\n                )}\n            />\n        </MediaUploadCheck>\n    );\n};\n\nexport default Edit;\n","import './imageEditor.scss';\nimport Display from './display';\nimport Edit from './edit';\nimport classNames from 'classnames/bind';\n\n/**\n * Props:\n * img: string url of image to display\n * size: string of image/slot size (A1,A2,A3,A4)\n * link: string of url to go to when image is clicked on front end\n * slot: if set to null then no image size chooser will be display\n * chartArt: if set to null then no chart art button will appear\n * dataHandler: defaults to false unless otherwise provided a function to pass data back up to a HOC state.\n *\n * <Image id={} img={} size={} link={} slot={} chartArt={} dataHandler={}/>\n */\n\nconst Image = ({ img, link, size, slot, chartArt, dataHandler }) => {\n    const classes = () => {\n        let isMedium = false;\n        let isXL = false;\n        let isA1 = false;\n        let isA2 = false;\n        let isA3 = false;\n        let isA4 = false;\n        if (false !== slot) {\n            if ('left' === slot || 'right' === slot) {\n                // if ( 'XL' === size ) {\n                //     isXL = true;\n                // } else if ( 'A1' === size ) {\n                //     isA1 = true;\n                // } else {\n                //     isMedium = true;\n                // }\n            }\n            if ( 'XL' === size ) {\n                isXL = true;\n            } else if ( 'A1' === size ) {\n                isA1 = true;\n            } else if ( 'A2' === size ) {\n                isA2 = true;\n            } else if ( 'A3' === size ) {\n                isA3 = true;\n            } else if ( 'A4' === size ) {\n                isA4 = true;\n            }\n        }\n\n        return classNames({\n            ui: true,\n            XL: isXL,\n            A1: isA1,\n            A2: isA2,\n            A3: isA3,\n            A4: isA4,\n            medium: isMedium,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <Display\n                img={img}\n                size={size}\n                link={false !== dataHandler ? '' : link}\n            />\n            {false !== dataHandler && (\n                <Edit\n                    img={img}\n                    slot={slot}\n                    size={size}\n                    chartArt={chartArt}\n                    dataHandler={dataHandler}\n                />\n            )}\n        </div>\n    );\n};\n\nImage.defaultProps = {\n    img: '',\n    link: '',\n    size: 'A1',\n    slot: false,\n    chartArt: false,\n    dataHandler: false,\n};\n\nexport default Image;\n","// WordPress Core\nimport { Fragment } from '@wordpress/element';\nimport { RichText, BlockControls } from '@wordpress/block-editor';\nimport { Toolbar } from '@wordpress/components';\n\nimport { Item } from 'semantic-ui-react';\nimport { Kicker, KickerEditor } from 'shared';\n\nconst PostTitle = ({ title, link, as = 'a' }) => {\n    return <RichText.Content href={link} tagName={as} value={title} />;\n};\n\nconst Header = ({\n    title,\n    label,\n    date,\n    link,\n    enabled,\n    size,\n    taxonomy,\n    setAttributes,\n}) => {\n    const currentSize = size; // Perhaps we need useState here for setting active?\n    const createSizeControls = function(size) {\n        let active = false;\n        if (size === currentSize) {\n            active = true;\n        }\n        return {\n            icon: 'editor-textcolor',\n            title: `Size: ${size}`,\n            isActive: active,\n            onClick: () => {\n                setAttributes({ headerSize: size });\n            },\n        };\n    };\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Fragment>\n                    <Item.Meta>\n                        {false !== setAttributes && (\n                            <KickerEditor\n                                date={date}\n                                label={label}\n                                taxonomy={taxonomy}\n                                setAttributes={setAttributes}\n                            />\n                        )}\n                        {false === setAttributes && (\n                            <Kicker label={label} date={date} />\n                        )}\n                    </Item.Meta>\n                    <Item.Header className={size}>\n                        {false !== setAttributes && (\n                            <Fragment>\n                                <BlockControls>\n                                    <Toolbar\n                                        controls={[\n                                            'small',\n                                            'normal',\n                                            'large',\n                                        ].map(createSizeControls)}\n                                    />\n                                </BlockControls>\n                                <RichText\n                                    tagName=\"div\" // The tag here is the element output and editable in the admin\n                                    value={title} // Any existing content, either from the database or an attribute default\n                                    onChange={title => setAttributes({ title })} // Store updated content as a block attribute\n                                    placeholder=\"Title\" // Display this text before any content has been added by the user\n                                    multiline=\"br\"\n                                />\n                            </Fragment>\n                        )}\n                        {false === setAttributes && (\n                            <PostTitle\n                                title={title}\n                                link={link}\n                                as=\"a\"\n                                size={size}\n                            />\n                        )}\n                    </Item.Header>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n}\n\nexport default Header;","import classNames from 'classnames/bind';\n\nimport { Item } from 'semantic-ui-react';\nimport Description from './description';\nimport Extra from './extra';\nimport Header from './header';\n\nimport { Image } from 'shared';\n\nconst StoryItem = props => {\n    console.info('What is in StoryItem');\n    console.log(props);\n    // If the block is not selected, it is not in edit mode, disable setAttributes.\n    if (\n        undefined === props.isSelected ||\n        true !== props.isSelected\n    ) {\n        props.setAttributes = false;\n    }\n\n    props.attributes.taxonomy = 'Formats';\n    if (true === props.attributes.enableProgramsTaxonomy) {\n        props.attributes.taxonomy = 'Programs';\n    }\n\n    let isStacked = true;\n    if (\n        'left' === props.attributes.imageSlot ||\n        'right' === props.attributes.imageSlot\n    ) {\n        isStacked = false;\n    }\n\n    let isBordered = false;\n    if (true === props.attributes.emphasis) {\n        isBordered = true;\n    }\n\n    props.attributes.classes = classNames(\n        props.attributes.className,\n        'story-item',\n        { stacked: isStacked, bordered: isBordered },\n    );\n\n    const attrs = props.attributes;\n    attrs.setAttributes = props.setAttributes;\n\n    return (\n        <Item as=\"article\" className={attrs.classes}>\n            {('top' === attrs.imageSlot || 'left' === attrs.imageSlot) && (\n                <Image\n                    img={attrs.image}\n                    size={attrs.imageSize}\n                    link={attrs.link}\n                    slot={attrs.imageSlot}\n                    chartArt={attrs.isChartArt}\n                    dataHandler={attrs.setAttributes}\n                />\n            )}\n\n            <Item.Content>\n                <Header\n                    title={attrs.title}\n                    date={attrs.date}\n                    label={attrs.label}\n                    link={attrs.link}\n                    setAttributes={attrs.setAttributes}\n                    enabled={attrs.enableHeader}\n                    size={attrs.headerSize}\n                    taxonomy={attrs.taxonomy} // Where??\n                />\n\n                {'default' === attrs.imageSlot && (\n                    <Image\n                        img={attrs.image}\n                        size={attrs.imageSize}\n                        link={attrs.link}\n                        slot={attrs.imageSlot}\n                        chartArt={attrs.isChartArt}\n                        dataHandler={attrs.setAttributes}\n                    />\n                )}\n\n                <Description\n                    content={attrs.excerpt}\n                    enabled={attrs.enableExcerpt}\n                    setAttributes={attrs.setAttributes}\n                    sansSerif={!attrs.enableHeader}\n                />\n\n                <Extra\n                    enabled={attrs.enableExtra}\n                    content={attrs.extra}\n                    setAttributes={attrs.setAttributes}\n                    breakingNews={attrs.enableBreakingNews}\n                />\n            </Item.Content>\n\n            {('bottom' === attrs.imageSlot ||\n                'right' === attrs.imageSlot) && (\n                <Image\n                    img={attrs.image}\n                    size={attrs.imageSize}\n                    link={attrs.link}\n                    slot={attrs.imageSlot}\n                    chartArt={attrs.isChartArt}\n                    dataHandler={attrs.setAttributes}\n                />\n            )}\n        </Item>\n    );\n}\n\nexport default StoryItem;\n","import { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n    Button,\n    PanelBody,\n    ToggleControl,\n    TextControl,\n} from '@wordpress/components';\nimport { Component, Fragment } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\n\nimport StoryItem from './component';\n\nclass EditSidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n        };\n        this.setPostByURL = this.setPostByURL.bind(this);\n    }\n\n    componentDidMount = () => {\n        this.setState({ url: this.props.attributes.link });\n    };\n\n    /**\n     * Loading Posts\n     */\n    setPostByURL = () => {\n        const { setAttributes } = this.props;\n        const url = this.props.attributes.link;\n\n        const getSiteIDFromURL = url => {\n            let siteID = 1;\n            if (url.includes(`${window.siteDomain}/global/`)) {\n                siteID = 2;\n            } else if (url.includes(`${window.siteDomain}/hispanic/`)) {\n                siteID = 5;\n            } else if (url.includes(`${window.siteDomain}/science/`)) {\n                siteID = 16;\n            } else if (url.includes(`${window.siteDomain}/methods/`)) {\n                siteID = 10;\n            } else if (url.includes(`${window.siteDomain}/internet/`)) {\n                siteID = 9;\n            } else if (url.includes('https://www.people-press.org/')) {\n                siteID = 4;\n            } else if (url.includes('https://www.pewforum.org/')) {\n                siteID = 7;\n            } else if (url.includes('https://www.journalism.org/')) {\n                siteID = 8;\n            } else if (url.includes('https://www.pewsocialtrends.org/')) {\n                siteID = 3;\n            } else if (\n                url.includes('https://www.pewresearch.org/') ||\n                url.includes(window.siteDomain)\n            ) {\n                siteID = 1;\n            }\n            return siteID;\n        };\n\n        if (undefined === setAttributes || undefined === url) {\n            return;\n        }\n\n        apiFetch({\n            path: `/prc-api/v2/blocks/helpers/get-post-by-url/?url=${url}&siteID=${getSiteIDFromURL(url,)}`,\n        }).then(post => {\n            if (false !== post) {\n                setAttributes({\n                    title: post.title,\n                    image: post.image,\n                    excerpt: post.excerpt,\n                    link: post.link,\n                    label: post.label,\n                    date: post.date,\n                    postID: post.id,\n                    extra: '', // We want to clear extra when pulling a new post\n                });\n            }\n        });\n    };\n\n    render = () => {\n        const { setAttributes } = this.props;\n        return (\n            <InspectorControls>\n                <PanelBody title={__('Story Item Options')}>\n                    <div>\n                        <TextControl\n                            label=\"Post ID\"\n                            value={this.props.attributes.postID}\n                            disabled\n                        />\n                    </div>\n                    <div className=\"story-item-link\">\n                        <div>\n                            <TextControl\n                                label=\"Link\"\n                                value={this.props.attributes.link}\n                                onChange={link => setAttributes({ link })}\n                            />\n                        </div>\n                        <div>\n                            <Button onClick={this.setPostByURL} isPrimary>\n                                Fetch\n                            </Button>\n                        </div>\n                    </div>\n                    <p>\n                        <strong>Content Options:</strong>\n                    </p>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.enableHeader\n                                    ? 'Header Enabled'\n                                    : 'Header Disabled'\n                            }\n                            checked={this.props.attributes.enableHeader}\n                            onChange={value => {\n                                setAttributes({ enableHeader: value });\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.enableExcerpt\n                                    ? 'Excerpt Enabled'\n                                    : 'Excerpt Disabled'\n                            }\n                            checked={this.props.attributes.enableExcerpt}\n                            onChange={value => {\n                                setAttributes({ enableExcerpt: value });\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.enableExtra\n                                    ? 'Extras Enabled'\n                                    : 'Extras Disabled'\n                            }\n                            checked={this.props.attributes.enableExtra}\n                            onChange={value => {\n                                setAttributes({ enableExtra: value });\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.enableBreakingNews\n                                    ? 'Breaking News Enabled'\n                                    : 'Breaking News Disabled'\n                            }\n                            checked={this.props.attributes.enableBreakingNews}\n                            onChange={value => {\n                                if (false !== window.prcBreakingNews) {\n                                    setAttributes({\n                                        enableBreakingNews: value,\n                                    });\n                                } else {\n                                    alert('There are no currently active breaking news events, this will be set to false automatically.',);\n                                    setAttributes({\n                                        enableBreakingNews: false,\n                                    });\n                                }\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.emphasis\n                                    ? 'Emphasis Enabled'\n                                    : 'Emphasis Disabled'\n                            }\n                            checked={this.props.attributes.emphasis}\n                            onChange={value => {\n                                setAttributes({ emphasis: value });\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <ToggleControl\n                            label={\n                                this.props.attributes.enableProgramsTaxonomy\n                                    ? 'Programs'\n                                    : 'Formats'\n                            }\n                            checked={\n                                this.props.attributes.enableProgramsTaxonomy\n                            }\n                            onChange={value => {\n                                setAttributes({\n                                    enableProgramsTaxonomy: value,\n                                });\n                            }}\n                        />\n                    </div>\n                </PanelBody>\n            </InspectorControls>\n        );\n    };\n}\n\nconst edit = props => {\n    // Set Image Slot by Style\n    // @TODO: This should be done on some hook not all the time live. // We should do this using useDispatch or something\n    if ('is-style-default' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'default' });\n    } else if ('is-style-top' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'top' });\n    } else if ('is-style-bottom' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'bottom' });\n    } else if ('is-style-left' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'left' });\n    } else if ('is-style-right' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'right' });\n    } else if ('is-style-disabled' === props.attributes.className) {\n        props.setAttributes({ imageSlot: 'disabled' });\n    }\n    return (\n        <Fragment>\n            {true === props.isSelected && <EditSidebar {...props} />}\n            <StoryItem {...props} />\n        </Fragment>\n    );\n}\n\nexport default edit;","import StoryItem from './component';\n\nconst save = props => {\n    return <StoryItem {...props} />;\n}\n\nexport default save;","import { __ } from '@wordpress/i18n';\nimport * as moment from 'moment';\nimport edit from './edit';\nimport save from './save';\n\nconst todaysDate = () => {\n    return moment().format('MM-DD-YYYY');\n};\n\nconst settings = [\n    'prc-block/story-item',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Story Item'), // Block title.\n        icon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [__('prc'), __('story'), __('post'), __('story item')],\n        styles: [\n            {\n                name: 'disabled',\n                label: 'Image Disabled',\n            },\n            {\n                name: 'default',\n                label: 'Default Image Alignment',\n                isDefault: true,\n            },\n            {\n                name: 'top',\n                label: 'Image Aligned Top',\n            },\n            {\n                name: 'bottom',\n                label: 'Image Aligned Bottom',\n            },\n            {\n                name: 'left',\n                label: 'Image Aligned Left',\n            },\n            {\n                name: 'right',\n                label: 'Image Aligned Right',\n            },\n        ],\n        example: {\n            attributes: {\n                title: 'Ultricies Ipsum Nibh Egestas Purus',\n                excerpt: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id elit non mi porta gravida at eget metus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>',\n                extra: '<li></li>',\n                // Item Meta\n                link: '#',\n                label: 'Report',\n                date: todaysDate(),\n                // Images\n                image: 'https://www.pewresearch.org/global/wp-content/uploads/sites/2/2020/04/PG_2020.04.21_U.S.-Views-China_featured.jpg',\n                imageSlot: 'top',\n                imageSize: 'A2',\n            },\n        },\n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            // Item Content\n            title: {\n                type: 'string',\n                default: 'Title',\n            },\n            excerpt: {\n                type: 'string',\n                source: 'html',\n                multiline: 'p',\n                selector: '.description',\n                default: '<p>Excerpt</p>',\n            },\n            extra: {\n                type: 'string',\n                source: 'html',\n                multiline: 'li',\n                selector: '.extra',\n                default: '',\n            },\n            // Item Meta\n            link: {\n                type: 'string',\n                default: '',\n            },\n            label: {\n                type: 'string',\n                default: 'Report',\n            },\n            date: {\n                type: 'string',\n                // source: 'html',\n                // selector: '.date',\n                // default: todaysDate(),\n            },\n            // Images\n            image: {\n                type: 'string',\n                default: '',\n            },\n            imageSlot: {\n                type: 'string',\n                default: 'disabled',\n            },\n            imageSize: {\n                type: 'string',\n                default: 'A1',\n            },\n            isChartArt: {\n                type: 'boolean',\n                default: false,\n            },\n            // Post Meta Data:\n            postID: {\n                type: 'integer',\n            },\n            // Item Options\n            emphasis: {\n                type: 'boolean',\n                default: false,\n            },\n            horizontal: {\n                type: 'boolean',\n                default: false,\n            },\n            stacked: {\n                type: 'boolean',\n                default: true,\n            },\n            enableHeader: {\n                type: 'boolean',\n                default: true,\n            },\n            enableExcerpt: {\n                type: 'boolean',\n                default: true,\n            },\n            enableExtra: {\n                type: 'boolean',\n                default: false,\n            },\n            enableBreakingNews: {\n                type: 'boolean',\n                default: false,\n            },\n            enableProgramsTaxonomy: {\n                type: 'boolean',\n                default: false,\n            },\n            headerSize: {\n                type: 'string',\n                default: 'normal',\n            },\n        },\n        edit,\n        // Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n        save,\n    }\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\nimport './style.scss';\n\nregisterBlockType(...settings);","module.exports = moment;","module.exports = wp.i18n;","module.exports = ReactDOM;","module.exports = wp.element;","module.exports = lodash;","module.exports = wp.components;"],"sourceRoot":""}