{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/components/kicker/display.js","webpack:///./src/_shared/components/kicker/edit.js","webpack:///./src/_shared/components/image/index.js","webpack:///./src/story-item/component.js","webpack:///./src/story-item/index.js","webpack:///external \"moment\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.element\"","webpack:///external \"lodash\"","webpack:///external \"wp.components\""],"names":["module","exports","React","wp","blocks","apiFetch","url","blockEditor","getTerms","taxonomy","collection","api","collections","undefined","Promise","resolve","reject","data","fetch","hide_empty","per_page","then","terms","index","length","slug","replace","toLowerCase","id","name","Kicker","label","date","labelSlug","classes","classNames","className","moment","format","getLabelOptions","labelOptions","Object","keys","forEach","key","termObj","push","value","sort","a","b","KickerEditor","withState","setState","setAttributes","useLayoutEffect","options","useEffect","style","display","alignItems","onChange","l","marginBottom","d","ALLOWED_MEDIA_TYPES","Image","props","isMedium","slot","chartArt","ui","medium","image","bordered","img","size","link","getImgURL","variant","legacy","default","small","hidpi","smallHidpi","args","resize","addQueryArgs","getImgSrcSet","threshold","srcSet","media","sources","href","dataHandler","Toolbar","open","flexWrap","backgroundColor","icon","onClick","imageSlot","isChartArt","imageSize","ImgMarkup","imgMarkup","onSelect","allowedTypes","render","isPrimary","console","log","this","Edit","editMode","Component","Description","content","enabled","sansSerif","tagName","excerpt","placeholder","multiline","Content","Extra","extra","Header","title","currentSize","Item","Meta","controls","map","active","isActive","headerSize","as","StoryItem","attrs","enableHeader","enableExcerpt","enableExtra","item","bind","isSelected","attributes","enableProgramsTaxonomy","isStacked","isBordered","emphasis","stacked","EditSidebar","path","siteID","includes","window","siteDomain","getSiteIDFromURL","post","info","postID","__","disabled","setPostByURL","checked","state","registerBlockType","category","keywords","styles","isDefault","supports","html","type","source","selector","horizontal","edit","save","i18n","ReactDOM","element","lodash","components"],"mappings":"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","file":"story-item/main-fc98c428.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.blockEditor;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\n\nconst getTerms = taxonomy => {\n    const collection = new wp.api.collections[taxonomy]();\n    if (undefined === collection) {\n        return false;\n    }\n    return new Promise((resolve, reject) => {\n        const data = {};\n        collection\n            .fetch({\n                data: { hide_empty: false, per_page: 25 },\n            })\n            .then(terms => {\n                for (let index = 0; index < terms.length; index++) {\n                    const slug = terms[index].slug.replace(\n                        `${taxonomy.toLowerCase()}_`,\n                        '',\n                    );\n                    data[terms[index].id] = {\n                        id: terms[index].id,\n                        name: terms[index].name,\n                        slug,\n                    };\n                }\n                resolve(data);\n            });\n    });\n};\n\nexport default getTerms;\n","import { Fragment } from '@wordpress/element';\nimport classNames from 'classnames/bind';\nimport * as moment from 'moment';\n\nconst Kicker = ({ label = 'Report', date }) => {\n    const formatDate = dateString => {\n        return moment(dateString).format('MMM D, YYYY');\n    };\n\n    const labelSlug = label.replace(/\\s+/g, '-').toLowerCase();\n\n    const classes = classNames(labelSlug, 'label');\n\n    return (\n        <Fragment>\n            <span className={classes}>{label || 'Report'}</span>\n            {' | '}\n            {formatDate(date)}\n        </Fragment>\n    );\n};\n\nexport default Kicker;\n","import { useEffect, useLayoutEffect } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { getTerms } from '../../helpers';\n\nconst getLabelOptions = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n                labelOptions.push({\n                    value: termObj.name,\n                    label: termObj.name,\n                });\n            });\n\n            labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nconst KickerEditor = withState({\n    labelOptions: [],\n})(({ label, date, taxonomy, labelOptions, setState, setAttributes }) => {\n    // On initial load:\n    useLayoutEffect(() => {\n        getLabelOptions(taxonomy).then(options =>\n            setState({ labelOptions: options }),\n        );\n    }, []);\n\n    // On taxonomy change:\n    useEffect(() => {\n        getLabelOptions(taxonomy).then(options =>\n            setState({ labelOptions: options }),\n        );\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default KickerEditor;\n","import './imageEditor.scss';\n\nimport { Component, Fragment } from '@wordpress/element';\nimport { Picture } from 'react-responsive-picture';\nimport { addQueryArgs } from '@wordpress/url';\nimport classNames from 'classnames/bind';\n// Edit\nimport { Button, IconButton, SelectControl } from '@wordpress/components';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\n/**\n * Props:\n * img:\n * size:\n * link:\n * slot: // if set to false then no image size chooser will be display\n * chartArt: // if undefined then no chart art button will appear\n * dataHandler: *When not in \"edit mode\" this prop should be false to signal that.*\n *\n * <Image id={} img={} size={} link={} slot={} chartArt={} dataHandler={}/>\n */\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    classNames = () => {\n\t\tlet isMedium = false;\n\t\t\t\n        if (undefined !== this.props.slot) {\n            if (this.props.slot === 'left' || this.props.slot === 'right') {\n                isMedium = true;\n            }\n        }\n\n        let chartArt = false;\n        if (undefined !== this.props.chartArt) {\n            chartArt = this.props.chartArt;\n        }\n        return classNames({\n            ui: true,\n            medium: isMedium,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    imgMarkup = ({ img, size, link }) => {\n        const getImgURL = (url, size, variant) => {\n            if (url === '' || url === false) {\n                return url;\n            }\n\n            const A1 = {\n                default: '564,317',\n                small: '354,194',\n                hidpi: '1128,634',\n                smallHidpi: '708,388',\n            };\n\n            const A2 = {\n                default: '268,151',\n                small: '354,194',\n                hidpi: '536,301',\n                smallHidpi: '708,388',\n            };\n\n            const A3 = {\n                default: '194,110',\n                small: '148,84',\n                hidpi: '388,220',\n                smallHidpi: '296,168',\n            };\n\n            const A4 = {\n                default: '268,151',\n                small: '354,194',\n                hidpi: '536,302',\n                smallHidpi: '708,388',\n            };\n\n            const legacy = {\n                '260': {\n                    default: '260,260',\n                    small: '260,260',\n                    hidpi: '520,520',\n                    smallHidpi: '520,520',\n                },\n                '260-173': {\n                    default: '260,173',\n                    small: '260,173',\n                    hidpi: '520,346',\n                    smallHidpi: '520,346',\n                },\n            };\n\n            // Default to A1\n            let args = { resize: A1[variant] };\n            if (size === 'A2') {\n                args = { resize: A2[variant] };\n            } else if (size === 'A3') {\n                args = { resize: A3[variant] };\n            } else if (size === 'A4') {\n                args = { resize: A4[variant] };\n            }\n\n            // Temp legacy sizes for homepages\n            if (size === 'legacy-260') {\n                args = { resize: legacy['260'][variant] };\n            } else if (size === 'legacy-260-173') {\n                args = { resize: legacy['260-173'][variant] };\n            }\n\n            return addQueryArgs(url, args);\n        };\n\n        const getImgSrcSet = (url, size, threshold = 420) => {\n            return [\n                {\n                    srcSet: `${getImgURL(url, size, 'default')} 1x, ${getImgURL(\n                        url,\n                        size,\n                        'hidpi',\n                    )} 2x`,\n                    media: `(min-width: ${threshold}px)`,\n                },\n                {\n                    srcSet: `${getImgURL(url, size, 'small')} 1x, ${getImgURL(\n                        url,\n                        size,\n                        'smallHidpi',\n                    )} 2x`,\n                    media: `(max-width: ${threshold}px)`,\n                },\n            ];\n        };\n\n        return (\n            <Fragment>\n                {link === '' && (\n                    <Picture\n                        style={{ display: 'block' }}\n                        sources={getImgSrcSet(img, size)}\n                    />\n                )}\n                {link !== '' && (\n                    <a href={link}>\n                        <Picture\n                            style={{ display: 'block' }}\n                            sources={getImgSrcSet(img, size)}\n                        />\n                    </a>\n                )}\n            </Fragment>\n        );\n    };\n\n    editMode = ({ dataHandler }) => {\n        const mediaHandler = media => {\n            if (\n                undefined !== this.props.slot &&\n                this.props.slot === 'disabled'\n            ) {\n                dataHandler({ image: media.url, imageSlot: 'default' });\n            } else {\n                dataHandler({ image: media.url });\n            }\n        };\n\n        const Toolbar = ({ open, dataHandler }) => {\n            return (\n                <div\n                    style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        alignItems: 'center',\n                        backgroundColor: '#f0f2f3',\n                    }}\n                >\n                    <div>\n                        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                            <IconButton\n                                icon=\"upload\"\n                                label=\"Select/Upload New Image\"\n                                onClick={open}\n                            />\n                            <IconButton\n                                icon=\"trash\"\n                                label=\"Remove Image\"\n                                onClick={() => {\n                                    dataHandler({\n                                        image: '',\n                                        imageSlot: 'disabled',\n                                    });\n                                }}\n                            />\n\n                            <Fragment>\n                                {undefined !== this.props.chartArt && (\n                                    <IconButton\n                                        icon=\"art\"\n                                        label={\n                                            this.props.chartArt === true\n                                                ? 'Disable Chart Art'\n                                                : 'Enable Chart Art'\n                                        }\n                                        onClick={() => {\n                                            dataHandler({\n                                                isChartArt: !this.props\n                                                    .chartArt,\n                                            });\n                                        }}\n                                    />\n                                )}\n                            </Fragment>\n                        </div>\n                    </div>\n                    {undefined !== this.props.slot && (\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <SelectControl\n                                label=\"Image Size\"\n                                value={this.props.size}\n                                options={[\n                                    { value: 'A1', label: 'A1' },\n                                    { value: 'A2', label: 'A2' },\n                                    { value: 'A3', label: 'A3' },\n                                    { value: 'A4', label: 'A4' },\n                                    {\n                                        value: 'legacy-260',\n                                        label: 'Legacy Homepage 260x260',\n                                    },\n                                    {\n                                        value: 'legacy-260-173',\n                                        label: 'Legacy Homepage 260x173',\n                                    },\n                                ]}\n                                onChange={imageSize =>\n                                    dataHandler({ imageSize })\n                                }\n                                style={{ marginBottom: '0px' }}\n                            />\n                        </div>\n                    )}\n                </div>\n            );\n        };\n\n        // Internal JSX Tag:\n        const ImgMarkup = this.imgMarkup;\n\n        return (\n            <MediaUploadCheck>\n                <MediaUpload\n                    onSelect={mediaHandler}\n                    allowedTypes={ALLOWED_MEDIA_TYPES}\n                    render={({ open }) => (\n                        <Fragment>\n                            {this.props.img !== '' && (\n                                <Fragment>\n                                    <div className={this.classNames()}>\n                                        <ImgMarkup\n                                            img={this.props.img}\n                                            size={this.props.size}\n                                            id={this.props.id}\n                                            link=\"\"\n                                        />\n                                        <Toolbar\n                                            dataHandler={dataHandler}\n                                            open={open}\n                                        />\n                                    </div>\n                                </Fragment>\n                            )}\n                            {this.props.img === '' && (\n                                <p>\n                                    <Button isPrimary onClick={open}>\n                                        Insert Image\n                                    </Button>\n                                </p>\n                            )}\n                        </Fragment>\n                    )}\n                />\n            </MediaUploadCheck>\n        );\n    };\n\n    render() {\n        console.log('Image Component:');\n        console.log(this.props);\n        // / Internal JSX Tags:\n        const Edit = this.editMode;\n        const ImgMarkup = this.imgMarkup;\n        // We should also have a prop that will let you pass through setAttribute or setState something like onChange\n        return (\n            <Fragment>\n                {(this.props.dataHandler === false ||\n                    undefined === this.props.dataHandler) && (\n                    <div className={this.classNames()}>\n                        <ImgMarkup\n                            img={this.props.img}\n                            size={this.props.size}\n                            link={this.props.link}\n                        />\n                    </div>\n                )}\n                {this.props.dataHandler !== false &&\n                    undefined !== this.props.dataHandler && (\n                        <Edit dataHandler={this.props.dataHandler} />\n                    )}\n            </Fragment>\n        );\n    }\n}\n\nexport default Image;\n","// WordPress Core\nimport { Component, Fragment } from '@wordpress/element';\nimport { RichText, BlockControls } from '@wordpress/block-editor';\nimport { Toolbar } from '@wordpress/components';\n\n// Utilities\nimport classNames from 'classnames/bind';\n\nimport { Item } from 'semantic-ui-react';\nimport { Image, Kicker, KickerEditor } from '../_shared';\n\nconst Description = function({ content, enabled, setAttributes, sansSerif }) {\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Fragment>\n                    {false !== setAttributes && (\n                        <RichText\n                            tagName=\"div\"\n                            value={content}\n                            onChange={excerpt => setAttributes({ excerpt })}\n                            placeholder={content}\n                            multiline=\"p\"\n                            className={classes}\n                        />\n                    )}\n                    {false === setAttributes && (\n                        <RichText.Content\n                            tagName=\"div\"\n                            value={content}\n                            className={classes}\n                        />\n                    )}\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nconst Extra = function({ enabled, content, setAttributes }) {\n    const classes = classNames('extra');\n    return (\n        <Fragment>\n            {false !== setAttributes && true === enabled && (\n                <RichText\n                    tagName=\"ul\" // The tag here is the element output and editable in the admin\n                    value={content} // Any existing content, either from the database or an attribute default\n                    onChange={extra => setAttributes({ extra })} // Store updated content as a block attribute\n                    placeholder={content} // Display this text before any content has been added by the user\n                    multiline=\"li\"\n                    className={classes}\n                />\n            )}\n            {false === setAttributes && true === enabled && (\n                <RichText.Content\n                    tagName=\"ul\"\n                    value={content}\n                    className={classes}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nconst Header = function({\n    title,\n    label,\n    date,\n    link,\n    enabled,\n    size,\n    taxonomy,\n    setAttributes,\n}) {\n    const currentSize = size;\n    const PostTitle = ({ title, link, as = 'a' }) => {\n        return <RichText.Content href={link} tagName={as} value={title} />;\n    };\n    const createSizeControls = function(size) {\n        let active = false;\n        if (size === currentSize) {\n            active = true;\n        }\n        return {\n            icon: 'editor-textcolor',\n            title: `Size: ${size}`,\n            isActive: active,\n            onClick: () => {\n                setAttributes({ headerSize: size });\n            },\n        };\n    };\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Fragment>\n                    <Item.Meta>\n                        {false !== setAttributes && (\n                            <KickerEditor\n                                date={date}\n                                label={label}\n                                taxonomy={taxonomy}\n                                setAttributes={setAttributes}\n                            />\n                        )}\n                        {false === setAttributes && (\n                            <Kicker label={label} date={date} />\n                        )}\n                    </Item.Meta>\n                    <Item.Header className={size}>\n                        {false !== setAttributes && (\n                            <Fragment>\n                                <BlockControls>\n                                    <Toolbar\n                                        controls={[\n                                            'small',\n                                            'normal',\n                                            'large',\n                                        ].map(createSizeControls)}\n                                    />\n                                </BlockControls>\n                                <RichText\n                                    tagName=\"div\" // The tag here is the element output and editable in the admin\n                                    value={title} // Any existing content, either from the database or an attribute default\n                                    onChange={title => setAttributes({ title })} // Store updated content as a block attribute\n                                    placeholder=\"Title\" // Display this text before any content has been added by the user\n                                    multiline=\"br\"\n                                />\n                            </Fragment>\n                        )}\n                        {false === setAttributes && (\n                            <PostTitle\n                                title={title}\n                                link={link}\n                                as=\"a\"\n                                size={size}\n                            />\n                        )}\n                    </Item.Header>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nclass StoryItem extends Component {\n    constructor(props) {\n        super(props);\n        this.item = this.item.bind(this);\n    }\n\n    item = attrs => {\n        return (\n            <Item as=\"article\" className={attrs.classes}>\n                {('top' === attrs.imageSlot || 'left' === attrs.imageSlot) && (\n                    <Image\n                        img={attrs.image}\n                        size={attrs.imageSize}\n                        link={attrs.link}\n                        slot={attrs.imageSlot}\n                        chartArt={attrs.isChartArt}\n                        dataHandler={this.props.setAttributes}\n                    />\n                )}\n\n                <Item.Content>\n                    <Header\n                        title={attrs.title}\n                        date={attrs.date}\n                        label={attrs.label}\n                        link={attrs.link}\n                        setAttributes={this.props.setAttributes}\n                        enabled={attrs.enableHeader}\n                        size={attrs.headerSize}\n                        taxonomy={attrs.taxonomy} // Where??\n                    />\n\n                    {'default' === attrs.imageSlot && (\n                        <Image\n                            img={attrs.image}\n                            size={attrs.imageSize}\n                            link={attrs.link}\n                            slot={attrs.imageSlot}\n                            chartArt={attrs.isChartArt}\n                            dataHandler={this.props.setAttributes}\n                        />\n                    )}\n\n                    <Description\n                        content={attrs.excerpt}\n                        enabled={attrs.enableExcerpt}\n                        setAttributes={this.props.setAttributes}\n                        sansSerif={!attrs.enableHeader}\n                    />\n\n                    <Extra\n                        enabled={attrs.enableExtra}\n                        content={attrs.extra}\n                        setAttributes={this.props.setAttributes}\n                    />\n                </Item.Content>\n\n                {('bottom' === attrs.imageSlot ||\n                    'right' === attrs.imageSlot) && (\n                    <Image\n                        img={attrs.image}\n                        size={attrs.imageSize}\n                        link={attrs.link}\n                        slot={attrs.imageSlot}\n                        chartArt={attrs.isChartArt}\n                        dataHandler={this.props.setAttributes}\n                    />\n                )}\n            </Item>\n        );\n    };\n\n    render() {\n        // If the block is not selected, it is not in edit mode, disable setAttributes.\n        if (\n            undefined === this.props.isSelected ||\n            true !== this.props.isSelected\n        ) {\n            this.props.setAttributes = false;\n        }\n\n        this.props.attributes.taxonomy = 'Formats';\n        if (true === this.props.attributes.enableProgramsTaxonomy) {\n            this.props.attributes.taxonomy = 'Programs';\n        }\n\n        let isStacked = true;\n        if (\n            'left' === this.props.attributes.imageSlot ||\n            'right' === this.props.attributes.imageSlot\n        ) {\n            isStacked = false;\n        }\n\n        let isBordered = false;\n        if (true === this.props.attributes.emphasis) {\n            isBordered = true;\n        }\n\n        this.props.attributes.classes = classNames(\n            this.props.attributes.className,\n            'story-item',\n            { stacked: isStacked, bordered: isBordered },\n        );\n\n        return (\n            <Fragment>\n                <this.item {...this.props.attributes} />\n            </Fragment>\n        );\n    }\n}\n\nexport default StoryItem;\n","/**\n * BLOCK: prc-blocks\n *\n * Registering a basic block with Gutenberg.\n * Simple block, renders and saves the same content without any interactivity.\n */\n\n//  Import CSS.\nimport './editor.scss';\n// Our front end styles are included in our theme\n\nimport { __ } from \"@wordpress/i18n\";\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { Button, PanelBody, ToggleControl, TextControl } from '@wordpress/components';\nimport { Component, Fragment } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport * as moment from 'moment';\n\nimport StoryItem from './component';\n\nclass EditSidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\turl: '',\n\t\t}\n\t\tthis.setPostByURL = this.setPostByURL.bind(this);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.setState({ url: this.props.attributes.link });\n\t}\n\n\t/**\n\t * Loading Posts\n\t */\n\tsetPostByURL = () => {\n\t\tconst setAttributes = this.props.setAttributes;\n\t\tlet url = this.props.attributes.link;\n\n\t\tconst getSiteIDFromURL = (url) => {\n\t\t\tconsole.log(url);\n\t\t\tlet siteID = 1;\n\t\t\tif ( url.includes(window.siteDomain + '/global/' ) ) {\n\t\t\t\tsiteID = 2;\n\t\t\t} else if ( url.includes(window.siteDomain + '/hispanic/' ) ) {\n\t\t\t\tsiteID = 5;\n\t\t\t} else if ( url.includes(window.siteDomain + '/science/' ) ) {\n\t\t\t\tsiteID = 16;\n\t\t\t} else if ( url.includes(window.siteDomain + '/methods/' ) ) {\n\t\t\t\tsiteID = 10;\n\t\t\t} else if ( url.includes(window.siteDomain + '/internet/' ) ) {\n\t\t\t\tsiteID = 9;\n\t\t\t} else if ( url.includes('https://www.people-press.org/' ) ) {\n\t\t\t\tsiteID = 4;\n\t\t\t} else if ( url.includes('https://www.pewforum.org/' ) ) {\n\t\t\t\tsiteID = 7;\n\t\t\t} else if ( url.includes('https://www.journalism.org/' ) ) {\n\t\t\t\tsiteID = 8;\n\t\t\t} else if ( url.includes('https://www.pewsocialtrends.org/' ) ) {\n\t\t\t\tsiteID = 3;\n\t\t\t} else if ( url.includes('https://www.pewresearch.org/' ) || url.includes(window.siteDomain) ) {\n\t\t\t\tsiteID = 1;\n\t\t\t}\n\t\t\treturn siteID;\n\t\t}\n\n\t\tif ( undefined === setAttributes || undefined === url ) {\n\t\t\treturn;\n\t\t}\n\n\t\tapiFetch( { path: '/prc-api/v2/blocks/helpers/get-post-by-url/?url=' + url + '&siteID=' + getSiteIDFromURL(url) } ).then( post => {\n\t\t\tconsole.info('Post Returned:');\n\t\t\tconsole.log(post);\n\t\t\tif ( false !== post ) {\n\t\t\t\tsetAttributes({\n\t\t\t\t\ttitle: post.title,\n\t\t\t\t\timage: post.image,\n\t\t\t\t\texcerpt: post.excerpt,\n\t\t\t\t\tlink: post.link,\n\t\t\t\t\tlabel: post.label,\n\t\t\t\t\tdate: post.date,\n\t\t\t\t\tpostID: post.id,\n\t\t\t\t\textra: '', // We want to clear extra when pulling a new post\n\t\t\t\t});\n\t\t\t}\n        } );\n\t} \n\n\trender = () => {\n\t\tconst setAttributes = this.props.setAttributes;\n\t\treturn(\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Story Item Options' ) }>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Post ID\"\n\t\t\t\t\t\t\tvalue={ this.props.attributes.postID }\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='story-item-link'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel=\"Link\"\n\t\t\t\t\t\t\t\tvalue={ this.props.attributes.link }\n\t\t\t\t\t\t\t\tonChange={ ( link ) => setAttributes({link}) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button onClick={this.setPostByURL} isPrimary>Fetch</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p><strong>Content Options:</strong></p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableHeader ? 'Header Enabled' : 'Header Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableHeader }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableHeader: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableExcerpt ? 'Excerpt Enabled' : 'Excerpt Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableExcerpt }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableExcerpt: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableExtra ? 'Extras Enabled' : 'Extras Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableExtra }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ enableExtra: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.emphasis ? 'Emphasis Enabled' : 'Emphasis Disabled' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.emphasis }\n\t\t\t\t\t\t\tonChange={ (value) => { setAttributes({ emphasis: value }); } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ this.props.attributes.enableProgramsTaxonomy ? 'Programs' : 'Formats' }\n\t\t\t\t\t\t\tchecked={ this.props.attributes.enableProgramsTaxonomy }\n\t\t\t\t\t\t\tonChange={ (value) => { \n\t\t\t\t\t\t\t\tsetAttributes({ enableProgramsTaxonomy: value });\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t)\n\t}\n}\n\nconst todaysDate = () => {\n\treturn moment().format(\"MMM D, YYYY\");\n}\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/story-item', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Story Item' ), // Block title.\n\ticon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'story' ),\n\t\t__( 'post' ),\n\t\t__( 'story item' ),\n\t],\n\tstyles: [\n\t\t{\n\t\t\tname: 'disabled',\n\t\t\tlabel: 'Image Disabled',\n\t\t},\n\t\t{\n\t\t\tname: 'default',\n\t\t\tlabel: 'Default Image Alignment',\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'top',\n\t\t\tlabel: 'Image Aligned Top',\n\t\t},\n\t\t{\n\t\t\tname: 'bottom',\n\t\t\tlabel: 'Image Aligned Bottom',\n\t\t},\n\t\t{\n\t\t\tname: 'left',\n\t\t\tlabel: 'Image Aligned Left',\n\t\t},\n\t\t{\n\t\t\tname: 'right',\n\t\t\tlabel: 'Image Aligned Right',\n\t\t}\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\t// Item Content\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Title',\n\t\t},\n\t\texcerpt: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tmultiline: 'p',\n\t\t\tselector: '.description',\n\t\t\tdefault: '<p>Excerpt</p>',\n\t\t},\n\t\textra: {\n\t\t\ttype: 'string',\n\t\t\tsource: 'html',\n\t\t\tmultiline: 'li',\n\t\t\tselector: '.extra',\n\t\t\tdefault: '',\n\t\t},\n\t\t// Item Meta\n\t\tlink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\tlabel: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Report',\n\t\t},\n\t\tdate: {\n\t\t\ttype: 'string',\n\t\t\tdefault: todaysDate(),\n\t\t},\n\t\t// Images\n\t\timage: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\timageSlot: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'disabled',\n\t\t},\n\t\timageSize: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'A1',\n\t\t},\n\t\tisChartArt: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\t// Post Meta Data:\n\t\tpostID: {\n\t\t\ttype: 'integer',\n\t\t},\n\t\t// Item Options\n\t\temphasis: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\thorizontal: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\tstacked: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableHeader: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableExcerpt: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t},\n\t\tenableExtra: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\tenableProgramsTaxonomy: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\theaderSize: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'normal',\n\t\t},\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: ( props ) => {\n\t\t// Set Image Slot by Style\n\t\tif ( 'is-style-default' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'default' });\n\t\t} else if ( 'is-style-top' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'top' });\n\t\t} else if ( 'is-style-bottom' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'bottom' });\n\t\t} else if ( 'is-style-left' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'left' });\n\t\t} else if ( 'is-style-right' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'right' });\n\t\t} else if ( 'is-style-disabled' === props.attributes.className ) {\n\t\t\tprops.setAttributes({ imageSlot: 'disabled' });\n\t\t}\n\t\tconsole.log('StoryItem');\n\t\tconsole.log(props);\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{ true === props.isSelected && (\n\t\t\t\t\t<EditSidebar {...props}/>\n\t\t\t\t) }\n\t\t\t\t<StoryItem {...props}/>\n\t\t\t</Fragment>\n\t\t)\n\t},\n\n\t// Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\treturn (\n\t\t\t<StoryItem {...props}/>\n\t\t);\n\t},\n} );","module.exports = moment;","module.exports = wp.i18n;","module.exports = ReactDOM;","module.exports = wp.element;","module.exports = lodash;","module.exports = wp.components;"],"sourceRoot":""}