{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///external \"lodash\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.components\"","webpack:///./src/_shared/helpers/get-terms/index.js","webpack:///./src/_shared/helpers/if-match-set-attribute/index.js","webpack:///./src/_shared/components/wpQueryPinControl/index.js","webpack:///./src/story-item/edit/controls.js","webpack:///./src/story-item/edit/image.js","webpack:///./src/story-item/edit/description.js","webpack:///./src/story-item/edit/extra.js","webpack:///./src/story-item/edit/header.js","webpack:///./src/story-item/edit/index.js","webpack:///./src/story-item/save.js","webpack:///./src/story-item/transforms.js","webpack:///./src/story-item/index.js","webpack:///external \"moment\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.data\"","webpack:///external \"wp.blocks\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.url\"","webpack:///../src/components/story-item/shared/image/index.js","webpack:///../src/components/story-item/image.js","webpack:///../src/components/story-item/description.js","webpack:///../src/components/story-item/extra.js","webpack:///../src/components/story-item/kicker.js","webpack:///../src/components/story-item/header.js","webpack:///../src/components/story-item/index.js"],"names":["module","exports","React","wp","element","lodash","blockEditor","components","getTerms","taxonomy","perPage","Promise","resolve","data","apiFetch","path","then","terms","index","length","slug","replace","toLowerCase","id","name","parent","ifMatchSetAttribute","needle","haystack","attrKey","attrValue","setAttributes","WpQueryPinControls","wpQueryContext","rootClientId","postId","console","log","isActive","includes","controls","icon","title","onClick","newData","i","findIndex","x","push","splice","dispatch","updateBlockAttributes","pinned","JSON","stringify","setPostAsAttributes","post","storyItem","hasOwnProperty","rendered","excerpt","link","label","date","postID","extra","art","image","setPostByURL","url","undefined","method","catch","err","error","setPostByStubID","refresh","URLControl","useState","isLinkOpen","setIsLinkOpen","aria-expanded","aria-haspopup","__","showTooltip","position","onClose","className","value","showInitialSuggestions","suggestionsQuery","type","subtype","onChange","p","settings","POPOVER_PROPS","isAlternate","ToolbarDropdown","selected","options","iconPaths","prefixLabel","iconWidth","iconHeight","iconViewBox","Icon","isPressed","width","height","viewBox","xmlns","d","popoverProps","renderToggle","onToggle","isOpen","renderContent","isCollapsed","map","size","sprintf","ToolbarControls","attributes","imageSize","imageSlot","headerSize","isChartArt","newLevel","1","2","3","newSize","A1","A2","A3","A4","XL","Controls","context","isRefreshing","enableHeader","enableExcerpt","enableExcerptBelow","enableExtra","enableBreakingNews","enableEmphasis","enableProgramsTaxonomy","enableMeta","inLoop","useEffect","isEmpty","isInteger","isSecondary","isBusy","style","marginBottom","checked","window","prcBreakingNews","alert","ALLOWED_MEDIA_TYPES","Edit","img","setArt","rawUrl","chartArt","onSelect","media","allowedTypes","render","openFn","open","placeholder","Img","slot","isXL","isA1","isA2","isA3","isA4","classNames","ui","bordered","Description","content","sansSerif","enabled","classes","tagName","multiline","Content","Extra","breakingNews","href","KickerEditor","labelOptions","setLabelOptions","termValue","sortByLabel","Object","keys","forEach","key","termObj","sort","a","b","getTermsAsOptions","display","alignItems","l","Header","altHeaderWeight","large","medium","small","light","Item","Meta","t","allowedFormats","edit","isSelected","clientId","useSelect","select","getBlockRootClientId","dataHandler","enableAltHeaderWeight","stacked","setImageSlotByClassName","TopAndLeftSlot","DefaultSlot","BottomAndRightSlot","parse","as","save","transforms","from","isMatch","node","nodeName","test","textContent","transform","createBlock","trim","to","blocks","metadata","description","keywords","example","moment","format","variations","isDefault","registerBlockType","ReactDOM","i18n","default","hidpi","smallHidpi","legacy","ImageDisplay","getImgURL","variant","dimensions","args","resize","addQueryArgs","getImgSrcSet","threshold","srcSet","src","alt","sources","Image","Kicker","dateString","labelSlug","isStyleMobileLoop","parseInt","StoryItem","extraContent","isSmall","useMediaQuery","isStacked"],"mappings":"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","file":"story-item/main-092c4eb1.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","module.exports = lodash;","module.exports = wp.blockEditor;","module.exports = wp.components;","// @TODO: convert froomo wp api to apifetch https://www.npmjs.com/package/@wordpress/api-fetch\nimport apiFetch from '@wordpress/api-fetch';\n\nconst getTermsByLetter = (taxonomy, letter) => {\n    return new Promise(resolve => {\n        apiFetch({\n            path: `/prc-api/v2/blocks/helpers/get-taxonomy-by-letter/?taxonomy=${taxonomy}&letter=${letter}`,\n        }).then(terms => {\n            resolve(terms);\n        });\n    });\n};\n\nconst getTerms = (taxonomy, perPage = 25) => {\n    return new Promise(resolve => {\n        const data = {};\n        apiFetch({\n            path: `/wp/v2/${taxonomy}?per_page=${perPage}`,\n        }).then(terms => {\n            for (let index = 0; index < terms.length; index++) {\n                const slug = terms[index].slug.replace(\n                    `${taxonomy.toLowerCase()}_`,\n                    '',\n                );\n                data[terms[index].id] = {\n                    id: terms[index].id,\n                    name: terms[index].name,\n                    parent: terms[index].parent,\n                    slug,\n                };\n            }\n            resolve(data);\n        });\n    });\n};\n\nconst getTermsAsOptions = (\n    taxonomy,\n    perPage,\n    termValue = 'name',\n    sortByLabel = true,\n) => {\n    return new Promise(resolve => {\n        getTerms(taxonomy, perPage).then(data => {\n            const labelOptions = [];\n\n            Object.keys(data).forEach(key => {\n                const termObj = data[key];\n\n                let value = termObj.name;\n                if ('termid' === termValue) {\n                    value = termObj.id;\n                }\n\n                let label = termObj.name;\n                if (undefined !== termObj.parent && 0 !== termObj.parent) {\n                    label = ` -- ${label}`;\n                }\n\n                labelOptions.push({\n                    value,\n                    label,\n                });\n            });\n\n            if (false !== sortByLabel) {\n                labelOptions.sort((a, b) => (a.label > b.label ? 1 : -1));\n            }\n\n            resolve(labelOptions);\n        });\n    });\n};\n\nconst getTermsAsTree = taxonomy => {\n    return new Promise(resolve => {\n        getTerms(taxonomy).then(data => {\n            const treeData = [];\n            // Convert data from object of objects to array of objects.\n            const convertedData = Object.keys(data).map(i => data[i]);\n            // Filter out the parent terms first\n            const parentTerms = convertedData.filter(e => 0 === e.parent);\n            parentTerms.forEach(e => {\n                // Get children by filtering for terms with parent matching this id in loop.\n                const c = convertedData.filter(f => f.parent === e.id);\n                const children = [];\n                // Construct children array.\n                c.forEach(cT => {\n                    children.push({\n                        name: cT.name,\n                        id: cT.id,\n                    });\n                });\n                // Finally, push the fully structured parent -> child relationship to the tree data.\n                treeData.push({\n                    name: e.name,\n                    id: e.id,\n                    children,\n                });\n            });\n\n            resolve(treeData);\n        });\n    });\n};\n\nexport default getTerms;\nexport { getTerms, getTermsByLetter, getTermsAsOptions, getTermsAsTree };\n","const ifMatchSetAttribute = (\n    needle,\n    haystack,\n    attrKey,\n    attrValue,\n    setAttributes,\n) => {\n    if (needle === haystack) {\n        setAttributes({ [attrKey]: attrValue });\n    }\n};\n\nexport default ifMatchSetAttribute;\n","import { dispatch } from '@wordpress/data';\nimport { Toolbar } from '@wordpress/components';\nimport { BlockControls } from '@wordpress/block-editor';\n\nconst WpQueryPinControls = ({ wpQueryContext, rootClientId, postId }) => {\n    console.log('<ContextControls>', wpQueryContext, rootClientId, postId);\n    const isActive = wpQueryContext.includes(postId);\n    console.log('isActive?', isActive);\n    return (\n        <BlockControls>\n            <Toolbar\n                controls={[\n                    {\n                        icon: 'sticky',\n                        title: 'Pin This',\n                        isActive,\n                        onClick: () => {\n                            const newData = wpQueryContext;\n                            // Check if already exists if not treat as new if so then remove.\n                            const i = newData.findIndex(x => x === postId);\n                            if (-1 === i) {\n                                newData.push(postId);\n                            } else {\n                                newData.splice(i, 1);\n                            }\n                            console.log('dispatching...', postId);\n                            console.log(newData);\n                            dispatch('core/block-editor').updateBlockAttributes(\n                                rootClientId,\n                                {\n                                    pinned: JSON.stringify(newData),\n                                },\n                            );\n                        },\n                    },\n                ]}\n            />\n        </BlockControls>\n    );\n};\n\nexport default WpQueryPinControls;\n","import { __, sprintf } from '@wordpress/i18n';\nimport { isEmpty, isInteger } from 'lodash';\nimport { dispatch } from '@wordpress/data';\nimport {\n    InspectorControls,\n    BlockControls,\n    __experimentalLinkControl as LinkControl,\n} from '@wordpress/block-editor';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport {\n    Button,\n    PanelBody,\n    ToggleControl,\n    Dropdown,\n    Toolbar,\n    ToolbarButton,\n    ToolbarGroup,\n    Path,\n    SVG,\n    Popover,\n} from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\n\nimport { isURL, prependHTTP } from '@wordpress/url';\n\nimport WpQueryPinControls from '../../_shared/components/wpQueryPinControl'; // Supports pinning items to the wpQuery block using block context.\n\nconst setPostAsAttributes = (post, setAttributes) => {\n    const storyItem = {\n        title: post.title.hasOwnProperty('rendered')\n            ? post.title.rendered\n            : post.title,\n        excerpt: post.excerpt.hasOwnProperty('rendered')\n            ? post.excerpt.rendered\n            : post.excerpt,\n        link: post.link,\n        label: post.hasOwnProperty('label') ? post.label : 'Report',\n        date: post.date,\n        postID: post.id,\n        extra: '', // We want to clear extra when pulling a new post\n    };\n    // If the post has art then let the image editor mounting effect handle setting it.\n    // Get art...\n    if (!post.art) {\n        storyItem.image = post.image;\n    }\n    setAttributes(storyItem);\n};\n\n/**\n * Set's post attributes by url if a post is not found then failover and set just the link as what was passed through.\n * @param {string} url\n * @param {func} setAttributes\n */\nconst setPostByURL = (url, setAttributes) => {\n    if (undefined === url || undefined === setAttributes) {\n        return;\n    }\n    apiFetch({\n        path: '/prc-api/v2/blocks/helpers/get-post-by-url',\n        method: 'POST',\n        data: { url },\n    })\n        .then(post => {\n            console.log('setPostbyURL', post);\n            if (false !== post) {\n                setPostAsAttributes(post, setAttributes);\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            setAttributes({ link: url });\n        });\n};\n\nconst setPostByStubID = (postId, setAttributes, refresh) => {\n    if (undefined === postId || undefined === setAttributes) {\n        return;\n    }\n    if (undefined !== refresh) {\n        refresh(true);\n    }\n    apiFetch({\n        path: `/wp/v2/stub/${postId}`,\n        method: 'GET',\n    })\n        .then(post => {\n            console.log('setPostByStubID', postId, post);\n            if (false !== post) {\n                // We should lookup the meta link here real quick and apply that to the post.link object before posting attributes.\n                setPostAsAttributes(post, setAttributes);\n            }\n        })\n        .catch(err => console.error(err))\n        .then(() => {\n            if (undefined !== refresh) {\n                refresh(false);\n            }\n        });\n};\n\nconst URLControl = ({ url, setAttributes }) => {\n    const [isLinkOpen, setIsLinkOpen] = useState(false);\n    return (\n        <Fragment>\n            <ToolbarButton\n                aria-expanded={isLinkOpen}\n                aria-haspopup=\"true\"\n                label={__('Set Link')}\n                icon=\"admin-links\"\n                onClick={() => setIsLinkOpen(!isLinkOpen)}\n                showTooltip\n            />\n            {true === isLinkOpen && (\n                <Popover\n                    position=\"bottom center\"\n                    onClose={() => setIsLinkOpen(false)}\n                >\n                    <LinkControl\n                        className=\"wp-block-navigation-link__inline-link-input\"\n                        value={{ url }}\n                        showInitialSuggestions\n                        suggestionsQuery={{ type: 'post', subtype: 'stub' }}\n                        onChange={p => {\n                            // If for whatever reason what is returned does not have the url property then bail out.\n                            if (!p.hasOwnProperty('url')) {\n                                return;\n                            }\n                            // If this returns an  ID then its a stub id so we can go ahead and get info from wp api.\n                            if (p.hasOwnProperty('id')) {\n                                setPostByStubID(p.id, setAttributes);\n                            } else {\n                                setPostByURL(p.url, setAttributes);\n                            }\n                        }} // Does return the post id so we could just go set that shit\n                        settings={[]}\n                    />\n                </Popover>\n            )}\n        </Fragment>\n    );\n};\n\nconst POPOVER_PROPS = {\n    className: 'block-library-heading-level-dropdown',\n    isAlternate: true,\n};\n\nconst ToolbarDropdown = ({\n    selected,\n    options,\n    iconPaths,\n    label,\n    prefixLabel = '%s',\n    onChange,\n    iconWidth = '24',\n    iconHeight = '24',\n    iconViewBox = '0 0 24 24',\n}) => {\n    const Icon = ({ selected, isPressed = false }) => {\n        if (!iconPaths.hasOwnProperty(selected)) {\n            return null;\n        }\n\n        return (\n            <SVG\n                width={iconWidth}\n                height={iconHeight}\n                viewBox={iconViewBox}\n                xmlns=\"http://www.w3.org/2000/svg\"\n                isPressed={isPressed}\n            >\n                <Path d={iconPaths[selected]} />\n            </SVG>\n        );\n    };\n\n    return (\n        <Dropdown\n            popoverProps={POPOVER_PROPS}\n            renderToggle={({ onToggle, isOpen }) => {\n                return (\n                    <ToolbarButton\n                        aria-expanded={isOpen}\n                        aria-haspopup=\"true\"\n                        icon={<Icon selected={selected} />}\n                        label={label}\n                        onClick={onToggle}\n                        showTooltip\n                    />\n                );\n            }}\n            renderContent={() => (\n                <Toolbar\n                    className=\"block-library-heading-level-toolbar\"\n                    label={label}\n                >\n                    <ToolbarGroup\n                        isCollapsed={false}\n                        controls={options.map((size, index) => {\n                            const isActive = selected === size;\n                            return {\n                                icon: (\n                                    <Icon\n                                        selected={size}\n                                        isPressed={isActive}\n                                    />\n                                ),\n                                title: sprintf(\n                                    // translators: %s: heading level e.g: \"1\", \"2\", \"3\"\n                                    __(prefixLabel),\n                                    size,\n                                ),\n                                isActive,\n                                onClick() {\n                                    onChange(size);\n                                },\n                            };\n                        })}\n                    />\n                </Toolbar>\n            )}\n        />\n    );\n};\n\nconst ToolbarControls = ({ attributes, setAttributes }) => {\n    const { link, imageSize, imageSlot, headerSize, isChartArt } = attributes;\n    return (\n        <BlockControls>\n            <ToolbarGroup>\n                <URLControl url={link} setAttributes={setAttributes} />\n            </ToolbarGroup>\n            <ToolbarGroup>\n                <ToolbarDropdown\n                    label={__('Change Heading Level')}\n                    selected={headerSize}\n                    options={[1, 2, 3]}\n                    onChange={newLevel =>\n                        setAttributes({ headerSize: newLevel })\n                    }\n                    iconPaths={{\n                        1: 'M9 5h2v10H9v-4H5v4H3V5h2v4h4V5zm6.6 0c-.6.9-1.5 1.7-2.6 2v1h2v7h2V5h-1.4z',\n                        2: 'M7 5h2v10H7v-4H3v4H1V5h2v4h4V5zm8 8c.5-.4.6-.6 1.1-1.1.4-.4.8-.8 1.2-1.3.3-.4.6-.8.9-1.3.2-.4.3-.8.3-1.3 0-.4-.1-.9-.3-1.3-.2-.4-.4-.7-.8-1-.3-.3-.7-.5-1.2-.6-.5-.2-1-.2-1.5-.2-.4 0-.7 0-1.1.1-.3.1-.7.2-1 .3-.3.1-.6.3-.9.5-.3.2-.6.4-.8.7l1.2 1.2c.3-.3.6-.5 1-.7.4-.2.7-.3 1.2-.3s.9.1 1.3.4c.3.3.5.7.5 1.1 0 .4-.1.8-.4 1.1-.3.5-.6.9-1 1.2-.4.4-1 .9-1.6 1.4-.6.5-1.4 1.1-2.2 1.6V15h8v-2H15z',\n                        3: 'M12.1 12.2c.4.3.8.5 1.2.7.4.2.9.3 1.4.3.5 0 1-.1 1.4-.3.3-.1.5-.5.5-.8 0-.2 0-.4-.1-.6-.1-.2-.3-.3-.5-.4-.3-.1-.7-.2-1-.3-.5-.1-1-.1-1.5-.1V9.1c.7.1 1.5-.1 2.2-.4.4-.2.6-.5.6-.9 0-.3-.1-.6-.4-.8-.3-.2-.7-.3-1.1-.3-.4 0-.8.1-1.1.3-.4.2-.7.4-1.1.6l-1.2-1.4c.5-.4 1.1-.7 1.6-.9.5-.2 1.2-.3 1.8-.3.5 0 1 .1 1.6.2.4.1.8.3 1.2.5.3.2.6.5.8.8.2.3.3.7.3 1.1 0 .5-.2.9-.5 1.3-.4.4-.9.7-1.5.9v.1c.6.1 1.2.4 1.6.8.4.4.7.9.7 1.5 0 .4-.1.8-.3 1.2-.2.4-.5.7-.9.9-.4.3-.9.4-1.3.5-.5.1-1 .2-1.6.2-.8 0-1.6-.1-2.3-.4-.6-.2-1.1-.6-1.6-1l1.1-1.4zM7 9H3V5H1v10h2v-4h4v4h2V5H7v4z',\n                    }}\n                    iconHeight=\"24\"\n                    iconWidth=\"24\"\n                    prefixLabel=\"Heading %d\"\n                    iconViewBox=\"0 0 20 20\"\n                />\n            </ToolbarGroup>\n            {'disabled' !== imageSlot && (\n                <ToolbarGroup>\n                    {!['legacy-260', 'legacy-260-173'].includes(imageSize) && (\n                        <ToolbarDropdown\n                            label={__('Change Image Size')}\n                            selected={imageSize}\n                            options={['A1', 'A2', 'A3', 'A4', 'XL']}\n                            onChange={newSize =>\n                                setAttributes({ imageSize: newSize })\n                            }\n                            iconPaths={{\n                                A1:\n                                    'M12.13,18.09h-3l-.74-2.46H4.49l-.75,2.46H1.27l3.84-12H8.36ZM7.72,13.41,6.44,9.2,5.16,13.41Z M13.31,8.35a7,7,0,0,0,4-2.44h2v10h3.33v2.19H13V15.9h3.63V9a23.54,23.54,0,0,1-3.33,1.78Z',\n                                A2:\n                                    'M12.5,18.09h-3l-.74-2.46H4.86l-.75,2.46H1.64l3.83-12H8.73ZM8.09,13.41,6.81,9.2,5.53,13.41Z M22.16,18.09h-9V15.75l.72-.52,1.46-1a31.07,31.07,0,0,0,3.1-2.6,2.74,2.74,0,0,0,.9-1.87,1.55,1.55,0,0,0-1.66-1.6c-1.19,0-1.86.76-2,2.3l-2.48-.55c.56-2.67,2.11-4,4.66-4a4.37,4.37,0,0,1,3,.91A3.5,3.5,0,0,1,22.2,9.69c0,1.51-.69,2.61-2.52,4a33.64,33.64,0,0,1-3.06,2h5.74Z',\n                                A3:\n                                    'M12.52,18h-3l-.74-2.47H4.89L4.13,18H1.67L5.5,6H8.76ZM8.11,13.32,6.83,9.11,5.56,13.32Z M17.38,10.75a1.87,1.87,0,0,0,1.46-.47,1.36,1.36,0,0,0,.38-.94A1.5,1.5,0,0,0,17.6,7.89c-1,0-1.51.45-1.84,1.53L13.28,9a3.62,3.62,0,0,1,1.1-2,4.58,4.58,0,0,1,3.33-1.24C20.24,5.82,22,7.13,22,9a2.69,2.69,0,0,1-2,2.68,3.09,3.09,0,0,1,1.51.74,2.73,2.73,0,0,1,.9,2.11c0,2.19-1.82,3.61-4.64,3.61A4.67,4.67,0,0,1,14.23,17a3.88,3.88,0,0,1-1.31-2.45l2.55-.36A2,2,0,0,0,17.63,16a1.64,1.64,0,0,0,1.84-1.62,1.55,1.55,0,0,0-.61-1.27,3,3,0,0,0-1.66-.27H16.1V10.75Z',\n                                A4:\n                                    'M12.31,18.09h-3l-.74-2.46H4.67l-.75,2.46H1.45l3.84-12H8.54ZM7.9,13.41,6.62,9.2,5.34,13.41Z M20.86,13.22h1.69v2.1H20.86v2.77H18.05V15.32H12.81v-2.1l4.84-7.31h3.21Zm-2.69,0V9.16c0-.09,0-.28,0-.57l0-.51-3.29,5.14Z',\n                                XL:\n                                    'M9.23,11.58,12.94,18H9.7L7.28,13.65,4.87,18H2.21l3.71-6.38L2.62,6H5.9L7.84,9.65,9.88,6h2.63Z M21.79,15.63V18H14.18V6H17v9.64Z',\n                            }}\n                            prefixLabel=\"%s Image Size\"\n                        />\n                    )}\n                    <ToolbarButton\n                        icon=\"chart-pie\"\n                        isPressed={isChartArt}\n                        label={__('Enable Chart Art')}\n                        onClick={() => {\n                            setAttributes({\n                                isChartArt: !isChartArt,\n                            });\n                        }}\n                    />\n                </ToolbarGroup>\n            )}\n        </BlockControls>\n    );\n};\n\nconst Controls = ({ attributes, setAttributes, context, rootClientId }) => {\n    const [isRefreshing, refresh] = useState(false);\n    const {\n        postID,\n        link,\n        imageSlot,\n        enableHeader,\n        enableExcerpt,\n        enableExcerptBelow,\n        enableExtra,\n        enableBreakingNews,\n        enableEmphasis,\n        enableProgramsTaxonomy,\n        enableMeta,\n        inLoop,\n    } = attributes;\n\n    const label = __('Story Item options');\n\n    useEffect(() => {\n        // On mount load the latest post details from the url.\n        if (!isEmpty(link) && undefined === postID) {\n            setPostByURL(link, setAttributes);\n        }\n    }, [link]);\n\n    return (\n        <Fragment>\n            <ToolbarControls {...{ attributes, setAttributes }} />\n            {false !== context && (\n                <WpQueryPinControls\n                    wpQueryContext={context}\n                    rootClientId={rootClientId}\n                    postId={postID}\n                />\n            )}\n            <InspectorControls>\n                <PanelBody title={label}>\n                    {isInteger(postID) && (\n                        <Button\n                            isSecondary\n                            isBusy={isRefreshing}\n                            onClick={() =>\n                                setPostByStubID(postID, setAttributes, refresh)\n                            }\n                            style={{ marginBottom: '1em' }}\n                        >\n                            Refresh Post\n                        </Button>\n                    )}\n                     <ToggleControl\n                        label={\n                            enableMeta\n                                ? 'Meta Enabled'\n                                : 'Meta Disabled'\n                        }\n                        checked={enableMeta}\n                        onChange={() => {\n                            setAttributes({ enableMeta: !enableMeta });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableHeader ? 'Header Enabled' : 'Header Disabled'\n                        }\n                        checked={enableHeader}\n                        onChange={() => {\n                            setAttributes({ enableHeader: !enableHeader });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableExcerpt ? 'Excerpt Enabled' : 'Excerpt Disabled'\n                        }\n                        checked={enableExcerpt}\n                        onChange={() => {\n                            setAttributes({ enableExcerpt: !enableExcerpt });\n                        }}\n                    />\n                    {true === enableExcerpt &&\n                        ('right' === imageSlot || 'left' === imageSlot) && (\n                            <ToggleControl\n                                label={\n                                    enableExcerptBelow\n                                        ? 'Excerpt Will Appear Below'\n                                        : 'Excerpt Will Appear Normally'\n                                }\n                                checked={enableExcerptBelow}\n                                onChange={() => {\n                                    setAttributes({\n                                        enableExcerptBelow: !enableExcerptBelow,\n                                    });\n                                }}\n                            />\n                        )}\n                    <ToggleControl\n                        label={\n                            enableExtra ? 'Extras Enabled' : 'Extras Disabled'\n                        }\n                        checked={enableExtra}\n                        onChange={() => {\n                            setAttributes({ enableExtra: !enableExtra });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableBreakingNews\n                                ? 'Breaking News Enabled'\n                                : 'Breaking News Disabled'\n                        }\n                        checked={enableBreakingNews}\n                        onChange={() => {\n                            if (false !== window.prcBreakingNews) {\n                                setAttributes({\n                                    enableBreakingNews: !enableBreakingNews,\n                                });\n                            } else {\n                                // eslint-disable-next-line no-alert\n                                alert(\n                                    'There are no currently active, authorized, breaking news events. The breaking news toggle will be set back to false.',\n                                );\n                                setAttributes({\n                                    enableBreakingNews: false,\n                                });\n                            }\n                        }}\n                    />\n                    <ToggleControl\n                        label={enableProgramsTaxonomy ? 'Programs' : 'Formats'}\n                        checked={enableProgramsTaxonomy}\n                        onChange={() => {\n                            setAttributes({\n                                enableProgramsTaxonomy: !enableProgramsTaxonomy,\n                            });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            enableEmphasis\n                                ? 'Emphasis Enabled'\n                                : 'Emphasis Disabled'\n                        }\n                        checked={enableEmphasis}\n                        onChange={() => {\n                            setAttributes({ enableEmphasis: !enableEmphasis });\n                        }}\n                    />\n                    <ToggleControl\n                        label={\n                            inLoop\n                                ? 'Pub Listing Style On Mobile'\n                                : 'Normal Styling On Mobile'\n                        }\n                        checked={inLoop}\n                        onChange={() => {\n                            setAttributes({ inLoop: !inLoop });\n                        }}\n                    />\n                </PanelBody>\n            </InspectorControls>\n        </Fragment>\n    );\n};\n\nexport default Controls;\n","import { Fragment, useState, useEffect } from '@wordpress/element';\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport classNames from 'classnames/bind';\n\nimport { ImageDisplay } from '@pewresearch/app-components';\n\nconst ALLOWED_MEDIA_TYPES = ['image'];\n\nconst Edit = ({ img, size, postId, setAttributes }) => {\n    const [art, setArt] = useState(false);\n\n    // When the postId changes go fetch new art for this post and store it in state and also store the correct image url in attributes.\n    useEffect(() => {\n        if (0 !== postId && false !== setAttributes) {\n            apiFetch({\n                path: `/prc-api/v2/get-art/?postId=${postId}`,\n            }).then(data => {\n                if (false !== data) {\n                    setArt(data);\n                    setAttributes({ image: data[size].rawUrl });\n                } else {\n                    // If no art on any subsequent art fetches set to false\n                    setArt(false);\n                }\n            });\n        }\n    }, [postId]);\n\n    /**\n     * If the art or size changes then go check the art object and set the approrpiate image and chart art given the arts options.\n     */\n    useEffect(() => {\n        if (\n            false !== art &&\n            undefined !== art[size] &&\n            false !== setAttributes\n        ) {\n            setAttributes({\n                image: art[size].rawUrl,\n                isChartArt: art[size].chartArt,\n            });\n        }\n    }, [art, size]);\n\n    return (\n        <MediaUploadCheck>\n            <MediaUpload\n                onSelect={media => setAttributes({ image: media.url })}\n                allowedTypes={ALLOWED_MEDIA_TYPES}\n                render={({ open }) => {\n                    let openFn = open;\n                    if (undefined !== postId && ! ['legacy-260', 'legacy-260-173'].includes(size)) {\n                        openFn = () => alert(\"You are unable to edit this image as it is locked to a post. To edit, visit this post and edit its origin post. \" + postId);\n                    }\n                    return(\n                        <Fragment>\n                            {\n                                // If we have an actual image here then display it otherwise give us the placeholder\n                            }\n                            {undefined !== img && 0 !== img.length && (\n                                <ImageDisplay\n                                    img={img}\n                                    size={size}\n                                    link=\"\"\n                                    onClick={openFn}\n                                />\n                            )}\n                            {(undefined === img || 0 === img.length) && (\n                                <ImageDisplay\n                                    img={img}\n                                    size={size}\n                                    link=\"\"\n                                    onClick={openFn}\n                                    placeholder\n                                />\n                            )}\n                        </Fragment>\n                    )\n                }}\n            />\n        </MediaUploadCheck>\n    );\n};\n\n/**\n * Props:\n * img: string url of image to display\n * size: string of image/slot size (A1,A2,A3,A4)\n * link: string of url to go to when image is clicked on front end\n * slot: if set to null then no image size chooser will be display\n * chartArt: if set to null then no chart art button will appear\n * setAttributes: defaults to false unless otherwise provided a function to pass data back up to a HOC state.\n *\n * <Img id={} img={} size={} slot={} chartArt={} postId={} setAttributes={}/>\n */\n\nconst Img = ({ img, size, slot, chartArt, postId, setAttributes }) => {\n    console.log('<Img>', img);\n\n    const classes = () => {\n        let isXL = false;\n        let isA1 = false;\n        let isA2 = false;\n        let isA3 = false;\n        let isA4 = false;\n        if (false !== slot) {\n            if ('XL' === size) {\n                isXL = true;\n            } else if ('A1' === size) {\n                isA1 = true;\n            } else if ('A2' === size) {\n                isA2 = true;\n            } else if ('A3' === size) {\n                isA3 = true;\n            } else if ('A4' === size) {\n                isA4 = true;\n            }\n        }\n\n        return classNames({\n            ui: true,\n            XL: isXL,\n            A1: isA1,\n            A2: isA2,\n            A3: isA3,\n            A4: isA4,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <Edit\n                img={img}\n                size={size}\n                postId={postId}\n                setAttributes={setAttributes}\n            />\n        </div>\n    );\n};\n\nexport default Img;\n","// WordPress Core\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\nimport classNames from 'classnames/bind';\n\nconst Description = ({ content, sansSerif, enabled, setAttributes }) => {\n    if (true !== enabled) {\n        return <Fragment />;\n    }\n\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n\n    return (\n        <Fragment>\n            {false !== setAttributes && (\n                <RichText\n                    tagName=\"div\"\n                    value={content}\n                    onChange={excerpt => setAttributes({ excerpt })}\n                    placeholder={content}\n                    multiline=\"p\"\n                    className={classes}\n                />\n            )}\n            {false === setAttributes && (\n                <RichText.Content\n                    tagName=\"div\"\n                    value={content}\n                    className={classes}\n                />\n            )}\n        </Fragment>\n    );\n};\n\nexport default Description;\n","// WordPress Core\nimport { Fragment } from '@wordpress/element';\nimport { RichText } from '@wordpress/block-editor';\n\nconst Extra = ({ content, breakingNews, enabled, setAttributes }) => {\n    return (\n        <Fragment>\n            {false !== setAttributes && true === enabled && (\n                <RichText\n                    tagName=\"ul\"\n                    value={content}\n                    onChange={extra => setAttributes({ extra })}\n                    placeholder={content}\n                    multiline=\"li\"\n                    className=\"extra\"\n                />\n            )}\n            {false === setAttributes && true === enabled && (\n                <RichText.Content\n                    tagName=\"ul\"\n                    value={content}\n                    className=\"extra\"\n                />\n            )}\n            {true === breakingNews && false !== window.prcBreakingNews && (\n                <ul className=\"extra-breaking-news\">\n                    <li>\n                        <a\n                            href={window.prcBreakingNews.url}\n                            className=\"kicker-breaking-news\"\n                        >\n                            {window.prcBreakingNews.label}\n                        </a>\n                    </li>\n                </ul>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Extra;\n","// WordPress Core\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport { SelectControl, TextControl } from '@wordpress/components';\nimport { RichText } from '@wordpress/block-editor';\nimport classNames from 'classnames/bind';\nimport { Item } from 'semantic-ui-react';\n\nimport { getTermsAsOptions } from 'shared';\n\nconst KickerEditor = ({ label, date, taxonomy, setAttributes }) => {\n    const [labelOptions, setLabelOptions] = useState([]);\n\n    useEffect(() => {\n        getTermsAsOptions(taxonomy).then(options => {\n            setLabelOptions(options);\n        });\n    }, [taxonomy]);\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div>\n                <SelectControl\n                    value={label}\n                    options={labelOptions}\n                    onChange={l => {\n                        setAttributes({ label: l });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n            <div>&nbsp;|&nbsp;</div>\n            <div>\n                <TextControl\n                    value={date}\n                    onChange={d => {\n                        setAttributes({ date: d });\n                    }}\n                    style={{ marginBottom: '0px' }}\n                    className=\"story-label-select\"\n                />\n            </div>\n        </div>\n    );\n}\n\nconst Header = ({\n    title,\n    label,\n    date,\n    size,\n    enabled,\n    taxonomy,\n    setAttributes,\n    altHeaderWeight,\n}) => {\n    const {enableHeader, enableMeta} = enabled;\n    if (true !== enableHeader) {\n        return <Fragment />;\n    }\n\n    const classes = classNames({\n        large: (1 === size),\n        medium: (2 === size),\n        small: (3 === size),\n        light: altHeaderWeight,\n        'sans-serif': true !== enableMeta,\n    });\n\n    return (\n        <Fragment>\n            {true === enableMeta && (\n                <Item.Meta>\n                    <KickerEditor\n                        date={date}\n                        label={label}\n                        taxonomy={taxonomy}\n                        setAttributes={setAttributes}\n                    />\n                </Item.Meta>\n            )}\n            <Item.Header className={classes}>\n                <RichText\n                    tagName=\"div\"\n                    value={title}\n                    onChange={t => setAttributes({ title: t })}\n                    allowedFormats={['italic']}\n                    placeholder=\"Title\"\n                    multiline=\"br\"\n                />\n            </Item.Header>\n        </Fragment>\n    );\n};\n\nexport default Header;\n","import classNames from 'classnames/bind';\nimport { Fragment } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { Item } from 'semantic-ui-react';\nimport { ifMatchSetAttribute } from 'shared';\n\nimport Controls from './controls';\nimport Image from './image';\nimport Description from './description';\nimport Extra from './extra';\nimport Header from './header';\n\n// Sets the image slot based on the style classname selected.\nconst setImageSlotByClassName = (className, setAttributes) => {\n    ifMatchSetAttribute(\n        'is-style-top',\n        className,\n        'imageSlot',\n        'top',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-bottom',\n        className,\n        'imageSlot',\n        'bottom',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-left',\n        className,\n        'imageSlot',\n        'left',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-right',\n        className,\n        'imageSlot',\n        'right',\n        setAttributes,\n    );\n    ifMatchSetAttribute(\n        'is-style-disabled',\n        className,\n        'imageSlot',\n        'disabled',\n        setAttributes,\n    );\n    // Default\n    ifMatchSetAttribute(\n        'is-style-default',\n        className,\n        'imageSlot',\n        'default',\n        setAttributes,\n    );\n};\n\nconst edit = ({ attributes, setAttributes, isSelected, clientId, context }) => {\n    const {\n        title,\n        excerpt,\n        extra,\n        link,\n        label,\n        date,\n        image,\n        imageSlot,\n        imageSize,\n        isChartArt,\n        postID,\n        headerSize,\n        enableEmphasis,\n        enableHeader,\n        enableExcerpt,\n        enableExcerptBelow,\n        enableExtra,\n        enableBreakingNews,\n        enableProgramsTaxonomy,\n        enableMeta,\n        className,\n    } = attributes;\n\n    const { rootClientId } = useSelect(\n        select => {\n            return {\n                rootClientId: select('core/block-editor').getBlockRootClientId(\n                    clientId,\n                ),\n            };\n        },\n        [clientId],\n    );\n\n    const dataHandler = setAttributes;\n    const enableAltHeaderWeight = !enableExcerpt;\n    const taxonomy = enableProgramsTaxonomy ? 'Programs' : 'Formats';\n\n    const classes = classNames(className, 'story', {\n        stacked: 'top' === imageSlot || 'bottom' === imageSlot,\n        bordered: enableEmphasis,\n        'alt-description': enableExcerptBelow,\n    });\n\n    setImageSlotByClassName(className, setAttributes);\n\n    const Img = () => {\n        return (\n            <Image\n                img={image}\n                size={imageSize}\n                link={link}\n                slot={imageSlot}\n                chartArt={isChartArt}\n                postId={postID}\n                setAttributes={dataHandler}\n            />\n        );\n    };\n\n    const TopAndLeftSlot = () => {\n        if ('top' !== imageSlot && 'left' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const DefaultSlot = () => {\n        if ('default' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const BottomAndRightSlot = () => {\n        if ('bottom' !== imageSlot && 'right' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    return (\n        <Fragment>\n            {true === isSelected && (\n                <Controls\n                    {...{\n                        attributes,\n                        setAttributes,\n                        context: context.hasOwnProperty('prc-block/wp-query')\n                            ? JSON.parse(context['prc-block/wp-query'])\n                            : false,\n                        rootClientId,\n                    }}\n                />\n            )}\n            <Item as=\"article\" className={classes}>\n                <TopAndLeftSlot />\n\n                <Item.Content>\n                    <Header\n                        enabled={{enableHeader, enableMeta}}\n                        title={title}\n                        date={date}\n                        label={label}\n                        link={link}\n                        size={headerSize}\n                        taxonomy={taxonomy}\n                        setAttributes={dataHandler}\n                        altHeaderWeight={enableAltHeaderWeight}\n                    />\n\n                    <DefaultSlot />\n\n                    {true !== enableExcerptBelow && (\n                        <Description\n                            enabled={enableExcerpt}\n                            content={excerpt}\n                            sansSerif={!enableMeta || !enableHeader}\n                            setAttributes={dataHandler}\n                        />\n                    )}\n\n                    <Extra\n                        enabled={enableExtra}\n                        content={extra}\n                        breakingNews={enableBreakingNews}\n                        setAttributes={dataHandler}\n                    />\n                </Item.Content>\n\n                <BottomAndRightSlot />\n\n                {true === enableExcerptBelow && (\n                    <Description\n                        enabled={enableExcerpt}\n                        content={excerpt}\n                        sansSerif={!enableHeader}\n                        setAttributes={dataHandler}\n                    />\n                )}\n            </Item>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","// eslint-disable-next-line import/no-unresolved\nimport { Fragment } from '@wordpress/element';\n\n/** Returns a server side block callback */\nconst save = ({ attributes }) => {\n    const props = attributes;\n    return <Fragment></Fragment>;\n};\n\nexport default save;\n","import { createBlock } from '@wordpress/blocks';\n\n/**\n * Match pewresearch.org post links (not staff links) and insert story items with only the url and base image options selected, this will then let the story item fetch the details (but shouldnt we actually do that as part of the transform?)\n */\nconst transforms = {\n    from: [\n        {\n            type: 'raw',\n            isMatch: node =>\n                'P' === node.nodeName &&\n                /^https?:\\/\\/(www\\.)?pewresearch\\.(org|local)\\/((?!staff).)*$/i.test(\n                    node.textContent,\n                ),\n            transform: node => {\n                return createBlock('prc-block/story-item', {\n                    link: node.textContent.trim(),\n                    className: 'is-style-default',\n                    imageSize: 'A1',\n                    imageSlot: 'default',\n                });\n            },\n        },\n    ],\n    to: [\n        {\n            type: 'block',\n            blocks: ['prc-block/story-item'],\n            transform: ({ url }) => {\n                return createBlock('prc-block/story-item', {\n                    link: url,\n                    className: 'is-style-default',\n                    imageSize: 'A1',\n                    imageSlot: 'default',\n                });\n            },\n        },\n    ],\n};\n\nexport default transforms;\n","/** External dependencies */\nimport { test } from '@pewresearch/app-components';\n\n/**\n * WordPress dependencies\n */\nimport * as moment from 'moment';\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\nimport transforms from './transforms';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Story Item'),\n    icon: 'format-aside',\n    description: __(\n        'A story item is a visual display of a post, usually referencing a stub post.',\n    ),\n    keywords: [__('prc'), __('story'), __('post'), __('story item')],\n    example: {\n        attributes: {\n            title: 'Ultricies Ipsum Nibh Egestas Purus',\n            excerpt:\n                '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id elit non mi porta gravida at eget metus. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>',\n            extra: '<li></li>',\n            link: '#',\n            label: 'Report',\n            date: moment().format('MM-DD-YYYY'),\n            image:\n                'https://www.pewresearch.org/global/wp-content/uploads/sites/2/2020/04/PG_2020.04.21_U.S.-Views-China_featured.jpg',\n            imageSlot: 'top',\n            imageSize: 'A2',\n        },\n    },\n    variations: [\n        {\n            name: 'story-item-default',\n            isDefault: true,\n            title: __('Story Item'),\n            description: __('The default story item'),\n            attributes: {\n                imageSlot: 'default',\n                imageSize: 'A1',\n            },\n        },\n        {\n            name: 'story-item-pub-listing',\n            title: __('Pub Listing Story Item'),\n            attributes: {\n                className: 'is-style-left',\n                imageSlot: 'left',\n                imageSize: 'A3',\n            },\n        },\n    ],\n    transforms,\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","module.exports = moment;","module.exports = wp.apiFetch;","module.exports = wp.data;","module.exports = wp.blocks;","module.exports = ReactDOM;","module.exports = wp.i18n;","module.exports = wp.url;","/**\n * External dependencies\n */\nimport { Picture } from 'react-responsive-picture';\n\n/** \n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { addQueryArgs } from '@wordpress/url';\n\nconst A1 = {\n    default: '564,317',\n    small: '690,388',\n    hidpi: '1128,634',\n    smallHidpi: '1380,776',\n};\n\nconst A2 = {\n    default: '268,151',\n    small: '690,388',\n    hidpi: '536,301',\n    smallHidpi: '1380,776',\n};\n\nconst A3 = {\n    default: '194,110',\n    small: '148,84',\n    hidpi: '388,220',\n    smallHidpi: '296,168',\n};\n\nconst A4 = {\n    default: '268,151',\n    small: '690,388',\n    hidpi: '536,302',\n    smallHidpi: '1380,776',\n};\n\nconst XL = {\n    default: '720,405',\n    small: '690,388',\n    hidpi: '1440,810',\n    smallHidpi: '1380,776',\n};\n\nconst legacy = {\n    '260': {\n        default: '260,260',\n        small: '260,260',\n        hidpi: '520,520',\n        smallHidpi: '520,520',\n    },\n    '260-173': {\n        default: '260,173',\n        small: '260,173',\n        hidpi: '520,346',\n        smallHidpi: '520,346',\n    },\n};\n\nconst ImageDisplay = ({ img, size, link, onClick = false, placeholder = false }) => {\n    // eslint-disable-next-line no-shadow\n    const getImgURL = variant => {\n        if (true === placeholder) {\n            let dimensions = '';\n            if ('A2' === size) {\n                dimensions = '536x301';\n            } else if ('A3' === size) {\n                dimensions = '388x220';\n            } else if ('A4' === size) {\n                dimensions = '536x302';\n            } else if ('XL' === size) {\n                dimensions = '1440x810';\n            } else if ('legacy-260' === size) {\n                // Default to A1\n                dimensions = '260x260';\n            } else if ('legacy-260-173' === size) {\n                // Default to A1\n                dimensions = '260x173';\n            } else {\n                // Default to A1\n                dimensions = '1128x634';\n            }\n            return `https://via.placeholder.com/${dimensions}.png?text=${size}`;\n        }\n\n        if ('' === img || false === img) {\n            return img;\n        }\n\n        // Default to A1\n        let args = { resize: A1[variant] };\n        if ('A2' === size) {\n            args = { resize: A2[variant] };\n        } else if ('A3' === size) {\n            args = { resize: A3[variant] };\n        } else if ('A4' === size) {\n            args = { resize: A4[variant] };\n        } else if ('XL' === size) {\n            args = { resize: XL[variant] };\n        }\n\n        // Temp legacy sizes for homepages\n        if ('legacy-260' === size) {\n            args = { resize: legacy['260'][variant] };\n        } else if ('legacy-260-173' === size) {\n            args = { resize: legacy['260-173'][variant] };\n        }\n\n        return addQueryArgs(img, args);\n    };\n\n    // eslint-disable-next-line no-shadow\n    const getImgSrcSet = (threshold = 767) => {\n        return [\n            {\n                srcSet: `${getImgURL('default')} 1x, ${getImgURL('hidpi')} 2x`,\n                media: `(min-width: ${threshold}px)`,\n            },\n            {\n                srcSet: `${getImgURL('small')} 1x, ${getImgURL(\n                    'smallHidpi',\n                )} 2x`,\n                media: `(max-width: ${threshold}px)`,\n            },\n        ];\n    };\n\n    if (false !== onClick) {\n        return (\n            <div onClick={onClick}>\n                {true === placeholder && (\n                    <img src={getImgURL()} alt=\"Click to insert\" />\n                )}\n                {true !== placeholder && (\n                    <Picture sources={getImgSrcSet()} alt=\"Click to edit\" />\n                )}\n            </div>\n        );\n    }\n\n    return (\n        <Fragment>\n            {'' === link && <Picture sources={getImgSrcSet()} />}\n            {'' !== link && (\n                <a href={link}>\n                    <Picture sources={getImgSrcSet()} />\n                </a>\n            )}\n        </Fragment>\n    );\n};\n\nexport default ImageDisplay;","/**\n * External dependencies\n */\nimport classNames from 'classnames/bind';\n\n/**\n * Internal dependencies\n */\nimport { ImageDisplay } from './shared';\n\nconst Image = ({ img, link, size, slot, chartArt }) => {\n    const classes = () => {\n        let isXL = false;\n        let isA1 = false;\n        let isA2 = false;\n        let isA3 = false;\n        let isA4 = false;\n        if (false !== slot) {\n            if ('XL' === size) {\n                isXL = true;\n            } else if ('A1' === size) {\n                isA1 = true;\n            } else if ('A2' === size) {\n                isA2 = true;\n            } else if ('A3' === size) {\n                isA3 = true;\n            } else if ('A4' === size) {\n                isA4 = true;\n            }\n        }\n\n        return classNames({\n            ui: true,\n            XL: isXL,\n            A1: isA1,\n            A2: isA2,\n            A3: isA3,\n            A4: isA4,\n            image: true,\n            bordered: chartArt,\n        });\n    };\n\n    return (\n        <div className={classes()}>\n            <ImageDisplay img={img} size={size} link={link} />\n        </div>\n    );\n};\n\nexport default Image;\n","/**\n * External dependencies\n */\nimport classNames from 'classnames/bind';\n/**\n * WordPress dependencies\n */\nimport { Fragment, RawHTML } from '@wordpress/element';\n\nconst Description = ({ content, sansSerif, enabled }) => {\n    if (true !== enabled) {\n        return <Fragment />;\n    }\n\n    const classes = classNames('description', { 'sans-serif': sansSerif });\n    return (\n        <div className={classes}>\n            <RawHTML>{content}</RawHTML>\n        </div>\n    );\n};\n\nexport default Description;\n","/**\n * External dependencies\n */\nimport { Item } from 'semantic-ui-react';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, RawHTML } from '@wordpress/element';\n\n\nconst Extra = ({ content, breakingNews, enabled }) => {\n    return (\n        <Fragment>\n            {true === enabled && (\n                <Item.Extra as=\"ul\">\n                    <RawHTML>{content}</RawHTML>\n                </Item.Extra>\n            )}\n            {true === breakingNews && false !== window.prcBreakingNews && (\n                <ul className=\"extra-breaking-news\">\n                    <li>\n                        <a\n                            href={window.prcBreakingNews.url}\n                            className=\"kicker-breaking-news\"\n                        >\n                            {window.prcBreakingNews.label}\n                        </a>\n                    </li>\n                </ul>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Extra;\n","/**\n * External dependencies\n */\nimport classNames from 'classnames/bind';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport moment from 'moment';\n\nconst Kicker = ({ label = 'Report', date }) => {\n    const formatDate = (dateString) => {\n        return moment(dateString).format('MMM D, YYYY');\n    };\n\n    const labelSlug =\n        null !== label ? label.replace(/\\s+/g, '-').toLowerCase() : 'report';\n\n    const classes = classNames(labelSlug, 'label');\n\n    const d = formatDate(date);\n\n    return (\n        <Fragment>\n            <span className={classes}>{label || 'Report'}</span>\n            {' | '}\n            <span className=\"date\">{d}</span>\n        </Fragment>\n    );\n};\n\nexport default Kicker;\n","/**\n * External dependencies\n */\nimport { Item } from 'semantic-ui-react';\nimport classNames from 'classnames/bind';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, RawHTML } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Image from './image';\nimport Kicker from './kicker';\n\nconst Header = ({\n    title,\n    label,\n    date,\n    link,\n    size,\n    enabled,\n    isStyleMobileLoop,\n    image,\n    imageSize,\n    isChartArt,\n    altHeaderWeight,\n}) => {\n    const { enableHeader, enableMeta } = enabled;\n    if (true !== enableHeader) {\n        return <Fragment />;\n    }\n    const classes = classNames({\n        large: 1 === parseInt(size, 0),\n        medium: 2 === parseInt(size, 0),\n        small: 3 === parseInt(size, 0),\n        light: altHeaderWeight,\n        'sans-serif': !enableMeta,\n    });\n\n    return (\n        <Fragment>\n            {true === enableMeta && (\n                <Item.Meta>\n                    <Kicker label={label} date={date} />\n                </Item.Meta>\n            )}\n            <Item.Header className={classes}>\n                {true === isStyleMobileLoop && (\n                    <Image\n                        img={image}\n                        size={imageSize}\n                        link={link}\n                        slot=\"left\"\n                        chartArt={isChartArt}\n                    />\n                )}\n                <a href={link}>\n                    <RawHTML>{title}</RawHTML>\n                </a>\n            </Item.Header>\n        </Fragment>\n    );\n};\n\nexport default Header;\n","/**\n * External dependencies\n */\nimport classNames from 'classnames/bind';\nimport { Item } from 'semantic-ui-react';\nimport { useMediaQuery } from 'beautiful-react-hooks';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment, RawHTML } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Image from './image';\nimport Description from './description';\nimport Extra from './extra';\nimport Header from './header';\nimport { ImageDisplay } from './shared';\n\nconst StoryItem = ({\n    title,\n    excerpt,\n    extra,\n    link,\n    label,\n    date,\n    image,\n    imageSlot,\n    imageSize,\n    isChartArt,\n    headerSize,\n    enableEmphasis,\n    enableHeader,\n    enableMeta,\n    enableExcerpt,\n    enableExcerptBelow,\n    enableExtra,\n    enableBreakingNews,\n    extraContent = false,\n    className,\n    inLoop = false,\n}) => {\n    const isSmall = useMediaQuery('(max-width: 990px)');\n\n    let enableAltHeaderWeight = false;\n    if (false === enableExcerpt) {\n        enableAltHeaderWeight = true;\n    }\n\n    let isStacked = true;\n    if ('left' === imageSlot || 'right' === imageSlot) {\n        isStacked = false;\n    }\n\n    let isStyleMobileLoop = false;\n    if (true === inLoop && true === isSmall) {\n        isStyleMobileLoop = true;\n    }\n    // On mobile, outside the loop, force image alignment top.\n    if (false === inLoop && true === isSmall && 'disabled' !== imageSlot) {\n        imageSlot = 'top';\n        imageSize = 'A2';\n    }\n\n    if (isStyleMobileLoop) {\n        imageSlot = 'left';\n        imageSize = 'A3';\n    }\n\n    const classes = classNames(className, 'story', {\n        stacked: isStacked,\n        bordered: enableEmphasis,\n        'alt-description': enableExcerptBelow,\n        'is-style-mobile-loop': isStyleMobileLoop,\n    });\n\n    const Img = () => {\n        return (\n            <Image\n                img={image}\n                size={imageSize}\n                link={link}\n                slot={imageSlot}\n                chartArt={isChartArt}\n                onClick={() => {\n                    window.location = link;\n                }}\n            />\n        );\n    };\n\n    const TopAndLeftSlot = () => {\n        if ('top' !== imageSlot && 'left' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        if (true === inLoop && true === isSmall) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const DefaultSlot = () => {\n        if ('default' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        if (true === inLoop && true === isSmall) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    const BottomAndRightSlot = () => {\n        if ('bottom' !== imageSlot && 'right' !== imageSlot) {\n            return <Fragment />;\n        }\n\n        if (true === inLoop && true === isSmall) {\n            return <Fragment />;\n        }\n\n        return <Img />;\n    };\n\n    return (\n        <Item as=\"article\" className={classes}>\n            <TopAndLeftSlot />\n\n            <Item.Content>\n                <Header\n                    enabled={{ enableHeader, enableMeta }}\n                    title={title}\n                    date={date}\n                    label={label}\n                    link={link}\n                    size={headerSize}\n                    isStyleMobileLoop={isStyleMobileLoop}\n                    image={image}\n                    imageSize={imageSize}\n                    chartArt={isChartArt}\n                    altHeaderWeight={enableAltHeaderWeight}\n                />\n\n                <DefaultSlot />\n\n                {true !== enableExcerptBelow && (\n                    <Description\n                        enabled={enableExcerpt}\n                        content={excerpt}\n                        sansSerif={!enableHeader || !enableMeta}\n                    />\n                )}\n\n                {true === enableExcerptBelow && true === isSmall && (\n                    <Description\n                        enabled={enableExcerpt}\n                        content={excerpt}\n                        sansSerif={!enableHeader}\n                    />\n                )}\n\n                <Extra\n                    enabled={enableExtra}\n                    content={extra}\n                    breakingNews={enableBreakingNews}\n                />\n\n                {false !== extraContent && <RawHTML>{extraContent}</RawHTML>}\n            </Item.Content>\n\n            <BottomAndRightSlot />\n\n            {true === enableExcerptBelow && false === isSmall && (\n                <Description\n                    enabled={enableExcerpt}\n                    content={excerpt}\n                    sansSerif={!enableHeader}\n                />\n            )}\n        </Item>\n    );\n};\n\nexport { StoryItem, ImageDisplay };\n\nexport default StoryItem;\n"],"sourceRoot":""}