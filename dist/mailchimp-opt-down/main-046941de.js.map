{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-opt-down/component.js","webpack:///./src/mailchimp-opt-down/edit.js","webpack:///./src/mailchimp-opt-down/save.js","webpack:///./src/mailchimp-opt-down/settings.js","webpack:///./src/mailchimp-opt-down/index.js","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\""],"names":["module","exports","React","wp","blocks","element","window","prcMailchimpForm","interests","MailchimpOptDown","props","submitHandler","bind","e","Form","Input","label","placeholder","name","map","d","i","Checkbox","inline","value","checked","hidden","Button","Component","edit","save","settings","title","__","icon","category","keywords","supports","html","attributes","interest","type","default","registerBlockType","i18n","ReactDOM"],"mappings":";;;;;;;;;;;;;;;;;mJAAAA,EAAOC,QAAUC,O,kBCAjBF,EAAOC,QAAUE,GAAGC,Q,kBCApBJ,EAAOC,QAAUE,GAAGE,S,6nBCIEC,OAAOC,iBAArBC,U,IAmCOC,E,wCAhCb,WAAYC,GAAQ,IAAD,8BACjB,cAAOA,IACFC,cAAgB,EAAKA,cAAcC,KAAnB,gBAFJ,E,0DAKLC,M,+BAMZ,OACE,oBAACC,EAAA,EAAD,KACE,oBAACA,EAAA,EAAKC,MAAN,CAAYC,MAAM,QAAQC,YAAY,iBAAiBC,KAAK,UACxDZ,OAAOC,iBAAiBC,UAAUW,KAAK,SAACC,EAAEC,GAAH,OACvC,oBAACP,EAAA,EAAKQ,SAAN,CACEC,QAAM,EACNL,KAAK,WACLF,MAAOI,EAAEJ,MACTQ,MAAOJ,EAAEI,MACTC,QAAsB,qBAAZL,EAAEJ,MACZU,OAAqB,qBAAZN,EAAEJ,WAGjB,oBAACW,EAAA,EAAD,gC,GAzBuBC,aCIhBC,EAPF,SAAAnB,GACX,OACE,oBAAC,EAAD,OCKWoB,EAPF,SAAApB,GACX,OACE,oBAAC,EAAD,OC2BWqB,EA5BE,CACb,+BACA,CAEIC,MAAOC,aAAG,2BACVC,KAAM,WACNC,SAAU,UACVC,SAAU,CACNH,aAAG,OACHA,aAAG,aACHA,aAAG,cACHA,aAAG,sBAEPI,SAAU,CACNC,MAAM,GAGVC,WAAY,CACRC,SAAU,CACNC,KAAM,SACNC,QAAS,KAGjBb,OACAC,SCzBRa,oBAAiB,WAAjB,cAAqBZ,K,iBCHrB/B,EAAOC,QAAUE,GAAGyC,M,iBCApB5C,EAAOC,QAAU4C,W","file":"mailchimp-opt-down/main-046941de.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","module.exports = wp.element;","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button } from 'semantic-ui-react';\n\nconst { interests } = window.prcMailchimpForm;\n\nclass MailchimpOptDown extends Component {\n  constructor(props) {\n    super( props );\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  submitHandler(e) {\n\n  }\n\n  render() {\n    //console.log(interests);\n    return (\n      <Form>\n        <Form.Input label=\"Email\" placeholder='joe@schmoe.com' name=\"email\"/>\n          { window.prcMailchimpForm.interests.map( (d,i) =>\n            <Form.Checkbox\n              inline\n              name=\"interest\"\n              label={d.label}\n              value={d.value}\n              checked={ d.label === \"Quarterly Update\" }\n              hidden={ d.label !== \"Quarterly Update\" }\n            />\n          )}\n        <Button>Update preferences</Button>\n      </Form>\n    );\n  }\n\n\n}\n\nexport default MailchimpOptDown;\n","import MailchimpOptDown from './component';\n\n\nconst edit = props => {\n  return (\n    <MailchimpOptDown />\n  );\n};\n\n\nexport default edit;\n","import MailchimpOptDown from './component';\n\n\nconst save = props => {\n  return (\n    <MailchimpOptDown />\n  );\n};\n\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/mailchimp-opt-down',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Mailchimp Opt-down Form'), // Block title.\n        icon: 'feedback', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [\n            __('prc'),\n            __('mailchimp'),\n            __('newsletter'),\n            __('newsletter signup'),\n        ],\n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            interest: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","module.exports = wp.i18n;","module.exports = ReactDOM;"],"sourceRoot":""}