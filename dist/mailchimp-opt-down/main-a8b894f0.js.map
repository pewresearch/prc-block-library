{"version":3,"sources":["webpack:///external \"React\"","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/mailchimp-opt-down/edit.js","webpack:///./src/mailchimp-opt-down/save.js","webpack:///./src/mailchimp-opt-down/settings.js","webpack:///./src/mailchimp-opt-down/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./src/mailchimp-opt-down/component.js","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///external \"lodash\""],"names":["module","exports","React","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","wp","blocks","element","arr","edit","props","_props","interests","window","prcMailchimpForm","save","settings","title","__","description","icon","category","keywords","supports","html","attributes","interest","type","default","registerBlockType","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","MailchimpOptDown","withState","error","loading","list_id","choice","dimmerActive","dimmerMessage","emailAddress","setState","console","log","JSON","stringify","style","fontFamily","color","hidden","length","className","Input","label","placeholder","data-validate","required","value","onChange","e","target","map","d","i","Checkbox","inline","readonly","defaultChecked","disabled","onClick","preventDefault","email","validate_email","updated_interests","jQuery","each","extend","this","val","is","setTimeout","ajax","url","siteURL","param","fail","responseJSON","data","status","done","info","i18n","ReactDOM","_arrayLikeToArray","len","arr2","lodash"],"mappings":"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","file":"mailchimp-opt-down/main-a8b894f0.js","sourcesContent":["module.exports = React;","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = wp.blocks;","module.exports = wp.element;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import MailchimpOptDown from './component';\n\n\nconst edit = props => {\n\n  const _props = {\n\n      interests: window.prcMailchimpForm.interests,\n  };\n\n  return (\n    <MailchimpOptDown {..._props} />\n  );\n};\n\n\nexport default edit;\n","import MailchimpOptDown from './component';\n\n\nconst save = props => {\n  const _props = {\n\n      interests: window.prcMailchimpForm.interests,\n  };\n\n  return (\n    <MailchimpOptDown {..._props} />\n  );\n};\n\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/mailchimp-opt-down',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Mailchimp Opt-down Form'), // Block title.\n        description: __('Unsubscribe email address from all newsletter products EXCEPT the Quarterly Update'),\n        icon: 'feedback', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [\n            __('prc'),\n            __('mailchimp'),\n            __('newsletter'),\n            __('newsletter signup'),\n        ],  \n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            interest: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button, Message } from 'semantic-ui-react';\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    list_id: 'a33430a835', // Mailchimp ID for Quarterly Update newsletter\n    choice: true,\n    dimmerActive: false,\n    dimmerMessage: '',\n};\n\nconst MailchimpOptDown = withState(defaultState)(({\n        list_id,\n        interests,\n        error,\n        loading,\n        choice,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n        const validate_email = e => {\n          return /^.+@.+\\..+$/.test(e);\n        };\n\n        const submitHandler = e => {\n          e.preventDefault();\n          const email = emailAddress;\n          if (!validate_email(email)) {\n            console.log('email error');\n            setState({\n              dimmerMessage: 'Please enter a valid email address.' ,\n              error: true\n            });\n\n            return;\n          }\n          let updated_interests = {};\n\n          jQuery.each(jQuery(\"input[name='interests']\"), function(){\n              jQuery.extend(updated_interests, {[jQuery(this).val()] : jQuery(this).is(\":checked\") ? true : false });\n          });\n\n          setTimeout(() => {\n              jQuery\n                  .ajax({\n                      url: `${\n                          window.siteURL\n                      }/wp-json/prc-api/v2/mailchimp/update?${jQuery.param(\n                          {\n                              email,\n                              interests: updated_interests,\n                          })}`,\n                      type: 'POST',\n                  })\n                  .fail( e => {\n                    console.log(e);\n                    if (e.responseJSON.data.status == '404') {\n                      setState({\n                          dimmerMessage:\n                              'We could not find that email address in our records.',\n                          error: true\n                      });\n                    }\n                  })\n                  .done(() => {\n                      console.info('Succesfully subscribed');\n                      setState({\n                          dimmerMessage:\n                              'You have succesfully updated your preferences.',\n                          error: false\n                      });\n                  })\n          });\n\n        };\n\n\n        console.log(JSON.stringify(interests));\n        console.log(emailAddress);\n\n        return (\n          <>\n            <Message\n              style={{fontFamily: 'franklin-gothic-urw'}}\n              color={ error ? 'red' : 'green'}\n              hidden={dimmerMessage.length > 0 ? false : true }>\n              {dimmerMessage}\n            </Message>\n            <Form className=\"mailchimp-opt-down\">\n              <Form.Input\n                label=\"Email\"\n                placeholder=\"Your email address\"\n                name=\"email\"\n                data-validate=\"mc-email\"\n                required\n                value={emailAddress}\n                onChange={ e => { setState({emailAddress: e.target.value}) } }\n                />\n                { interests.map( (d,i) =>\n                  <Form.Checkbox\n                    inline\n                    name=\"interests\"\n                    label={d.value === list_id ? `Send me quarterly updates and unsubscribe from all other newsletters.` : d.label }\n                    value={d.value}\n                    readonly={d.value !== list_id ? true : false }\n                    defaultChecked={d.value === list_id ? true : false }\n                    style={{ 'display' : d.value !== list_id ? `none` : `inherit` }}\n                    onChange={ e => { setState({choice: !choice }) } }\n                  />\n                )}\n              <Button disabled={ !choice } onClick={submitHandler}>Update preferences</Button>\n            </Form>\n          </>\n        );\n    },\n);\n\nexport default MailchimpOptDown;\n","module.exports = wp.i18n;","module.exports = ReactDOM;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","module.exports = lodash;"],"sourceRoot":""}