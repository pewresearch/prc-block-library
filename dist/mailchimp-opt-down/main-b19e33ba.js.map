{"version":3,"sources":["webpack:///external \"React\"","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/mailchimp-opt-down/edit.js","webpack:///./src/mailchimp-opt-down/save.js","webpack:///./src/mailchimp-opt-down/settings.js","webpack:///./src/mailchimp-opt-down/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./src/mailchimp-opt-down/component.js","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///external \"lodash\""],"names":["module","exports","React","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","wp","blocks","element","arr","edit","props","_props","interests","window","prcMailchimpForm","save","settings","title","__","description","icon","category","keywords","supports","html","attributes","interest","type","default","registerBlockType","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","MailchimpOptDown","withState","error","loading","list_id","choice","dimmerActive","dimmerMessage","emailAddress","setState","console","log","JSON","stringify","className","Input","label","placeholder","value","onChange","e","target","map","d","i","Checkbox","inline","readonly","defaultChecked","style","preventDefault","i18n","ReactDOM","_arrayLikeToArray","len","length","arr2","lodash"],"mappings":";;;;;;;;;;;;;;;;;mJAAAA,EAAOC,QAAUC,O,iCCAjB,8CACe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKX,GACxC,cAANE,GAAqB,2CAA2CU,KAAKV,GAAW,YAAiBF,EAAGC,QAAxG,K,kBCPFL,EAAOC,QAAUgB,GAAGC,Q,8DCApBlB,EAAOC,QAAUgB,GAAGE,S,qECIuBC,E,yBCY5BC,EAbF,SAAAC,GAEX,IAAMC,EAAS,CAEXC,UAAWC,OAAOC,iBAAiBF,WAGvC,OACE,oBAAC,IAAqBD,ICIXI,EAZF,SAAAL,GACX,IAAMC,EAAS,CAEXC,UAAWC,OAAOC,iBAAiBF,WAGvC,OACE,oBAAC,IAAqBD,ICuBXK,EA7BE,CACb,+BACA,CAEIC,MAAOC,aAAG,2BACVC,YAAaD,aAAG,sFAChBE,KAAM,WACNC,SAAU,UACVC,SAAU,CACNJ,aAAG,OACHA,aAAG,aACHA,aAAG,cACHA,aAAG,sBAEPK,SAAU,CACNC,MAAM,GAGVC,WAAY,CACRC,SAAU,CACNC,KAAM,SACNC,QAAS,KAGjBnB,OACAM,SC1BRc,oBAAiB,WAAjB,ECFe,SAA4BrB,GACzC,GAAIN,MAAM4B,QAAQtB,GAAM,OAAO,OAAAuB,EAAA,GAAiBvB,GLGzC,CADkCA,EIDtBQ,IEHN,SAA0BgB,GACvC,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYvC,OAAOqC,GAAO,OAAO9B,MAAMC,KAAK6B,GNIvD,CAAgBxB,IAAQ,OAAA2B,EAAA,GAA2B3B,IOLvE,WACb,MAAM,IAAI4B,UAAU,wIPIwE,K,gCQL9F,oCAaMC,EAAmBC,YATJ,CACjBC,OAAO,EACPC,SAAS,EACTC,QAAS,aACTC,QAAQ,EACRC,cAAc,EACdC,cAAe,wBAGMN,EAAwB,YAWtC,IATHG,EASE,EATFA,QACA7B,EAQE,EARFA,UAGA8B,GAKE,EAPFH,MAOE,EANFC,QAME,EALFE,QACAG,EAIE,EAJFA,aAGAC,GACE,EAHFH,aAGE,EAFFC,cAEE,EADFE,UAWA,OAHAC,QAAQC,IAAIC,KAAKC,UAAUtC,IAC3BmC,QAAQC,IAAIH,GAGV,oBAAC,IAAD,CAAMM,UAAU,sBACd,oBAAC,IAAKC,MAAN,CACEC,MAAM,QACNC,YAAY,GACZrD,KAAK,QACLsD,MAAOV,EACPW,SAAW,SAAAC,GAAOX,EAAS,CAACD,aAAcY,EAAEC,OAAOH,WAEnD,wCAAYb,EAAM,gBAChB9B,EAAU+C,KAAK,SAACC,EAAEC,GAAH,OACf,oBAAC,IAAKC,SAAN,CACEC,QAAM,EACN9D,KAAK,YACLoD,MAAOO,EAAEL,QAAUd,EAAZ,wEAAgGmB,EAAEP,MACzGE,MAAOK,EAAEL,MACTS,SAAUJ,EAAEL,QAAUd,EACtBwB,eAAgBL,EAAEL,QAAUd,EAC5ByB,MAAO,CAAE,QAAYN,EAAEL,QAAUd,EAAZ,kBACrBe,SAAW,SAAAC,GACLA,EAAEU,iBACFrB,EAAS,CAACJ,QAASA,UAK/B,oBAAC,IAAD,+BAQGL,O,iBCpEfjD,EAAOC,QAAUgB,GAAG+D,M,iBCApBhF,EAAOC,QAAUgF,U,gCCAF,SAASC,EAAkB9D,EAAK+D,IAClC,MAAPA,GAAeA,EAAM/D,EAAIgE,UAAQD,EAAM/D,EAAIgE,QAE/C,IAAK,IAAIX,EAAI,EAAGY,EAAO,IAAIvE,MAAMqE,GAAMV,EAAIU,EAAKV,IAC9CY,EAAKZ,GAAKrD,EAAIqD,GAGhB,OAAOY,EAPT,mC,iBCAArF,EAAOC,QAAUqF,S","file":"mailchimp-opt-down/main-b19e33ba.js","sourcesContent":["module.exports = React;","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = wp.blocks;","module.exports = wp.element;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import MailchimpOptDown from './component';\n\n\nconst edit = props => {\n\n  const _props = {\n\n      interests: window.prcMailchimpForm.interests,\n  };\n\n  return (\n    <MailchimpOptDown {..._props} />\n  );\n};\n\n\nexport default edit;\n","import MailchimpOptDown from './component';\n\n\nconst save = props => {\n  const _props = {\n\n      interests: window.prcMailchimpForm.interests,\n  };\n\n  return (\n    <MailchimpOptDown {..._props} />\n  );\n};\n\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/mailchimp-opt-down',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Mailchimp Opt-down Form'), // Block title.\n        description: __('Unsubscribe email address from all newsletter products EXCEPT the Quarterly Update'),\n        icon: 'feedback', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [\n            __('prc'),\n            __('mailchimp'),\n            __('newsletter'),\n            __('newsletter signup'),\n        ],\n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            interest: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button } from 'semantic-ui-react';\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    list_id: '999f8eb858',\n    choice: true, // Mailchimp ID for Quarterly Update newsletter\n    dimmerActive: false,\n    dimmerMessage: 'BLANK DIMMER MESSAGE',\n};\n\nconst MailchimpOptDown = withState(defaultState)(({\n        //display,\n        list_id,\n        interests,\n        error,\n        loading,\n        choice,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n        const submitHandler = e => {\n          e.preventDefault();\n        };\n\n\n        console.log(JSON.stringify(interests));\n        console.log(emailAddress);\n\n        return (\n          <Form className=\"mailchimp-opt-down\">\n            <Form.Input\n              label=\"Email\"\n              placeholder=\"\"\n              name=\"email\"\n              value={emailAddress}\n              onChange={ e => { setState({emailAddress: e.target.value})}}\n              />\n              <p>choice: {choice ? `true` : `false`}</p>\n              { interests.map( (d,i) =>\n                <Form.Checkbox\n                  inline\n                  name=\"interests\"\n                  label={d.value === list_id ? `Send me quarterly updates and unsubscribe from all other newsletters.` : d.label }\n                  value={d.value}\n                  readonly={d.value !== list_id ? true : false }\n                  defaultChecked={d.value === list_id ? true : false }\n                  style={{ 'display' : d.value !== list_id ? `none` : `inherit` }}\n                  onChange={ e => {\n                        e.preventDefault();\n                        setState({choice: !choice });\n                      }\n                    }\n                />\n              )}\n            <Button>Update preferences</Button>\n          </Form>\n        );\n\n    },\n\n);\n\nexport default MailchimpOptDown;\n","module.exports = wp.i18n;","module.exports = ReactDOM;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","module.exports = lodash;"],"sourceRoot":""}