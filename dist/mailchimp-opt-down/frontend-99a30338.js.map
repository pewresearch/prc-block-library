{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-opt-down/frontend.js","webpack:///./src/mailchimp-opt-down/component.js","webpack:///external \"ReactDOM\"","webpack:///external \"lodash\""],"names":["module","exports","React","wp","element","document","addEventListener","querySelector","querySelectorAll","elm","render","query","URLSearchParams","window","location","search","defaultState","error","loading","choice","emailAddress","get","dimmerActive","dimmerMessage","MailchimpOptDown","withState","setState","console","log","className","Input","label","placeholder","name","value","onChange","e","target","prcMailchimpBlock","interests","map","d","i","Checkbox","inline","checked","style","ReactDOM","lodash"],"mappings":";;;;;;;;;;;;;;;;;mJAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,S,0kCCIpBC,SAASC,iBAAiB,oBAAoB,WAC1C,GAAID,SAASE,cAAc,uBAAwB,CAC/C,IAD+C,MAClCF,SAASG,iBAAiB,wBADQ,IAG/C,2BAAwB,CAAC,IAAdC,EAAa,QAKpBC,iBAAO,oBAAC,IAAD,MAAoCD,IARA,oC,gCCLvD,oCAIME,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAE5CC,EAAe,CACjBC,OAAO,EACPC,SAAS,EACTC,OAAQ,aACRC,kBAA4C,IAAvBT,EAAMU,IAAI,SAA2BV,EAAMU,IAAI,SAAtD,GAEdC,cAAc,EACdC,cAAe,wBAIbC,EAAmBC,YAAUT,EAAVS,EAAwB,YAUvC,EAPFR,MAOE,EANFC,QAMG,IALHC,EAKE,EALFA,OACAC,EAIE,EAJFA,aAGAM,GACE,EAHFJ,aAGE,EAFFC,cAEE,EADFG,UAcF,OAFAC,QAAQC,IAAIR,GAGV,oBAAC,IAAD,CAAMS,UAAU,sBACd,oBAAC,IAAKC,MAAN,CACEC,MAAM,QACNC,YAAY,GACZC,KAAK,QACLC,MAAOd,EACPe,SAAU,SAAAC,GAAOV,EAAS,CAACN,aAAcgB,EAAEC,OAAOH,WAEhDrB,OAAOyB,kBAAkBC,UAAUC,KAAK,SAACC,EAAEC,GAAH,OACxC,oBAAC,IAAKC,SAAN,CACEC,QAAM,EACNX,KAAK,YACLF,MAAOU,EAAEV,MACTG,MAAOO,EAAEP,MACTW,QAAUJ,EAAEP,QAAUf,EACtB2B,MAAO,CAAE,QAAYL,EAAEP,QAAUf,EAAZ,uBAG3B,oBAAC,IAAD,+BAuDKK,O,iBClHfxB,EAAOC,QAAU8C,U,iBCAjB/C,EAAOC,QAAU+C,S","file":"mailchimp-opt-down/frontend-99a30338.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","import { render } from '@wordpress/element';\nimport MailchimpOptDown from './component';\n\n// When the document is fully loaded load the mailchimp-form\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (document.querySelector('.mailchimp-opt-down')) {\n        const elms = document.querySelectorAll('.mailchimp-opt-down',);\n        // eslint-disable-next-line no-restricted-syntax\n        for (const elm of elms) {\n            // const props = {\n            //     display: true,\n            //     interest: elm.getAttribute('data-segment-id'),\n            // };\n            render(<MailchimpOptDown/*{...props}*/ />, elm);\n        }\n    }\n});\n","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button } from 'semantic-ui-react';\n\nconst query = new URLSearchParams(window.location.search);\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    choice: '999f8eb858', // Mailchimp ID for Quarterly Update newsletter\n    emailAddress: typeof query.get('email') !== 'undefined' ? query.get('email') : ``,\n    //interests: typeof window.prcMailchimpForm !== 'undefined' ? window.prcMailchimpForm.interests : window.prcMailchimpBlock.interests,\n    dimmerActive: false,\n    dimmerMessage: 'BLANK DIMMER MESSAGE',\n\n};\n\nconst MailchimpOptDown = withState(defaultState)(({\n        //display,\n        //interests,\n        error,\n        loading,\n        choice,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n      const submitHandler = e => {\n        e.preventDefault();\n      };\n\n      const checkboxHandler = e => {\n        e.preventDefault();\n      };\n\n      //console.log(JSON.stringify(interests));\n      console.log(emailAddress);\n\n      return (\n        <Form className=\"mailchimp-opt-down\">\n          <Form.Input\n            label=\"Email\"\n            placeholder=\"\"\n            name=\"email\"\n            value={emailAddress}\n            onChange={e => { setState({emailAddress: e.target.value})}}\n            />\n            { window.prcMailchimpBlock.interests.map( (d,i) =>\n              <Form.Checkbox\n                inline\n                name=\"interests\"\n                label={d.label}\n                value={d.value}\n                checked={ d.value === choice }\n                style={{ 'display' : d.value !== choice ? `none` : `inherit` }}\n              />\n            )}\n          <Button>Update preferences</Button>\n        </Form>\n      );\n    },\n);\n\n\n/*\nclass MailchimpOptDown extends Component {\n  constructor(props) {\n    super( props );\n    this.submitHandler = this.submitHandler.bind(this);\n    this.checkboxHandler = this.checkboxHandler.bind(this);\n    this.choice = '999f8eb858'; // Mailchimp ID for Quarterly Update newsletter\n    const query = new URLSearchParams(window.location.search);\n    this.email = typeof query.get('email') !== 'undefined' ? query.get('email') : ``;\n    this.interests = typeof window.prcMailchimpForm !== 'undefined' ? window.prcMailchimpForm.interests : window.prcMailchimpBlock.interests;\n    this.submitted = false;\n  }\n\n  submitHandler(e) {\n\n  }\n\n  checkboxHandler(e) {\n\n  }\n\n\n\n  render() {\n    return (\n      <Form className=\"mailchimp-opt-down\">\n        <Form.Input label=\"Email\" placeholder=\"\" name=\"email\" value={this.email} />\n          { this.interests.map( (d,i) =>\n            <Form.Checkbox\n              inline\n              name=\"interests\"\n              label={d.label}\n              value={d.value}\n              checked={ d.value === this.choice }\n              style={{ 'display' : d.value !== this.choice ? `none` : `inherit` }}\n            />\n          )}\n        <Button>Update preferences</Button>\n      </Form>\n    );\n  }\n\n\n}\n\nexport default MailchimpOptDown;\n*/\n\nexport default MailchimpOptDown;\n","module.exports = ReactDOM;","module.exports = lodash;"],"sourceRoot":""}