{"version":3,"sources":["webpack:///external \"React\"","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/mailchimp-opt-down/edit.js","webpack:///./src/mailchimp-opt-down/save.js","webpack:///./src/mailchimp-opt-down/settings.js","webpack:///./src/mailchimp-opt-down/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./src/mailchimp-opt-down/component.js","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\"","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///external \"lodash\""],"names":["module","exports","React","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","wp","blocks","element","arr","edit","props","save","settings","title","__","description","icon","category","keywords","supports","html","attributes","interest","type","default","registerBlockType","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","query","URLSearchParams","window","location","search","defaultState","error","loading","choice","emailAddress","get","dimmerActive","dimmerMessage","MailchimpOptDown","withState","setState","console","log","className","Input","label","placeholder","value","onChange","e","target","prcMailchimpBlock","interests","map","d","i","Checkbox","inline","checked","style","i18n","ReactDOM","_arrayLikeToArray","len","length","arr2","lodash"],"mappings":";;;;;;;;;;;;;;;;;mJAAAA,EAAOC,QAAUC,O,iCCAjB,8CACe,SAASC,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBQ,MAAMC,KAAKX,GACxC,cAANE,GAAqB,2CAA2CU,KAAKV,GAAW,YAAiBF,EAAGC,QAAxG,K,kBCPFL,EAAOC,QAAUgB,GAAGC,Q,8DCApBlB,EAAOC,QAAUgB,GAAGE,S,qECIuBC,E,yBCM5BC,EAPF,SAAAC,GACX,OACE,oBAAC,IAAD,OCKWC,EAPF,SAAAD,GACX,OACE,oBAAC,IAAD,OC4BWE,EA7BE,CACb,+BACA,CAEIC,MAAOC,aAAG,2BACVC,YAAaD,aAAG,sFAChBE,KAAM,WACNC,SAAU,UACVC,SAAU,CACNJ,aAAG,OACHA,aAAG,aACHA,aAAG,cACHA,aAAG,sBAEPK,SAAU,CACNC,MAAM,GAGVC,WAAY,CACRC,SAAU,CACNC,KAAM,SACNC,QAAS,KAGjBf,OACAE,SC1BRc,oBAAiB,WAAjB,ECFe,SAA4BjB,GACzC,GAAIN,MAAMwB,QAAQlB,GAAM,OAAO,OAAAmB,EAAA,GAAiBnB,GLGzC,CADkCA,EIDtBI,IEHN,SAA0BgB,GACvC,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYnC,OAAOiC,GAAO,OAAO1B,MAAMC,KAAKyB,GNIvD,CAAgBpB,IAAQ,OAAAuB,EAAA,GAA2BvB,IOLvE,WACb,MAAM,IAAIwB,UAAU,wIPIwE,K,gCQL9F,oCAIMC,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAE5CC,EAAe,CACjBC,OAAO,EACPC,SAAS,EACTC,OAAQ,aACRC,kBAA4C,IAAvBT,EAAMU,IAAI,SAA2BV,EAAMU,IAAI,SAAtD,GAEdC,cAAc,EACdC,cAAe,wBAIbC,EAAmBC,YAAUT,EAAVS,EAAwB,YAUvC,EAPFR,MAOE,EANFC,QAMG,IALHC,EAKE,EALFA,OACAC,EAIE,EAJFA,aAGAM,GACE,EAHFJ,aAGE,EAFFC,cAEE,EADFG,UAcF,OAFAC,QAAQC,IAAIR,GAGV,oBAAC,IAAD,CAAMS,UAAU,sBACd,oBAAC,IAAKC,MAAN,CACEC,MAAM,QACNC,YAAY,GACZrD,KAAK,QACLsD,MAAOb,EACPc,SAAU,SAAAC,GAAOT,EAAS,CAACN,aAAce,EAAEC,OAAOH,WAEhDpB,OAAOwB,kBAAkBC,UAAUC,KAAK,SAACC,EAAEC,GAAH,OACxC,oBAAC,IAAKC,SAAN,CACEC,QAAM,EACNhE,KAAK,YACLoD,MAAOS,EAAET,MACTE,MAAOO,EAAEP,MACTW,QAAUJ,EAAEP,QAAUd,EACtB0B,MAAO,CAAE,QAAYL,EAAEP,QAAUd,EAAZ,uBAG3B,oBAAC,IAAD,+BAuDKK,O,iBClHf1D,EAAOC,QAAUgB,GAAG+D,M,iBCApBhF,EAAOC,QAAUgF,U,gCCAF,SAASC,EAAkB9D,EAAK+D,IAClC,MAAPA,GAAeA,EAAM/D,EAAIgE,UAAQD,EAAM/D,EAAIgE,QAE/C,IAAK,IAAIT,EAAI,EAAGU,EAAO,IAAIvE,MAAMqE,GAAMR,EAAIQ,EAAKR,IAC9CU,EAAKV,GAAKvD,EAAIuD,GAGhB,OAAOU,EAPT,mC,iBCAArF,EAAOC,QAAUqF,S","file":"mailchimp-opt-down/main-919b0353.js","sourcesContent":["module.exports = React;","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = wp.blocks;","module.exports = wp.element;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import MailchimpOptDown from './component';\n\n\nconst edit = props => {\n  return (\n    <MailchimpOptDown />\n  );\n};\n\n\nexport default edit;\n","import MailchimpOptDown from './component';\n\n\nconst save = props => {\n  return (\n    <MailchimpOptDown />\n  );\n};\n\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/mailchimp-opt-down',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Mailchimp Opt-down Form'), // Block title.\n        description: __('Unsubscribe email address from all newsletter products EXCEPT the Quarterly Update'),\n        icon: 'feedback', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [\n            __('prc'),\n            __('mailchimp'),\n            __('newsletter'),\n            __('newsletter signup'),\n        ],\n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            interest: {\n                type: 'string',\n                default: '',\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button } from 'semantic-ui-react';\n\nconst query = new URLSearchParams(window.location.search);\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    choice: '999f8eb858', // Mailchimp ID for Quarterly Update newsletter\n    emailAddress: typeof query.get('email') !== 'undefined' ? query.get('email') : ``,\n    //interests: typeof window.prcMailchimpForm !== 'undefined' ? window.prcMailchimpForm.interests : window.prcMailchimpBlock.interests,\n    dimmerActive: false,\n    dimmerMessage: 'BLANK DIMMER MESSAGE',\n\n};\n\nconst MailchimpOptDown = withState(defaultState)(({\n        //display,\n        //interests,\n        error,\n        loading,\n        choice,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n      const submitHandler = e => {\n        e.preventDefault();\n      };\n\n      const checkboxHandler = e => {\n        e.preventDefault();\n      };\n\n      //console.log(JSON.stringify(interests));\n      console.log(emailAddress);\n\n      return (\n        <Form className=\"mailchimp-opt-down\">\n          <Form.Input\n            label=\"Email\"\n            placeholder=\"\"\n            name=\"email\"\n            value={emailAddress}\n            onChange={e => { setState({emailAddress: e.target.value})}}\n            />\n            { window.prcMailchimpBlock.interests.map( (d,i) =>\n              <Form.Checkbox\n                inline\n                name=\"interests\"\n                label={d.label}\n                value={d.value}\n                checked={ d.value === choice }\n                style={{ 'display' : d.value !== choice ? `none` : `inherit` }}\n              />\n            )}\n          <Button>Update preferences</Button>\n        </Form>\n      );\n    },\n);\n\n\n/*\nclass MailchimpOptDown extends Component {\n  constructor(props) {\n    super( props );\n    this.submitHandler = this.submitHandler.bind(this);\n    this.checkboxHandler = this.checkboxHandler.bind(this);\n    this.choice = '999f8eb858'; // Mailchimp ID for Quarterly Update newsletter\n    const query = new URLSearchParams(window.location.search);\n    this.email = typeof query.get('email') !== 'undefined' ? query.get('email') : ``;\n    this.interests = typeof window.prcMailchimpForm !== 'undefined' ? window.prcMailchimpForm.interests : window.prcMailchimpBlock.interests;\n    this.submitted = false;\n  }\n\n  submitHandler(e) {\n\n  }\n\n  checkboxHandler(e) {\n\n  }\n\n\n\n  render() {\n    return (\n      <Form className=\"mailchimp-opt-down\">\n        <Form.Input label=\"Email\" placeholder=\"\" name=\"email\" value={this.email} />\n          { this.interests.map( (d,i) =>\n            <Form.Checkbox\n              inline\n              name=\"interests\"\n              label={d.label}\n              value={d.value}\n              checked={ d.value === this.choice }\n              style={{ 'display' : d.value !== this.choice ? `none` : `inherit` }}\n            />\n          )}\n        <Button>Update preferences</Button>\n      </Form>\n    );\n  }\n\n\n}\n\nexport default MailchimpOptDown;\n*/\n\nexport default MailchimpOptDown;\n","module.exports = wp.i18n;","module.exports = ReactDOM;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","module.exports = lodash;"],"sourceRoot":""}