{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-opt-down/frontend.js","webpack:///./src/mailchimp-opt-down/component.js","webpack:///external \"ReactDOM\"","webpack:///external \"lodash\""],"names":["module","exports","React","wp","element","window","onload","document","querySelector","query","URLSearchParams","location","search","querySelectorAll","elm","props","interests","prcMailchimpBlock","emailAddress","get","render","MailchimpOptDown","withState","error","loading","list_id","choice","dimmerActive","dimmerMessage","setState","console","log","JSON","stringify","className","Input","label","placeholder","name","data-validate","required","value","onChange","e","target","map","d","i","Checkbox","inline","readonly","defaultChecked","style","disabled","length","onClick","preventDefault","email","updated_interests","jQuery","each","push","this","val","is","setTimeout","ajax","url","siteURL","param","type","done","info","ReactDOM","lodash"],"mappings":";;;;;;;;;;;;;;;;;mJAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,S,0kCCIpBC,OAAOC,OAAS,WACZ,GAAIC,SAASC,cAAc,uBAAwB,CAC/C,IAD+C,EACzCC,EAAQ,IAAIC,gBAAgBL,OAAOM,SAASC,QADH,IAElCL,SAASM,iBAAiB,wBAFQ,IAK/C,2BAAwB,CAAC,IAAdC,EAAa,QACbC,EAAQ,CACVC,UAAWX,OAAOY,kBAAkBD,UACpCE,kBAA4C,IAAvBT,EAAMU,IAAI,SAA2BV,EAAMU,IAAI,SAAtD,IAEnBC,iBAAO,oBAAC,IAAqBL,GAAWD,IAVG,kC,8ECQjDO,EAAmBC,YATJ,CACjBC,OAAO,EACPC,SAAS,EACTC,QAAS,aACTC,QAAQ,EACRC,cAAc,EACdC,cAAe,wBAGMN,EAAwB,YAUtC,IATHG,EASE,EATFA,QACAT,EAQE,EARFA,UAGAU,GAKE,EAPFH,MAOE,EANFC,QAME,EALFE,QACAR,EAIE,EAJFA,aAGAW,GACE,EAHFF,aAGE,EAFFC,cAEE,EADFC,UAuCA,OAHAC,QAAQC,IAAIC,KAAKC,UAAUjB,IAC3Bc,QAAQC,IAAIb,GAGV,oBAAC,IAAD,CAAMgB,UAAU,sBACd,oBAAC,IAAKC,MAAN,CACEC,MAAM,QACNC,YAAY,qBACZC,KAAK,QACLC,gBAAc,WACdC,UAAQ,EACRC,MAAOvB,EACPwB,SAAW,SAAAC,GAAOd,EAAS,CAACX,aAAcyB,EAAEC,OAAOH,WAEnD,wCAAaf,EAAM,eAAnB,KACEV,EAAU6B,KAAK,SAACC,EAAEC,GAAH,OACf,oBAAC,IAAKC,SAAN,CACEC,QAAM,EACNX,KAAK,YACLF,MAAOU,EAAEL,QAAUhB,EAAZ,wEAAgGqB,EAAEV,MACzGK,MAAOK,EAAEL,MACTS,SAAUJ,EAAEL,QAAUhB,EACtB0B,eAAgBL,EAAEL,QAAUhB,EAC5B2B,MAAO,CAAE,QAAYN,EAAEL,QAAUhB,EAAZ,kBACrBiB,SAAW,SAAAC,GAAOd,EAAS,CAACH,QAASA,UAG3C,oBAAC,IAAD,CAAQ2B,UAAY3B,GAAiC,GAAvBR,EAAaoC,OAAcC,QA5DvC,SAAAZ,GACpBA,EAAEa,iBACF,IAAMC,EAAQvC,EACVwC,EAAoB,GAExBC,OAAOC,KAAKD,OAAO,4BAA4B,WAC3CD,EAAkBG,KAAlB,eAAyBF,OAAOG,MAAMC,QAASJ,OAAOG,MAAME,GAAG,iBAGnEC,YAAW,WACPN,OACKO,KAAK,CACFC,IAAI,GAAD,OACC9D,OAAO+D,QADR,gDAEqCT,OAAOU,MAC3C,CACIZ,QACAzC,UAAW0C,KAEnBY,KAAM,SAETC,MAAK,WACFzC,QAAQ0C,KAAK,0BACb3C,EAAS,CACLD,cACI,gEAmClB,0BAMGP,O,iBC3FfrB,EAAOC,QAAUwE,U,iBCAjBzE,EAAOC,QAAUyE,S","file":"mailchimp-opt-down/frontend-b21490a2.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","import { render } from '@wordpress/element';\nimport MailchimpOptDown from './component';\n\n// When the document is fully loaded load the mailchimp-form\nwindow.onload = () => {\n    if (document.querySelector('.mailchimp-opt-down')) {\n        const query = new URLSearchParams(window.location.search);\n        const elms = document.querySelectorAll('.mailchimp-opt-down',);\n\n        // eslint-disable-next-line no-restricted-syntax\n        for (const elm of elms) {\n             const props = {\n                 interests: window.prcMailchimpBlock.interests,\n                 emailAddress: typeof query.get('email') !== 'undefined' ? query.get('email') : ``,\n             };\n            render(<MailchimpOptDown {...props} />, elm);\n        }\n    }\n};\n  \n","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { withState } from '@wordpress/compose';\nimport { Form, Input, Dimmer, Button } from 'semantic-ui-react';\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    list_id: 'a33430a835', // Mailchimp ID for Quarterly Update newsletter\n    choice: true,\n    dimmerActive: false,\n    dimmerMessage: 'BLANK DIMMER MESSAGE',\n};\n\nconst MailchimpOptDown = withState(defaultState)(({\n        list_id,\n        interests,\n        error,\n        loading,\n        choice,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n        const submitHandler = e => {\n          e.preventDefault();\n          const email = emailAddress;\n          let updated_interests = [];\n\n          jQuery.each(jQuery(\"input[name='interests']\"), function(){\n              updated_interests.push({[jQuery(this).val()] : jQuery(this).is(\":checked\") ? true : false });\n          });\n\n          setTimeout(() => {\n              jQuery\n                  .ajax({\n                      url: `${\n                          window.siteURL\n                      }/wp-json/prc-api/v2/mailchimp/update?${jQuery.param(\n                          {\n                              email,\n                              interests: updated_interests,\n                          })}`,\n                      type: 'POST',\n                  })\n                  .done(() => {\n                      console.info('Succesfully subscribed');\n                      setState({\n                          dimmerMessage:\n                              'You have succesfully subscribed to this newsletter.',\n                      });\n                  })\n          });\n\n        };\n\n\n        console.log(JSON.stringify(interests));\n        console.log(emailAddress);\n\n        return (\n          <Form className=\"mailchimp-opt-down\">\n            <Form.Input\n              label=\"Email\"\n              placeholder=\"Your email address\"\n              name=\"email\"\n              data-validate=\"mc-email\"\n              required\n              value={emailAddress}\n              onChange={ e => { setState({emailAddress: e.target.value}) } }\n              />\n              <p>choice: { choice ? `true` : `false`} </p>\n              { interests.map( (d,i) =>\n                <Form.Checkbox\n                  inline\n                  name=\"interests\"\n                  label={d.value === list_id ? `Send me quarterly updates and unsubscribe from all other newsletters.` : d.label }\n                  value={d.value}\n                  readonly={d.value !== list_id ? true : false }\n                  defaultChecked={d.value === list_id ? true : false }\n                  style={{ 'display' : d.value !== list_id ? `none` : `inherit` }}\n                  onChange={ e => { setState({choice: !choice }) } }\n                />\n              )}\n            <Button disabled={ !choice || emailAddress.length == 0 } onClick={submitHandler}>Update preferences</Button>\n          </Form>\n        );\n    },\n);\n\nexport default MailchimpOptDown;\n","module.exports = ReactDOM;","module.exports = lodash;"],"sourceRoot":""}