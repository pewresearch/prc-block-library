{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.components\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\"","webpack:///external \"React\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.i18n\"","webpack:///./src/column/edit.js","webpack:///./src/column/save.js","webpack:///./src/column/settings.js","webpack:///./src/column/index.js"],"names":["module","exports","wp","element","components","blocks","data","React","blockEditor","i18n","InspectorTools","width","items","setAttributes","title","__","label","value","disabled","checked","onChange","withSelect","select","ownProps","clientId","hasChildBlocks","getBlockOrder","length","attributes","useEffect","w","numWords","document","querySelector","setAttribute","ColumnContent","templateLock","renderAppender","undefined","ButtonBlockAppender","className","save","Grid","Column","Content","settings","description","category","icon","keywords","supports","html","align","type","default","parent","edit","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,GAAGC,S,iBCApBH,EAAOC,QAAUC,GAAGE,Y,iBCApBJ,EAAOC,QAAUC,GAAGG,Q,iBCApBL,EAAOC,QAAUC,GAAGI,M,gBCApBN,EAAOC,QAAUM,O,0DCAjBP,EAAOC,QAAUC,GAAGM,a,gBCApBR,EAAOC,QAAUC,GAAGO,M,+ICWdC,EAAiB,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACnC,OACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWC,MAAOC,aAAG,oBACjB,+BACI,oBAAC,cAAD,CACIC,MAAM,QACNC,MAAON,EACPO,UAAQ,KAGhB,+BACI,4DACA,oBAAC,gBAAD,CACIF,MACIJ,EACM,uBACA,+BAEVO,QAASP,EACTQ,SAAU,WACNP,EAAc,CAAED,OAAQA,WA6CrCS,wBAAY,SAACC,EAAQC,GAAe,IACvCC,EAAaD,EAAbC,SAER,MAAO,CACHC,gBAAgBC,EAFMJ,EAAQ,qBAA1BI,eAE2BF,GAAWG,OAAS,KAJ5CN,EApCF,SAAC,GAA2D,IAA1DO,EAAyD,EAAzDA,WAAYJ,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,eAAgBZ,EAAmB,EAAnBA,cAC1CF,EAAgBiB,EAAhBjB,MAAOC,EAASgB,EAAThB,MAKdiB,qBAAU,WACN,IAAMC,EAAIC,IAASpB,GACnBqB,SAASC,cAAc,mBAAmBT,EAAS,MAAMU,aAAa,aAAcJ,MAGxF,IAAMK,EAAgB,WAClB,OACI,oBAAC,cAAD,CAAaC,cAAc,EAAOC,eAC9BZ,OACMa,EACA,kBAAM,oBAAC,cAAYC,oBAAb,UAKxB,OACI,oBAAC,WAAD,KACI,oBAAC,EAAD,CAAgB5B,MAAOA,EAAOC,MAAOA,EAAOC,cAAeA,KAC1D,IAASD,GACN,2BAAK4B,UAAU,oBACX,oBAACL,EAAD,QAGP,IAAUvB,GACP,oBAACuB,EAAD,U,SC/CDM,EArBF,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,WACJjB,EAAgBiB,EAAhBjB,MAAOC,EAASgB,EAAThB,MACVkB,EAAInB,EAKR,OAJI,IAAMA,IACNmB,GAAI,GAIJ,oBAACY,EAAA,EAAKC,OAAN,CAAahC,MAAOmB,IACf,IAASlB,GACN,2BAAK4B,UAAU,oBACX,oBAAC,cAAYI,QAAb,QAGP,IAAUhC,GACP,oBAAC,cAAYgC,QAAb,QCkBDC,EA9BE,CACb,mBACA,CACI/B,MAAOC,aAAG,cACV+B,YAAa/B,aAAI,2CACjBgC,SAAU,SACVC,SACAC,SAAU,CAAClC,aAAG,WACdmC,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXxB,WAAY,CACRjB,MAAO,CACH0C,KAAM,UACNC,QAAS,GAGb1C,MAAO,CACHyC,KAAM,UACNC,SAAS,IAGjBC,OAAQ,CAAE,oBAAqB,yBAE/BC,OACAf,S,MC5BRgB,oBAAiB,WAAjB,cAAqBZ,M","file":"column/main-e2825c65.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.components;","module.exports = wp.blocks;","module.exports = wp.data;","module.exports = React;","module.exports = wp.blockEditor;","module.exports = wp.i18n;","import { InnerBlocks, InspectorControls } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport {\n    PanelBody,\n    ToggleControl,\n    TextControl,\n} from '@wordpress/components';\nimport { useEffect, Fragment } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport numWords from 'num-words';\n\nconst InspectorTools = ({width, items, setAttributes}) => {\n    return (\n        <InspectorControls>\n            <PanelBody title={__('Column Settings')}>\n                <div>\n                    <TextControl\n                        label=\"Width\"\n                        value={width}\n                        disabled\n                    />\n                </div>\n                <div>\n                    <p>Toggle divided story items:</p>\n                    <ToggleControl\n                        label={\n                            items\n                                ? 'Contains Story Items'\n                                : 'Does Not Contain Story Items'\n                        }\n                        checked={items}\n                        onChange={() => {\n                            setAttributes({ items: !items });\n                        }}\n                    />\n                </div>\n            </PanelBody>\n        </InspectorControls>\n    );\n}\n\nconst edit = ({attributes, clientId, hasChildBlocks, setAttributes}) => {\n    const {width, items} = attributes;\n    \n    /**\n     * @description Sets css by adding data attribute to parent gutenberg div.\n     */\n    useEffect(() => {\n        const w = numWords(width);\n        document.querySelector('div[data-block=\"'+clientId+'\"]').setAttribute('data-width', w);\n    });\n\n    const ColumnContent = () => {\n        return(\n            <InnerBlocks templateLock={false} renderAppender={\n                hasChildBlocks\n                    ? undefined\n                    : () => <InnerBlocks.ButtonBlockAppender />\n            }/>\n        );\n    }\n\n    return(\n        <Fragment>\n            <InspectorTools width={width} items={items} setAttributes={setAttributes}/>\n            {true === items && (\n                <div className=\"ui divided items\">\n                    <ColumnContent/>\n                </div>\n            )}\n            {false === items && (\n                <ColumnContent/>\n            )}\n        </Fragment>\n    );\n}\n\nexport default withSelect( (select, ownProps ) => {\n    const { clientId } = ownProps;\n    const { getBlockOrder } = select( 'core/block-editor' );\n    return {\n        hasChildBlocks: getBlockOrder( clientId ).length > 0,\n    };\n})(edit);","import { InnerBlocks } from '@wordpress/block-editor';\nimport { Grid } from 'semantic-ui-react';\n\nconst save = ({attributes}) => {\n    const {width, items} = attributes;\n    let w = width;\n    if (0 === width) {\n        w = false;\n    }\n    \n    return(\n        <Grid.Column width={w}>\n            {true === items && (\n                <div className=\"ui divided items\">\n                    <InnerBlocks.Content/>\n                </div>\n            )}\n            {false === items && (\n                <InnerBlocks.Content/>\n            )}\n        </Grid.Column>\n    );\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport { column as icon } from '@wordpress/icons';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/column',\n    {\n        title: __('PRC Column'),\n        description: __( 'A single column within a columns block.' ),\n        category: 'layout',\n        icon,\n        keywords: [__('Column')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            width: {\n                type: 'integer',\n                default: 0,\n            },\n            // Is this column comprised of story items\n            items: {\n                type: 'boolean',\n                default: false,\n            }\n        },\n        parent: [ 'prc-block/columns', 'prc-block/lede-layout' ],\n        // inserter: false,\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\nimport './style.scss';\n\nregisterBlockType(...settings);"],"sourceRoot":""}