{"version":3,"sources":["webpack:///external \"wp.element\"","webpack:///external \"wp.components\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.data\"","webpack:///external \"React\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/column/edit.js","webpack:///./src/column/save.js","webpack:///./src/column/settings.js","webpack:///./src/column/index.js"],"names":["module","exports","wp","element","components","blocks","data","React","i18n","blockEditor","InspectorTools","width","title","__","label","value","disabled","withSelect","select","ownProps","clientId","hasChildBlocks","getBlockOrder","length","attributes","useEffect","w","numWords","document","querySelector","setAttribute","ColumnContent","templateLock","renderAppender","undefined","ButtonBlockAppender","save","Grid","Column","Content","settings","description","category","icon","keywords","supports","html","align","type","default","parent","edit","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,GAAGC,S,iBCApBH,EAAOC,QAAUC,GAAGE,Y,iBCApBJ,EAAOC,QAAUC,GAAGG,Q,iBCApBL,EAAOC,QAAUC,GAAGI,M,gBCApBN,EAAOC,QAAUM,O,0DCAjBP,EAAOC,QAAUC,GAAGM,M,gBCApBR,EAAOC,QAAUC,GAAGO,a,+ICOdC,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWC,MAAOC,aAAG,oBACjB,+BACI,oBAAC,cAAD,CAAaC,MAAM,QAAQC,MAAOJ,EAAOK,UAAQ,QAyCtDC,wBAAW,SAACC,EAAQC,GAAc,IACrCC,EAAaD,EAAbC,SAER,MAAO,CACHC,eAAgB,GAAIC,EAFEJ,EAAO,qBAAzBI,eAE8BF,GAAUG,UAJrCN,EAlCF,SAAC,GAA8C,IAA5CO,EAA2C,EAA3CA,WAAYJ,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,eAC1BV,EAAUa,EAAVb,MAKRc,qBAAU,WACN,IAAMC,EAAIC,IAAShB,GACnBiB,SACKC,cADL,0BACsCT,EADtC,OAEKU,aAAa,aAAcJ,MAGpC,IAAMK,EAAgB,WAClB,OACI,oBAAC,cAAD,CACIC,cAAc,EACdC,eACIZ,OACMa,EACA,kBAAM,oBAAC,cAAYC,oBAAb,UAM5B,OACI,oBAAC,WAAD,KACI,oBAAC,EAAD,CAAgBxB,MAAOA,IACvB,oBAACoB,EAAD,U,SC/BGK,EAdF,SAAC,GAAoB,IACtBzB,EADqB,EAAjBa,WACJb,MACJe,EAAIf,EAKR,OAJI,IAAMA,IACNe,GAAI,GAIJ,oBAACW,EAAA,EAAKC,OAAN,CAAa3B,MAAOe,GAChB,oBAAC,cAAYa,QAAb,QCkBGC,EAzBE,CACb,mBACA,CACI5B,MAAOC,aAAG,cACV4B,YAAa5B,aAAG,2CAChB6B,SAAU,SACVC,SACAC,SAAU,CAAC/B,aAAG,WACdgC,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXvB,WAAY,CACRb,MAAO,CACHqC,KAAM,UACNC,QAAS,IAGjBC,OAAQ,CAAC,qBAETC,OACAf,S,MCtBRgB,oBAAiB,WAAjB,cAAqBZ,M","file":"column/main-f12e6170.js","sourcesContent":["module.exports = wp.element;","module.exports = wp.components;","module.exports = wp.blocks;","module.exports = wp.data;","module.exports = React;","module.exports = wp.i18n;","module.exports = wp.blockEditor;","import { InnerBlocks, InspectorControls } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, ToggleControl, TextControl } from '@wordpress/components';\nimport { useEffect, Fragment } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport numWords from 'num-words';\n\nconst InspectorTools = ({ width }) => {\n    return (\n        <InspectorControls>\n            <PanelBody title={__('Column Settings')}>\n                <div>\n                    <TextControl label=\"Width\" value={width} disabled />\n                </div>\n            </PanelBody>\n        </InspectorControls>\n    );\n};\n\nconst edit = ({ attributes, clientId, hasChildBlocks }) => {\n    const { width } = attributes;\n\n    /**\n     * @description Sets css by adding data attribute to parent gutenberg div.\n     */\n    useEffect(() => {\n        const w = numWords(width);\n        document\n            .querySelector(`div[data-block=\"${clientId}\"]`)\n            .setAttribute('data-width', w);\n    });\n\n    const ColumnContent = () => {\n        return (\n            <InnerBlocks\n                templateLock={false}\n                renderAppender={\n                    hasChildBlocks\n                        ? undefined\n                        : () => <InnerBlocks.ButtonBlockAppender />\n                }\n            />\n        );\n    };\n\n    return (\n        <Fragment>\n            <InspectorTools width={width} />\n            <ColumnContent />\n        </Fragment>\n    );\n};\n\nexport default withSelect((select, ownProps) => {\n    const { clientId } = ownProps;\n    const { getBlockOrder } = select('core/block-editor');\n    return {\n        hasChildBlocks: 0 < getBlockOrder(clientId).length,\n    };\n})(edit);\n","import { InnerBlocks } from '@wordpress/block-editor';\nimport { Grid } from 'semantic-ui-react';\n\nconst save = ({ attributes }) => {\n    const { width } = attributes;\n    let w = width;\n    if (0 === width) {\n        w = false;\n    }\n\n    return (\n        <Grid.Column width={w}>\n            <InnerBlocks.Content />\n        </Grid.Column>\n    );\n};\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport { column as icon } from '@wordpress/icons';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/column',\n    {\n        title: __('PRC Column'),\n        description: __('A single column within a columns block.'),\n        category: 'layout',\n        icon,\n        keywords: [__('Column')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            width: {\n                type: 'integer',\n                default: 0,\n            },\n        },\n        parent: ['prc-block/columns'],\n        // inserter: false,\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\nimport './style.scss';\n\nregisterBlockType(...settings);"],"sourceRoot":""}