{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///./src/column/edit.js","webpack:///./src/column/save.js","webpack:///./src/column/settings.js","webpack:///./src/column/index.js"],"names":["module","exports","React","wp","blockEditor","i18n","blocks","element","edit","attributes","clientId","width","setAttributes","useEffect","w","numWords","document","querySelector","setAttribute","className","templateLock","save","Grid","Column","Content","settings","title","__","description","category","icon","keywords","supports","html","align","type","default","items","divided","parent","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;qHAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,a,iBCApBJ,EAAOC,QAAUE,GAAGE,M,iBCApBL,EAAOC,QAAUE,GAAGG,Q,iBCApBN,EAAOC,QAAUE,GAAGI,S,mKCoBLC,EAhBF,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,SAChBC,GAD6C,EAAnBC,cACjBH,EAATE,OAQP,OANAE,qBAAU,WAEN,IAAMC,EAAIC,IAASJ,GACnBK,SAASC,cAAc,mBAAmBP,EAAS,MAAMQ,aAAa,aAAcJ,MAIpF,2BAAKK,UAAU,qBACX,oBAAC,cAAD,CAAaC,cAAc,M,QCHxBC,EATF,SAAC,GAAkB,IACrBV,EADoB,EAAhBF,WACJE,MACHG,EAAIH,EAIR,OAHI,IAAMA,IACNG,GAAI,GAED,oBAACQ,EAAA,EAAKC,OAAN,CAAaZ,MAAOG,GAAG,oBAAC,cAAYU,QAAb,QC8BnBC,EAlCE,CACb,mBACA,CACIC,MAAOC,aAAG,UACVC,YAAa,IACbC,SAAU,SACVC,KAAM,OACNC,SAAU,CAACJ,aAAG,WACdK,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXzB,WAAY,CACRE,MAAO,CACHwB,KAAM,UACNC,QAAS,GAGbC,MAAO,CACHF,KAAM,UACNC,SAAS,GAEbE,QAAS,CACLH,KAAM,UACNC,SAAS,IAGjBG,OAAQ,CAAE,oBAAqB,yBAE/B/B,OACAa,S,MC/BRmB,oBAAiB,WAAjB,cAAqBf,M","file":"column/main-8b228668.js","sourcesContent":["module.exports = React;","module.exports = wp.blockEditor;","module.exports = wp.i18n;","module.exports = wp.blocks;","module.exports = wp.element;","import { InnerBlocks } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport numWords from 'num-words';\n\nconst edit = ({attributes, clientId, setAttributes}) => {\n    const {width} = attributes;\n    \n    useEffect(() => {\n        // This sets the width on the actual block div.\n        const w = numWords(width);\n        document.querySelector('div[data-block=\"'+clientId+'\"]').setAttribute('data-width', w);\n    });\n\n    return(\n        <div className='prc blocks column'>\n            <InnerBlocks templateLock={false}/>\n        </div>\n    );\n}\n\nexport default edit;","import { InnerBlocks } from '@wordpress/block-editor';\nimport { Grid } from 'semantic-ui-react';\n\nconst save = ({attributes}) => {\n    const {width} = attributes;\n    let w = width;\n    if (0 === width) {\n        w = false;\n    }\n    return <Grid.Column width={w}><InnerBlocks.Content/></Grid.Column>\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/column',\n    {\n        title: __('Column'),\n        description: '.',\n        category: 'layout',\n        icon: 'grid',\n        keywords: [__('Column')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            width: {\n                type: 'integer',\n                default: 0,\n            },\n            // Is this column comprised of story items\n            items: {\n                type: 'boolean',\n                default: false,\n            },\n            divided: {\n                type: 'boolean',\n                default: false,\n            }\n        },\n        parent: [ 'prc-block/columns', 'prc-block/lede-layout' ],\n        // inserter: false,\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\nimport './style.scss';\n\nregisterBlockType(...settings);"],"sourceRoot":""}