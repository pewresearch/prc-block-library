{"version":3,"sources":["webpack:///external \"wp.i18n\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///external \"wp.blockEditor\"","webpack:///./node_modules/@wpackio/entrypoint/lib/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/post-subtitle/edit.js","webpack:///./src/post-subtitle/settings.js","webpack:///./src/post-subtitle/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["module","exports","wp","i18n","blocks","element","blockEditor","path","replace","window","concat","_arrayLikeToArray","arr","len","length","i","arr2","Array","edit","attributes","className","setAttributes","content","tagName","value","onChange","c","placeholder","formattingControls","multiline","settings","title","__","icon","category","keywords","supports","html","type","default","source","meta","save","registerBlockType","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError"],"mappings":";;;;;;;;;;;;;;;;;uIAAAA,EAAOC,QAAUC,GAAGC,M,cCApBH,EAAOC,QAAUC,GAAGE,Q,cCApBJ,EAAOC,QAAUC,GAAGG,S,cCApBL,EAAOC,QAAUC,GAAGI,a,kECSJ,IAAIC,EAAK,uBAA6CC,QAAQ,kBAAkB,IAChG,IAAwBC,OAAO,YAAYC,OAAOH,K,6BCVnC,SAASI,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,E,WCHkCJ,E,4BCc5BM,EAhBF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC3BC,EAAYH,EAAZG,QAER,OACI,oBAAC,WAAD,CACIC,QAAQ,KACRC,MAAOF,EACPG,SAAU,SAAAC,GAAC,OAAIL,EAAc,CAAEC,QAASI,KACxCC,YAAY,GACZC,mBAAoB,GACpBR,UAAWA,EACXS,WAAW,KCiBRC,EA1BE,CACb,0BACA,CAEIC,MAAOC,aAAG,YACVC,KAAM,mBACNC,SAAU,SACVC,SAAU,CAACH,aAAG,OAAQA,aAAG,aACzBI,SAAU,CACNC,MAAM,GAGVlB,WAAY,CACRG,QAAS,CACLgB,KAAM,SACNC,QAAS,WACTC,OAAQ,OACRC,KAAM,iBAIdvB,OACAwB,KAAM,cAAGvB,WAAH,EAAeC,UAAf,OAA+B,oBAAC,WAAD,SCvB7CuB,oBAAiB,WAAjB,ECFe,SAA4B/B,GACzC,GAAIK,MAAM2B,QAAQhC,GAAM,OAAO,EAAiBA,GJGzC,CADkCA,EGDtBkB,IEHN,SAA0Be,GACvC,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAO5B,MAAMgC,KAAKJ,GLIvD,CAAgBjC,IMJpC,SAAqCsC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIJ,OAAOK,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBnC,MAAMgC,KAAKC,GACxC,cAANE,GAAqB,2CAA2CO,KAAKP,GAAW,EAAiBF,EAAGC,QAAxG,GNFyD,CAA2BvC,IOLvE,WACb,MAAM,IAAIgD,UAAU,wIPIwE,M","file":"post-elements/subtitle-19eeb5b6.js","sourcesContent":["module.exports = wp.i18n;","module.exports = wp.blocks;","module.exports = wp.element;","module.exports = wp.blockEditor;","\"use strict\";/* eslint-disable @typescript-eslint/camelcase */ /* eslint-disable no-underscore-dangle */ // eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n/* global __webpack_public_path__ */ // eslint-disable-next-line spaced-comment\n///<reference types=\"webpack-env\" />\n// We expect __webpack_public_path__ to be present, thanks to webpack\n// We are not using DOM in the typescript library, so let's just hack our way\n// through window\n// tslint:disable-next-line:no-any\n// We would override __webpack_public_path__ only if __WPACKIO__ webpack plugin is set\nif(__WPACKIO__){var path=(__WPACKIO__.appName+__WPACKIO__.outputPath).replace(/[^a-zA-Z0-9_-]/g,'');// eslint-disable-next-line no-global-assign\n__webpack_public_path__=window[\"__wpackIo\".concat(path)];}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { RichText } from '@wordpress/block-editor';\n\nconst edit = ({ attributes, className, setAttributes }) => {\n    const { content } = attributes;\n\n    return (\n        <RichText\n            tagName=\"h2\"\n            value={content}\n            onChange={c => setAttributes({ content: c })} // Store updated content as a block attribute\n            placeholder=\"\" // Display this text before any content has been added by the user\n            formattingControls={[]}\n            className={className}\n            multiline={false}\n        />\n    );\n};\n\nexport default edit;\n","import { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport edit from './edit';\n\nconst settings = [\n    'prc-block/post-subtitle',\n    {\n        // Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n        title: __('Subtitle'), // Block title.\n        icon: 'admin-appearance', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n        category: 'layout', // Block category — Group blocks together based on common traits E.g. common, formatting, layout widgets, embed.\n        keywords: [__('prc'), __('subtitle')],\n        supports: {\n            html: false, // We do not want to give people the ability to edit the raw html of this block.\n        },\n        // Attributes are really react props.\n        attributes: {\n            content: {\n                type: 'string',\n                default: 'Subtitle',\n                source: 'meta',\n                meta: 'sub_headline',\n            },\n        },\n\n        edit,\n        save: ({ attributes, className }) => <Fragment />,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}