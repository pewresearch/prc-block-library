{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.element\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/card/component.js","webpack:///./src/card/index.js","webpack:///external \"wp.components\"","webpack:///external \"wp.i18n\"","webpack:///external \"ReactDOM\""],"names":["module","exports","React","wp","blocks","element","blockEditor","ALLOWED_MEDIA_TYPES","Image","img","link","edit","undefined","enabled","onSelect","media","setAttributes","image","url","allowedTypes","render","open","className","src","onClick","isSmall","isPrimary","href","Card","props","isBasic","this","classes","classNames","basic","fluid","Header","tagName","value","title","onChange","placeholder","Content","multiline","excerpt","display","allowedBlocks","label","Component","EditSidebar","__","registerBlockType","icon","category","keywords","styles","name","isDefault","supports","html","attributes","type","default","data","isSelected","style","maxWidth","save","components","i18n","ReactDOM"],"mappings":"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","file":"card/main-575fd0ec.js","sourcesContent":["module.exports = React;","module.exports = wp.blocks;","module.exports = wp.element;","module.exports = wp.blockEditor;","import { Component, Fragment, RawHTML } from '@wordpress/element';\nimport { RichText, InnerBlocks, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport { TextControl, Button } from '@wordpress/components';\n\nimport { Card as SemanticCard, Image as SemanticImage } from 'semantic-ui-react';\n\nimport classNames from 'classnames/bind';\n\nconst ALLOWED_MEDIA_TYPES = [ 'image' ];\n\nconst Image = function({ img, link, edit }) {\n\tlet classes = 'image';\n\treturn(\n\t\t<Fragment>\n\t\t\t{ undefined !== img && (\n\t\t\t\t<Fragment>\n\t\t\t\t{ true === edit.enabled && (\n\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tonSelect={ ( media ) => {\n\t\t\t\t\t\t\t\tedit.setAttributes( { image: media.url } )\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t{ '' !== img && (\n\t\t\t\t\t\t\t\t\t\t<div className={classes}>\n\t\t\t\t\t\t\t\t\t\t\t<img src={img} onClick={ open }/>\n\t\t\t\t\t\t\t\t\t\t\t<i>Click image to open media library</i>\n\t\t\t\t\t\t\t\t\t\t\t<p><Button isSmall onClick={ () => edit.setAttributes({image: ''}) }>Remove</Button></p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ '' === img && (\n\t\t\t\t\t\t\t\t\t\t<p><Button isPrimary onClick={ open }>Insert Image</Button></p>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t)}\n\t\t\t\t{ true !== edit.enabled && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{ '' !== link && (\n\t\t\t\t\t\t\t<a href={link} className={classes}>\n\t\t\t\t\t\t\t\t<img src={img}/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ '' === link && (\n\t\t\t\t\t\t\t<div className={classes}><img src={img}/></div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</Fragment>\n\t)\t\n}\n\nclass Card extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tlet isBasic = false;\n\t\tif ( 'is-style-borderless' === this.props.className ) {\n\t\t\tisBasic = true;\n\t\t}\n\t\tlet classes = classNames(this.props.className, { basic: isBasic });\n\t\treturn(\n\t\t\t<SemanticCard fluid className={classes}>\n\t\t\t\t<SemanticCard.Header>\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{ true === this.props.edit.enabled && (\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\ttagName=\"div\" // The tag here is the element output and editable in the admin\n\t\t\t\t\t\t\t\tvalue={ this.props.title } // Any existing content, either from the database or an attribute default\n\t\t\t\t\t\t\t\tonChange={ ( title ) => this.props.edit.setAttributes( { title } ) } // Store updated content as a block attribute\n\t\t\t\t\t\t\t\tplaceholder='Card Title' // Display this text before any content has been added by the user\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t{ true !== this.props.edit.enabled && '' === this.props.link && (\n\t\t\t\t\t\t\t<span>{this.props.title}</span>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ true !== this.props.edit.enabled && '' !== this.props.link && (\n\t\t\t\t\t\t\t<a href={this.props.link}>{this.props.title}</a>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Fragment>\n\t\t\t\t</SemanticCard.Header>\n\n\t\t\t\t<SemanticCard.Content>\n\t\t\t\t\t<Image img={this.props.image} link={this.props.link} edit={this.props.edit}/>\n\n\t\t\t\t\t{ true === this.props.edit.enabled && (\n\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\ttagName=\"div\" // The tag here is the element output and editable in the admin\n\t\t\t\t\t\t\tclassName=\"sans-serif\"\n\t\t\t\t\t\t\tmultiline=\"p\"\n\t\t\t\t\t\t\tvalue={ this.props.excerpt } // Any existing content, either from the database or an attribute default\n\t\t\t\t\t\t\tonChange={ ( excerpt ) => this.props.edit.setAttributes( { excerpt } ) } // Store updated content as a block attribute\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ true !== this.props.edit.enabled && '' !== this.props.excerpt && (\n\t\t\t\t\t\t<RichText.Content tagName=\"div\" className=\"sans-serif\" value={this.props.excerpt}/>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<div className=\"ui relaxed items\">\n\t\t\t\t\t{ false === this.props.edit.display && (\n\t\t\t\t\t\t<InnerBlocks allowedBlocks={[ 'prc-block/story-item', 'prc-block/posts' ]}/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ true === this.props.edit.display && (\n\t\t\t\t\t\t<InnerBlocks.Content/>\n\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{ '' !== this.props.label && '' !== this.props.link && (\n\t\t\t\t\t\t<p><strong><a href={this.props.link} className=\"read-more\">{this.props.label}</a></strong></p>\n\t\t\t\t\t) }\n\t\t\t\t</SemanticCard.Content>\n\n\t\t\t</SemanticCard>\n\t\t)\n\t}\t\n}\n\nexport default Card;","import { __ } from \"@wordpress/i18n\";\nimport { Component, Fragment } from '@wordpress/element';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { Button, PanelBody, ToggleControl, TextControl } from '@wordpress/components';\n\nimport Card from './component';\n\nclass EditSidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\n\trender = () => {\n\t\tconst setAttributes = this.props.edit.setAttributes;\n\t\treturn(\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Card Options' ) }>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Link\"\n\t\t\t\t\t\t\tvalue={ this.props.link }\n\t\t\t\t\t\t\tonChange={ ( link ) => setAttributes({link}) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel=\"Read More Text\"\n\t\t\t\t\t\t\tvalue={ this.props.label }\n\t\t\t\t\t\t\tonChange={ ( label ) => setAttributes({label}) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t)\n\t}\n}\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/card', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Card' ), // Block title.\n\ticon: 'format-aside', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout, widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'card' ),\n\t\t__( 'baseball card' ),\n\t\t__( 'packaged card' ),\n\t],\n\tstyles: [\n\t\t{\n\t\t\tname: 'default',\n\t\t\tlabel: 'Basic (Baseball Card)',\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'borderless',\n\t\t\tlabel: 'Basic Borderless',\n\t\t},\n\t\t{\n\t\t\tname: 'beige',\n\t\t\tlabel: 'Beige (Borderless)',\n\t\t},\n\t\t{\n\t\t\tname: 'oatmeal',\n\t\t\tlabel: 'Oatmeal (Borderless)',\n\t\t},\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\tlink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'https://www.pewresearch.org/page',\n\t\t},\n\t\tlabel: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Read More',\n\t\t},\n\t\t//\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Card Title',\n\t\t},\n\t\timage: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\t//\n\t\texcerpt: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit</p><p>Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>',\n\t\t}\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: (props) => {\n\t\tlet data = props.attributes; // Condense the attributes into props\n\t\tdata.className = props.attributes.className; // Push classNames\n\t\tdata.edit = {\n\t\t\tenabled: false,\n\t\t\tdisplay: false,\n\t\t\tsetAttributes: props.setAttributes,\n\t\t}\n\t\tif ( true === props.isSelected ) {\n\t\t\tdata.edit.enabled = true;\n\t\t}\n\t\t\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{ true === props.isSelected && (\n\t\t\t\t\t<EditSidebar {...data}/>\n\t\t\t\t) }\n\t\t\t\t<div style={{maxWidth: '400px'}}>\n\t\t\t\t\t<Card {...data}/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t},\n\n\t// Seth Learning Note: SO save literally only transforms on post_content filter. You won't see this result inside the gutenberg editor, you will however see it if you look at code view.\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\tlet data = props.attributes;\n\t\tdata.className = props.attributes.className;\n\t\tdata.edit = {\n\t\t\tenabled: false,\n\t\t\tdisplay: true,\n\t\t\tsetAttributes: props.setAttributes,\n\t\t};\n\t\treturn (\n\t\t\t<Card {...data}/>\n\t\t);\n\t},\n} );\n","module.exports = wp.components;","module.exports = wp.i18n;","module.exports = ReactDOM;"],"sourceRoot":""}