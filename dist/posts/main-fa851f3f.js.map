{"version":3,"sources":["webpack:///external \"React\"","webpack:///./src/posts/index.js","webpack:///external \"wp.components\"","webpack:///external \"wp.i18n\"","webpack:///external \"moment\"","webpack:///external \"wp.data\"","webpack:///external \"wp.element\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\""],"names":["module","exports","React","EditSidebar","props","setState","setAttributes","getTerms","then","data","formatOptions","termID","hasOwnProperty","termObj","push","value","id","label","name","formatsRaw","formats","programOptions","slug","programsRaw","programs","attributes","posts","getPosts","per_page","format","program","taxonomyToDisplay","className","includes","blockClientID","item","index","console","log","parentID","window","wp","select","getBlockHierarchyRootClientId","clientID","parentBlockOrder","getBlockOrder","parentBlock","getBlock","block","blocks","createBlock","title","image","excerpt","link","date","extra","postID","emphasis","isChartArt","imageSlot","horizontal","stacked","enableHeader","enableExcerpt","enableExtra","enableProgramsTaxonomy","headerSize","dispatch","insertBlocks","__","onChange","Number","formatID","programID","options","state","f","formatSlug","p","programSlug","help","dynamic","checked","colors","color","backgroundColor","bind","Component","registerBlockType","icon","category","keywords","styles","isDefault","supports","html","type","default","moreLink","tyle","edit","style","isFactTank","undefined","isList","isColumns","isSelected","clientId","disableLink","save","data-title","data-format","data-format-id","data-format-slug","data-program","data-program-id","data-program-slug","data-number","data-background","data-style","components","i18n","moment","element","ReactDOM","blockEditor","apiFetch","url"],"mappings":"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","file":"posts/main-fa851f3f.js","sourcesContent":["module.exports = React;","import { __ } from \"@wordpress/i18n\";\nimport { registerBlockType } from '@wordpress/blocks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl, TextControl, SelectControl, ColorPalette } from '@wordpress/components';\nimport { Component, Fragment } from '@wordpress/element';\n\nimport { getPosts, getTerms } from '../_shared';\n\nimport PostsList from './styles/list';\nimport FactTankList from './styles/fact-tank';\nimport PostsColumns from './styles/columns';\n\nclass EditSidebar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tformats: false,\n\t\t\tformatsRaw: false,\n\t\t\tprograms: false,\n\t\t\tprogramsRaw: false,\n\t\t}\n\t\tthis.setState = this.setState.bind(this);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tconst setState = this.setState;\n\t\tconst setAttributes = this.props.setAttributes;\n\n\t\t// Build Select Fields Data:\n\t\tgetTerms('Formats').then((data)=>{\n\t\t\tlet formatOptions = [];\n\n\t\t\tfor (let termID in data) {\n\t\t\t\t// skip loop if the property is from prototype\n\t\t\t\tif (!data.hasOwnProperty(termID)) continue;\n\t\t\t\n\t\t\t\tlet termObj = data[termID];\n\t\t\t\tformatOptions.push({\n\t\t\t\t\tvalue: termObj.id,\n\t\t\t\t\tlabel: termObj.name,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetState({ formatsRaw: data, formats: formatOptions });\n\t\t});\n\t\t\n\t\tgetTerms('Programs').then((data)=>{\n\t\t\tlet programOptions = [];\n\n\t\t\tdata[0] = {\n\t\t\t\tid: 0,\n\t\t\t\tname: 'All',\n\t\t\t\tslug: 'all',\n\t\t\t}\n\n\t\t\tfor (let termID in data) {\n\t\t\t\t// skip loop if the property is from prototype\n\t\t\t\tif (!data.hasOwnProperty(termID)) continue;\n\t\t\t\n\t\t\t\tlet termObj = data[termID];\n\t\t\t\tprogramOptions.push({\n\t\t\t\t\tvalue: termObj.id,\n\t\t\t\t\tlabel: termObj.name,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetState({ programsRaw: data, programs: programOptions });\n\t\t});\n\n\t\t// Initial Fetch Posts:\n\t\tif ( false === this.props.attributes.posts ) {\n\t\t\tgetPosts(this.props.attributes.per_page, this.props.attributes.format, this.props.attributes.program, this.props.attributes.taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\tsetAttributes({posts});\n\t\t\t});\n\t\t\tif ( true === this.props.className.includes('is-style-fact-tank') ) {\n\t\t\t\tsetAttributes({format: 10818955});\n\t\t\t\tgetPosts(this.props.attributes.per_page, this.props.attributes.format, 10818955, this.props.attributes.taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\t\tsetAttributes({posts});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// Insert a story block as a column \n\tinsertStoryBlock = (blockClientID, item, index) => {\n\t\tconsole.log('Insert Story Block');\n\n\t\tconst parentID = window.wp.data.select('core/block-editor').getBlockHierarchyRootClientId( clientID );\n\t\tconst parentBlockOrder = window.wp.data.select('core/block-editor').getBlockOrder(parentID);\n\t\tconst parentBlock = window.wp.data.select('core/block-editor').getBlock(parentBlockOrder[1]);\n\n\t\tconsole.log(parentBlockOrder[1]);\n\t\tconsole.log(parentBlock);\n\t\tconsole.log(parentID);\n\t\t\n\t\tlet block = window.wp.blocks.createBlock( 'prc-block/story-item', {\n\t\t\ttitle: item.title,\n\t\t\timage: item.image,\n\t\t\texcerpt: item.excerpt,\n\t\t\tlink: item.link,\n\t\t\tlabel: item.label,\n\t\t\tdate: item.date,\n\t\t\textra: '',\n\t\t\t// Post Meta Data:\n\t\t\tpostID: item.id,\n\t\t\t// Item Options\n\t\t\temphasis: false,\n\t\t\tisChartArt: false,\n\t\t\timageSlot: 'top',\n\t\t\thorizontal: false,\n\t\t\tstacked: true,\n\t\t\tenableHeader: true,\n\t\t\tenableExcerpt: false,\n\t\t\tenableExtra: false,\n\t\t\tenableProgramsTaxonomy: false,\n\t\t\theaderSize: 'normal',\n\t\t} );\n\n\t\twindow.wp.data.dispatch('core/block-editor').insertBlocks(block, index, blockClientID);\n\t}\n\n\trender = () => {\n\t\tconst setAttributes = this.props.setAttributes;\n\t\tconst backgrounds = [\n\t\t\t{ name: 'White', color: '#fff' },\n\t\t\t{ name: 'Oatmeal', color: '#f8f9f5' },\n\t\t];\n\t\t// If the style is fact-tank then the format should be set to fact-tank\n\t\treturn(\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Posts Block Options' ) }>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\tvalue={ this.props.attributes.title }\n\t\t\t\t\t\tonChange={ ( title ) => setAttributes( { title } ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel=\"Number of Posts\"\n\t\t\t\t\t\tvalue={ Number(this.props.attributes.per_page) }\n\t\t\t\t\t\tonChange={ ( per_page ) => { \n\t\t\t\t\t\t\tsetAttributes( { per_page: Number(per_page) } );\n\t\t\t\t\t\t\tgetPosts(per_page, this.props.attributes.formatID, this.props.attributes.programID, this.props.attributes.taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\t\t\t\t\tsetAttributes({posts});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Format\"\n\t\t\t\t\t\tvalue={ this.props.attributes.formatID }\n\t\t\t\t\t\toptions={ this.state.formats }\n\t\t\t\t\t\tonChange={ ( format ) => { \n\t\t\t\t\t\t\tlet f = this.state.formatsRaw[Number(format)];\n\t\t\t\t\t\t\tsetAttributes( { formatID: f.id, formatSlug: f.slug, format: f.name } );\n\t\t\t\t\t\t\tgetPosts(this.props.attributes.per_page, f.id, this.props.attributes.programID, this.props.attributes.taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\t\t\t\t\tsetAttributes({posts});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Research Program\"\n\t\t\t\t\t\tvalue={ this.props.attributes.programID }\n\t\t\t\t\t\toptions={ this.state.programs }\n\t\t\t\t\t\tonChange={ ( program ) => {\n\t\t\t\t\t\t\tlet p = this.state.programsRaw[Number(program)];\n\t\t\t\t\t\t\tsetAttributes( { programID: p.id, programSlug: p.slug, program: p.name } );\n\t\t\t\t\t\t\tgetPosts(this.props.attributes.per_page, this.props.attributes.formatID, p.id, this.props.attributes.taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\t\t\t\t\tsetAttributes({posts});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Label Taxonomy\"\n\t\t\t\t\t\tvalue={ this.props.attributes.taxonomyToDisplay }\n\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t{ label: 'Formats', value: 'formats' },\n\t\t\t\t\t\t\t{ label: 'Programs', value: 'programs' },\n\t\t\t\t\t\t] }\n\t\t\t\t\t\tonChange={ ( taxonomyToDisplay ) => { \n\t\t\t\t\t\t\tsetAttributes( { taxonomyToDisplay } );\n\t\t\t\t\t\t\tgetPosts(this.props.attributes.per_page, this.props.attributes.formatID, this.props.attributes.programID, taxonomyToDisplay, true).then( (posts) => {\n\t\t\t\t\t\t\t\tsetAttributes({posts});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Dynamic Mode\"\n\t\t\t\t\t\thelp={ this.props.attributes.dynamic ? 'Updates posts in real time, every 5 minutes.' : 'Posts are saved statically (will not update in real time).' }\n\t\t\t\t\t\tchecked={ this.props.attributes.dynamic }\n\t\t\t\t\t\tonChange={ () => setAttributes({ dynamic: ! this.props.attributes.dynamic }) }\n\t\t\t\t\t/>\n\t\t\t\t\t<strong>Background Color:</strong><br/>\n\t\t\t\t\t<ColorPalette\n\t\t\t\t\t\tcolors={ backgrounds }\n\t\t\t\t\t\tvalue={ this.props.attributes.backgroundColor }\n\t\t\t\t\t\tonChange={ ( color ) => setAttributes( { backgroundColor: color } ) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t)\n\t}\n}\n\n/**\n * Register: aa Gutenberg Block.\n *\n * Registers a new block provided a unique name and an object defining its\n * behavior. Once registered, the block is made editor as an option to any\n * editor interface where blocks are implemented.\n *\n * @link https://wordpress.org/gutenberg/handbook/block-api/\n * @param  {string}   name     Block name.\n * @param  {Object}   settings Block settings.\n * @return {?WPBlock}          The block, if it has been successfully\n *                             registered; otherwise `undefined`.\n */\nregisterBlockType( 'prc-block/posts', {\n\t// Block name. Block names must be string that contains a namespace prefix. Example: my-plugin/my-custom-block.\n\ttitle: __( 'Posts Block' ), // Block title.\n\ticon: 'align-left', // Block icon from Dashicons → https://developer.wordpress.org/resource/dashicons/.\n\tcategory: 'widgets', // Block category — Group blocks together based on common traits E.g. common, formatting, layout, widgets, embed.\n\tkeywords: [\n\t\t__( 'prc' ),\n\t\t__( 'fact tank' ),\n\t\t__( 'posts listing' ),\n\t\t__( 'posts' ),\n\t\t__( 'posts widget' ),\n\t\t__( 'publication listing' ),\n\t],\n\tstyles: [\n\t\t{\n\t\t\tname: 'list',\n\t\t\tlabel: 'Simple List',\n\t\t\tisDefault: true,\n\t\t},\n\t\t{\n\t\t\tname: 'fact-tank',\n\t\t\tlabel: 'Fact Tank',\n\t\t},\n\t\t{\n\t\t\tname: 'columns',\n\t\t\tlabel: 'Columns',\n\t\t},\n\t\t// {\n\t\t// \tname: 'publication-listing',\n\t\t// \tlabel: 'Publication Listing',\n\t\t// },\n\t],\n\tsupports: {\n\t\thtml: false, // We do not want to give people the ability to edit the raw html of this block.\n\t},\n\t// Attributes are really react props. \n\tattributes: {\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Title',\n\t\t},\n\t\tmoreLink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\tformatID: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 10818957, // Report\n\t\t},\n\t\tformatSlug: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'report',\n\t\t},\n\t\tformat: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Report',\n\t\t},\n\t\tprogramID: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0, // All\n\t\t},\n\t\tprogramSlug: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\tprogram: {\n\t\t\ttype: 'string',\n\t\t\tdefault: '',\n\t\t},\n\t\tper_page: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 5,\n\t\t},\n\t\tbackgroundColor: {\n\t\t\ttyle: 'string',\n\t\t\tdefault: '#fff',\n\t\t},\n\t\t// If static is true then we should output on save only a holder div that would contain the options and the style template to use and then the frontend loader will load the posts. This mean will be \n\t\tdynamic: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t\ttaxonomyToDisplay: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'formats',\n\t\t},\n\t\tposts: {\n\t\t\ttype: 'array',\n\t\t\tdefault: false,\n\t\t}\n\t},\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * The \"edit\" property must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Component.\n\t */\n\tedit: ( props ) => {\n\t\tconst data = props.attributes;\n\t\tlet style = props.attributes.className;\n\t\tlet isFactTank = false;\n\t\tif ( undefined !== style && style.includes('is-style-fact-tank') ) {\n\t\t\tisFactTank = true;\n\t\t}\n\t\tlet isList = false;\n\t\tif ( undefined === style || style.includes('is-style-list') ) {\n\t\t\tisList = true;\n\t\t}\n\t\tlet isColumns = false;\n\t\tif ( undefined !== style && style.includes('is-style-columns') ) {\n\t\t\tisColumns = true;\n\t\t}\n\t\tdata.className = style;\n\n\t\tif ( true === props.isSelected ) {\n\t\t\tdata.setAttributes = props.setAttributes;\n\t\t}\n\n\t\tdata.clientID = props.clientId;\n\n\t\tdata.disableLink = true; // While editing we do not want users to accidentally click on a post.\n\t\treturn(\n\t\t\t<Fragment>\n\t\t\t\t{ true === props.isSelected && (\n\t\t\t\t\t<EditSidebar {...props}/>\n\t\t\t\t) }\n\t\t\t\t<div className={data.className}>\n\t\t\t\t\t{ true === isFactTank && (\n\t\t\t\t\t\t<FactTankList {...data}/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ true === isList && (\n\t\t\t\t\t\t<PostsList {...data}/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ true === isColumns && (\n\t\t\t\t\t\t<PostsColumns {...data}/>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t},\n\t\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by Gutenberg into post_content.\n\t *\n\t * The \"save\" property must be specified and must be a valid function.\n\t *\n\t * @link https://wordpress.org/gutenberg/handbook/block-api/block-edit-save/\n\t *\n\t * @param {Object} props Props.\n\t * @returns {Mixed} JSX Frontend HTML.\n\t */\n\tsave: ( props ) => {\n\t\tconst data = props.attributes;\n\n\t\tlet style = props.attributes.className;\n\t\tlet isFactTank = false;\n\t\tif ( undefined !== style && style.includes('is-style-fact-tank') ) {\n\t\t\tisFactTank = true;\n\t\t}\n\t\tlet isList = false;\n\t\tif ( undefined !== style && style.includes('is-style-list') ) {\n\t\t\tisList = true;\n\t\t}\n\t\tlet isColumns = false;\n\t\tif ( undefined !== style && style.includes('is-style-columns') ) {\n\t\t\tisColumns = true;\n\t\t}\n\t\tdata.className = style;\n\n\t\tdata.disableLink = false;\n\t\treturn (\n\t\t\t<div className={data.className}>\n\t\t\t\t{ true !== props.attributes.dynamic && true === isFactTank && (\n\t\t\t\t\t<FactTankList {...data}/>\n\t\t\t\t) }\n\t\t\t\t{ true !== props.attributes.dynamic && true === isList && (\n\t\t\t\t\t<PostsList {...data}/>\n\t\t\t\t) }\n\t\t\t\t{ true !== props.attributes.dynamic && true === isColumns && (\n\t\t\t\t\t<PostsColumns {...data}/>\n\t\t\t\t) }\n\t\t\t\t{ true === props.attributes.dynamic && (\n\t\t\t\t\t<div className='js-react-posts-block'\n\t\t\t\t\t\tdata-title={props.attributes.title}\n\t\t\t\t\t\tdata-format={props.attributes.format}\n\t\t\t\t\t\tdata-format-id={props.attributes.formatID}\n\t\t\t\t\t\tdata-format-slug={props.attributes.formatSlug}\n\t\t\t\t\t\tdata-program={props.attributes.program}\n\t\t\t\t\t\tdata-program-id={props.attributes.programID}\n\t\t\t\t\t\tdata-program-slug={props.attributes.programSlug}\n\t\t\t\t\t\tdata-number={props.attributes.per_page}\n\t\t\t\t\t\tdata-background={props.attributes.backgroundColor}\n\t\t\t\t\t\tdata-style={style}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t},\n} );\n","module.exports = wp.components;","module.exports = wp.i18n;","module.exports = moment;","module.exports = wp.data;","module.exports = wp.element;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.blockEditor;","module.exports = wp.apiFetch;","module.exports = wp.url;"],"sourceRoot":""}