{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.domReady\"","webpack:///./src/posts/frontend.js","webpack:///external \"lodash\"","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.element\"","webpack:///external \"moment\"","webpack:///external \"wp.data\"","webpack:///external \"ReactDOM\"","webpack:///external \"wp.blocks\"","webpack:///external \"wp.apiFetch\"","webpack:///external \"wp.url\"","webpack:///external \"wp.components\""],"names":["module","exports","React","wp","i18n","domReady","DynamicPosts","props","setState","getPosts","per_page","formatID","programID","then","posts","setInterval","state","fetchInterval","bind","data","this","disableLiink","isFactTank","undefined","style","includes","isList","isColumns","Component","document","querySelector","querySelectorAll","forEach","elm","console","log","title","getAttribute","format","formatSlug","program","programSlug","backgroundColor","render","lodash","blockEditor","element","moment","ReactDOM","blocks","apiFetch","url","components"],"mappings":";;;;;;;;;;;;;;;;;mHAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,M,kBCApBJ,EAAOC,QAAUE,GAAGE,U,kpBCQdC,E,wCACF,WAAYC,GAAQ,IAAD,6BACf,cAAMA,GADS,gDASC,WAAO,IACfC,EADc,eACdA,SAERC,YACI,EAAKF,MAAMG,SACX,EAAKH,MAAMI,SACX,EAAKJ,MAAMK,UACX,WACA,GACFC,MAAK,SAAAC,GACHN,EAAS,CAAEM,aAGfC,aAAY,WACRN,YACI,EAAKF,MAAMG,SACX,EAAKH,MAAMI,SACX,EAAKJ,MAAMK,UACX,WACA,GACFC,MAAK,SAAAC,GACHN,EAAS,CAAEM,eAEhB,EAAKE,MAAMC,kBA9Bd,EAAKD,MAAQ,CACTF,OAAO,EACPG,cAAe,KAEnB,EAAKT,SAAW,EAAKA,SAASU,KAAd,gBAND,E,0CAmCnB,WACI,IAAMC,EAAOC,KAAKb,MAClBY,EAAKL,MAAQM,KAAKJ,MAAMF,MACxBK,EAAKE,cAAe,EAEpB,IAAIC,GAAa,OAEbC,IAAcH,KAAKb,MAAMiB,OACzBJ,KAAKb,MAAMiB,MAAMC,SAAS,wBAE1BH,GAAa,GAEjB,IAAII,GAAS,OAETH,IAAcH,KAAKb,MAAMiB,OACzBJ,KAAKb,MAAMiB,MAAMC,SAAS,mBAE1BC,GAAS,GAEb,IAAIC,GAAY,EAOhB,YALIJ,IAAcH,KAAKb,MAAMiB,OACzBJ,KAAKb,MAAMiB,MAAMC,SAAS,sBAE1BE,GAAY,GAGZ,oBAAC,WAAD,MACK,IAASL,GAAc,oBAAC,IAAiBH,IACzC,IAASO,GAAU,oBAAC,IAAcP,IAClC,IAASQ,GAAa,oBAAC,IAAiBR,Q,GAlE9BS,aAwE3BvB,KAAS,WACDwB,SAASC,cAAc,0BACVD,SAASE,iBAAiB,yBAClCC,SAAQ,SAAAC,GACTC,QAAQC,IAAI,iBACZD,QAAQC,IAAIF,GACZ,IAAM1B,EAAQ,CACV6B,MAAOH,EAAII,aAAa,cACxBC,OAAQL,EAAII,aAAa,eACzB1B,SAAUsB,EAAII,aAAa,kBAC3BE,WAAYN,EAAII,aAAa,oBAC7BG,QAASP,EAAII,aAAa,gBAC1BzB,UAAWqB,EAAII,aAAa,mBAC5BI,YAAaR,EAAII,aAAa,qBAC9B3B,SAAUuB,EAAII,aAAa,eAC3BK,gBAAiBT,EAAII,aAAa,mBAClCb,MAAOS,EAAII,aAAa,eAE5BH,QAAQC,IAAI5B,GACZoC,iBAAO,oBAACrC,EAAiBC,GAAW0B,U,iBCnGhDjC,EAAOC,QAAU2C,Q,iBCAjB5C,EAAOC,QAAUE,GAAG0C,a,gBCApB7C,EAAOC,QAAUE,GAAG2C,S,iBCApB9C,EAAOC,QAAU8C,Q,iBCAjB/C,EAAOC,QAAUE,GAAGgB,M,iBCApBnB,EAAOC,QAAU+C,U,iBCAjBhD,EAAOC,QAAUE,GAAG8C,Q,iBCApBjD,EAAOC,QAAUE,GAAG+C,U,iBCApBlD,EAAOC,QAAUE,GAAGgD,K,gBCApBnD,EAAOC,QAAUE,GAAGiD,a","file":"posts/frontend-8f62c170.js","sourcesContent":["module.exports = React;","module.exports = wp.i18n;","module.exports = wp.domReady;","import { render, Component, Fragment } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\nimport { getPosts } from '../_shared';\n\nimport PostsList from './styles/list';\nimport FactTankList from './styles/fact-tank';\nimport PostsColumns from './styles/columns';\n\nclass DynamicPosts extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: false,\n            fetchInterval: 50000, // In minutes @TODO on production change this to 5 minutes and not 5 seconds\n        };\n        this.setState = this.setState.bind(this);\n    }\n\n    componentDidMount = () => {\n        const { setState } = this;\n        // Fetch immediately, then fetch every x milliseconds.\n        getPosts(\n            this.props.per_page,\n            this.props.formatID,\n            this.props.programID,\n            'formats',\n            true,\n        ).then(posts => {\n            setState({ posts });\n        });\n\n        setInterval(() => {\n            getPosts(\n                this.props.per_page,\n                this.props.formatID,\n                this.props.programID,\n                'formats',\n                true,\n            ).then(posts => {\n                setState({ posts });\n            });\n        }, this.state.fetchInterval);\n    };\n\n    render() {\n        const data = this.props;\n        data.posts = this.state.posts;\n        data.disableLiink = false;\n\n        let isFactTank = false;\n        if (\n            undefined !== this.props.style &&\n            this.props.style.includes('is-style-fact-tank')\n        ) {\n            isFactTank = true;\n        }\n        let isList = false;\n        if (\n            undefined !== this.props.style &&\n            this.props.style.includes('is-style-list')\n        ) {\n            isList = true;\n        }\n        let isColumns = false;\n        if (\n            undefined !== this.props.style &&\n            this.props.style.includes('is-style-columns')\n        ) {\n            isColumns = true;\n        }\n        return (\n            <Fragment>\n                {true === isFactTank && <FactTankList {...data} />}\n                {true === isList && <PostsList {...data} />}\n                {true === isColumns && <PostsColumns {...data} />}\n            </Fragment>\n        );\n    }\n}\n\ndomReady(() => {\n    if (document.querySelector('.js-react-posts-block')) {\n        const elms = document.querySelectorAll('.js-react-posts-block');\n        elms.forEach(elm => {\n            console.log('Dynamic Posts');\n            console.log(elm);\n            const props = {\n                title: elm.getAttribute('data-title'),\n                format: elm.getAttribute('data-format'),\n                formatID: elm.getAttribute('data-format-id'),\n                formatSlug: elm.getAttribute('data-format-slug'),\n                program: elm.getAttribute('data-program'),\n                programID: elm.getAttribute('data-program-id'),\n                programSlug: elm.getAttribute('data-program-slug'),\n                per_page: elm.getAttribute('data-number'),\n                backgroundColor: elm.getAttribute('data-background'),\n                style: elm.getAttribute('data-style'),\n            };\n            console.log(props);\n            render(<DynamicPosts {...props} />, elm);\n        });\n    }\n});\n","module.exports = lodash;","module.exports = wp.blockEditor;","module.exports = wp.element;","module.exports = moment;","module.exports = wp.data;","module.exports = ReactDOM;","module.exports = wp.blocks;","module.exports = wp.apiFetch;","module.exports = wp.url;","module.exports = wp.components;"],"sourceRoot":""}