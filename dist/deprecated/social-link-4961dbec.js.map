{"version":3,"sources":["webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"primitives\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"components\"]","webpack:///./src/_deprecated/social-link/edit.js","webpack:///./src/_deprecated/social-link/index.js","webpack:///./src/_deprecated/social-link/save.js","webpack:///external \"React\"","webpack:///external [\"wp\",\"blocks\"]"],"names":["module","exports","window","edit","attributes","setAttributes","className","isSelected","description","title","icon","blockProps","useBlockProps","classnames","useSelect","select","console","log","meta","getEditedPostAttribute","bitly","undefined","hasOwnProperty","t","postTitle","shortUrl","useEffect","url","__","value","onChange","descriptionValue","label","help","titleValue","autoComplete","options","i","Icon","name","metadata","settings","shareIcon","__experimentalLabel","merge","leftAttributes","rightLabel","save","registerBlockType"],"mappings":";;;;;;;;;;;;;;;;;6HAAcA,EAAOC,QAAUC,OAAW,GAAQ,M,iBCApCF,EAAOC,QAAUC,OAAW,GAAQ,M,iBCApCF,EAAOC,QAAUC,OAAW,GAAc,Y,gBCA1CF,EAAOC,QAAUC,OAAW,GAAW,S,+ZCAvCF,EAAOC,QAAUC,OAAW,GAAe,a,yDCA3CF,EAAOC,QAAUC,OAAW,GAAc,Y,sIC2FzCC,EAxEF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC1CC,EAA6BJ,EAA7BI,YAAaC,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,KACtBC,EAAaC,wBAAc,CAC7BN,UAAWO,IAAW,OAAQP,EAAW,CACrC,cAAeC,MAIvB,EAAgCO,qBAAU,SAAAC,GACtCC,QAAQC,IAAI,kBACZ,IAAMC,EAAOH,EAAO,eAAeI,uBAAuB,QACtDC,GAAQ,OACPC,IAAcH,GAAQA,EAAKI,eAAe,WAC3CF,EAAQF,EAAKE,OAEjB,IAAMG,EAAIR,EAAO,eAAeI,uBAAuB,SACvD,MAAO,CACHK,UAAWD,IAAQ,EACnBE,SAAUL,IAAgB,MAV1BI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAoBnB,OANAC,qBAAU,YACD,IAAUF,IAAa,IAAUC,GAClCpB,EAAc,CAAEsB,IAAKF,EAAUhB,MAAOe,MAE3C,CAACA,EAAWC,IAGX,oBAAC,WAAD,KACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWhB,MAAOmB,aAAG,kBACjB,oBAAC,kBAAD,CACIC,MAAOrB,GAAe,GACtBsB,SAAU,SAAAC,GACN1B,EAAc,CAAEG,YAAauB,KAEjCC,MAAOJ,aAAG,eACVK,KAAML,aACF,qFAGR,oBAAC,cAAD,CACIC,MAAOpB,GAAS,GAChBqB,SAAU,SAAAI,GACN7B,EAAc,CAAEI,MAAOyB,KAE3BF,MAAOJ,aAAG,cACVO,aAAa,QAEjB,oBAAC,gBAAD,CACIH,MAAM,cACNH,MAAOnB,EACP0B,QAAS,CACL,CAAEJ,MAAO,yBAA0BH,MAAO,IAC1C,CAAEG,MAAO,WAAYH,MAAO,YAC5B,CAAEG,MAAO,UAAWH,MAAO,WAC3B,CAAEG,MAAO,WAAYH,MAAO,YAC5B,CAAEG,MAAO,QAASH,MAAO,UAE7BC,SAAU,SAAAO,GAAC,OAAIhC,EAAc,CAAEK,KAAM2B,SAKjD,0BAAS1B,EACL,oBAAC2B,EAAA,EAAD,CAAMC,KAAM7B,O,ykBCvE5B,IAAQ6B,EAASC,EAATD,KAEFE,EAAW,CACbhC,MAAOmB,aAAG,eACVlB,KAAMgC,IACNlC,YAAaoB,aACT,sDAEJe,oBAAqB,qBAAGX,OACxBY,MAPa,SAOPC,EAPO,GAOsC,IAAD,IAA1Bb,MAAOc,OAAmB,MAAN,GAAM,EAC9C,OAAO,EAAP,KACOD,GADP,IAEIb,MAAOa,EAAeb,MAAQc,KAGtC3C,OACA4C,KCzBW,WACX,OAAO,oBAAC,WAAD,QD2BXC,4BAAkBT,EAAD,OAAYC,GAAaC,K,gBEjC5BzC,EAAOC,QAAUC,OAAc,O,gBCA/BF,EAAOC,QAAUC,OAAW,GAAU,S","file":"deprecated/social-link-4961dbec.js","sourcesContent":["(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"primitives\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { Icon } from 'semantic-ui-react';\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n    PanelBody,\n    SelectControl,\n    TextControl,\n    TextareaControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { Fragment, useEffect } from '@wordpress/element';\n\nconst edit = ({ attributes, setAttributes, className, isSelected }) => {\n    const { description, title, icon } = attributes;\n    const blockProps = useBlockProps({\n        className: classnames('item', className, {\n            'is-selected': isSelected,\n        }),\n    });\n\n    const { postTitle, shortUrl } = useSelect(select => {\n        console.log(\"Getting things\");\n        const meta = select('core/editor').getEditedPostAttribute('meta');\n        let bitly = false;\n        if ( undefined !== meta && meta.hasOwnProperty('bitly') ) {\n            bitly = meta.bitly;\n        }\n        const t = select('core/editor').getEditedPostAttribute('title');\n        return {\n            postTitle: t ? t : false,\n            shortUrl: bitly ? bitly : false,\n        };\n    });\n\n    useEffect(() => {\n        if ( false !== postTitle && false !== shortUrl ) {\n            setAttributes({ url: shortUrl, title: postTitle });\n        }\n    }, [postTitle, shortUrl]);\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title={__('Link settings')}>\n                    <TextareaControl\n                        value={description || ''}\n                        onChange={descriptionValue => {\n                            setAttributes({ description: descriptionValue });\n                        }}\n                        label={__('Description')}\n                        help={__(\n                            'The description will be displayed in the menu if the current theme supports it.',\n                        )}\n                    />\n                    <TextControl\n                        value={title || ''}\n                        onChange={titleValue => {\n                            setAttributes({ title: titleValue });\n                        }}\n                        label={__('Link title')}\n                        autoComplete=\"off\"\n                    />\n                    <SelectControl\n                        label=\"Select Icon\"\n                        value={icon}\n                        options={[\n                            { label: '(Click to select icon)', value: '' },\n                            { label: 'Facebook', value: 'facebook' },\n                            { label: 'Twitter', value: 'twitter' },\n                            { label: 'LinkedIn', value: 'linkedin' },\n                            { label: 'Print', value: 'print' },\n                        ]}\n                        onChange={i => setAttributes({ icon: i })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <Icon name={icon} />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { share as shareIcon } from '@wordpress/icons';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\n\nconst { name } = metadata;\n\nconst settings = {\n    title: __('Social Link'),\n    icon: shareIcon,\n    description: __(\n        'DEPRECATED: Use core \"social links\" block instead.',\n    ),\n    __experimentalLabel: ({ label }) => label,\n    merge(leftAttributes, { label: rightLabel = '' }) {\n        return {\n            ...leftAttributes,\n            label: leftAttributes.label + rightLabel,\n        };\n    },\n    edit,\n    save,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\n\nexport default function save() {\n    return <Fragment/>;\n}\n","(function() { module.exports = window[\"React\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());"],"sourceRoot":""}