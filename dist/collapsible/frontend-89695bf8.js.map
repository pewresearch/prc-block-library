{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.blockEditor\"","webpack:///./src/collapsible/frontend.js","webpack:///./src/collapsible/component.js","webpack:///external \"wp.element\""],"names":["module","exports","React","wp","domReady","blockEditor","document","querySelector","querySelectorAll","elm","console","log","children","innerHTML","title","getAttribute","className","render","setAttributes","ALLOWED_BLOCKS","AccordionBlock","defaultOpen","useState","open","setState","icon","Title","name","onClick","tagName","value","onChange","t","placeholder","formattingControls","keepPlaceholderOnFocus","style","display","marginLeft","Content","allowedBlocks","styled","active","index","element"],"mappings":";;;;;;;;;;;;;;;;;+HAAAA,EAAOC,QAAUC,O,kBCAjBF,EAAOC,QAAUE,GAAGC,U,iBCApBJ,EAAOC,QAAUE,GAAGE,a,0lCCIpBD,KAAU,WACN,GAAIE,SAASC,cAAc,yBAA0B,CACjD,IADiD,MACpCD,SAASE,iBAAiB,0BADU,IAEjD,2BAAwB,CAAC,IAAdC,EAAa,QACpBC,QAAQC,IAAIF,GACZ,IAAMG,EAAWH,EAAII,UACfC,EAAQL,EAAIM,aAAa,cACzBC,EAAYP,EAAIM,aAAa,cACnCE,iBACI,oBAAC,IAAD,CAAgBH,MAAOA,EAAOE,UAAWA,EAAWE,eAAe,GAAQN,GAC3EH,IATyC,oC,2ECDnDU,EAAiB,CAAC,iBAAkB,eAAgB,YAAa,oBAgFxDC,IA9EQ,SAAC,GAA8E,IAA7EN,EAA4E,EAA5EA,MAAOE,EAAqE,EAArEA,UAAWJ,EAA0D,EAA1DA,SAA0D,IAAhDM,qBAAgD,aAAzBG,mBAAyB,WACtEC,mBAASD,GAD6D,mBACzFE,EADyF,KACnFC,EADmF,KAG7FC,EAAOF,EAAO,aAAe,cAC5B,uBAAyBP,IAC1BS,EAAOF,EAAO,QAAU,QAG5B,IAAMG,EAAQ,WACV,OACI,oBAAC,WAAD,KACM,uBAAyBV,GACvB,oBAAC,IAAD,CAAMW,KAAMF,EAAMG,QAAU,YACnB,IAAUV,GACXM,GAAYD,OAItB,IAAUL,GACR,oBAAC,WAAD,CACIW,QAAQ,MACRC,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAId,EAAc,CAAEJ,MAAOkB,KACtCC,YAAY,kBACZC,mBAAoB,GACpBC,wBAAsB,EACtBC,MAAO,CACHC,QAAS,mBAInB,IAAUnB,GACR,gCAAOJ,GAET,uBAAyBE,GACvB,oBAAC,IAAD,CAAMW,KAAMF,EAAMW,MAAO,CAACE,WAAY,SAAUV,QAAU,YACjD,IAAUV,GACXM,GAAYD,QAQ9BgB,EAAU,WACZ,OACI,oBAAC,WAAD,MACM,IAAUrB,GACR,oBAAC,cAAD,CAAasB,cAAerB,KAE9B,IAAUD,GACR,oBAAC,UAAD,KAAUN,KAM1B,OACI,oBAAC,IAAD,CAAW6B,QAAM,GACb,oBAAC,IAAUf,MAAX,CACAgB,QAAiB,IAATnB,EACRoB,MAAO,EACPf,QAAU,YACD,IAAUV,GACXM,GAAYD,KAIjB,oBAACG,EAAD,OAEH,oBAAC,IAAUa,QAAX,CAAmBG,QAAkB,IAATnB,GACxB,oBAACgB,EAAD,U,gBC9EhBvC,EAAOC,QAAUE,GAAGyC,U","file":"collapsible/frontend-89695bf8.js","sourcesContent":["module.exports = React;","module.exports = wp.domReady;","module.exports = wp.blockEditor;","import { render } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\nimport AccordionBlock from './component';\n\ndomReady( function() {\n    if (document.querySelector('.js-react-collapsible')) {\n        const elms = document.querySelectorAll('.js-react-collapsible');\n        for (const elm of elms) {\n            console.log(elm);\n            const children = elm.innerHTML;\n            const title = elm.getAttribute('data-title');\n            const className = elm.getAttribute('data-style');\n            render(\n                <AccordionBlock title={title} className={className} setAttributes={false}>{children}</AccordionBlock>,\n                elm,\n            );\n        }\n    }\n} );","import { InnerBlocks, RichText } from '@wordpress/block-editor';\nimport { useState, Fragment, RawHTML } from '@wordpress/element';\nimport { Accordion, Icon } from 'semantic-ui-react';\n\nconst ALLOWED_BLOCKS = ['core/paragraph', 'core/heading', 'core/list', 'prc-block/button'];\n\nconst AccordionBlock = ({title, className, children, setAttributes = false, defaultOpen = false}) => {\n    const [ open, setState ] = useState(defaultOpen);\n\n    let icon = open ? 'caret down' : 'caret right';\n    if ( 'is-style-alternate' === className ) {\n        icon = open ? 'minus' : 'plus';\n    }\n\n    const Title = () => {\n        return(\n            <Fragment>\n                { 'is-style-alternate' !== className && (\n                    <Icon name={icon} onClick={ () => {\n                        if ( false !== setAttributes ) {\n                            setState( ! open );\n                        }\n                    } }/>\n                ) }\n                { false !== setAttributes && (\n                    <RichText\n                        tagName=\"div\" // The tag here is the element output and editable in the admin\n                        value={title} // Any existing content, either from the database or an attribute default\n                        onChange={t => setAttributes({ title: t })} // Store updated content as a block attribute\n                        placeholder=\"How we did this\" // Display this text before any content has been added by the user\n                        formattingControls={[]}\n                        keepPlaceholderOnFocus\n                        style={{\n                            display: 'inline-block'\n                        }}\n                    />\n                ) }\n                { false === setAttributes  && (\n                    <span>{title}</span>\n                ) }\n                { 'is-style-alternate' === className && (\n                    <Icon name={icon} style={{marginLeft: '0.5em'}} onClick={ () => {\n                        if ( false !== setAttributes ) {\n                            setState( ! open );\n                        }\n                    } }/>\n                ) }\n            </Fragment>\n        );\n    }\n\n    const Content = () => {\n        return(\n            <Fragment>\n                { false !== setAttributes && (\n                    <InnerBlocks allowedBlocks={ALLOWED_BLOCKS}/>\n                ) }\n                { false === setAttributes && (\n                    <RawHTML>{children}</RawHTML>\n                ) }\n            </Fragment>\n        );\n    }\n\n    return( \n        <Accordion styled>\n            <Accordion.Title\n            active={open === true}\n            index={0}\n            onClick={ () => {\n                if ( false === setAttributes ) {\n                    setState( ! open );\n                }\n            } }\n            >\n               <Title/>\n            </Accordion.Title>\n            <Accordion.Content active={ open === true }>\n                <Content/>\n            </Accordion.Content>\n        </Accordion>\n    );\n}\n\nexport default AccordionBlock;","module.exports = wp.element;"],"sourceRoot":""}