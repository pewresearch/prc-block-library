{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./src/collapsible/edit.js","webpack:///./src/collapsible/save.js","webpack:///./src/collapsible/settings.js","webpack:///./src/collapsible/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///external \"wp.blockEditor\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.blocks\""],"names":["module","exports","React","wp","element","arr","edit","attributes","setAttributes","className","title","useState","open","setState","direction","Accordion","styled","Title","active","index","Icon","name","onClick","tagName","value","onChange","t","placeholder","formattingControls","keepPlaceholderOnFocus","style","display","Content","save","data-title","settings","__","description","category","keywords","_","supports","html","align","type","default","transforms","to","blocks","transform","innerBlocks","createBlock","registerBlockType","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","blockEditor","i18n"],"mappings":";;;;;;;;;;;;;;;;;+HAAAA,EAAOC,QAAUC,O,6DCAjBF,EAAOC,QAAUE,GAAGC,S,oECIuBC,E,yDC8B5BC,EA9BF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,WAAuBC,GAAmB,EAA9BC,UAA8B,EAAnBD,eAC1BE,EAAUH,EAAVG,MAD6C,EAE1BC,oBAAS,GAFiB,mBAE7CC,EAF6C,KAEvCC,EAFuC,KAGjDC,EAAYF,EAAO,OAAS,QAChC,OACI,oBAACG,EAAA,EAAD,CAAWC,QAAM,GACb,oBAACD,EAAA,EAAUE,MAAX,CACAC,QAAkB,IAAVN,EACRO,MAAO,GAEH,oBAACC,EAAA,EAAD,CAAMC,KAAM,SAAWP,EAAWQ,QAAU,kBAAMT,GAAYD,MAC9D,oBAAC,WAAD,CACIW,QAAQ,MACRC,MAAOd,EACPe,SAAU,SAAAC,GAAC,OAAIlB,EAAc,CAAEE,MAAOgB,KACtCC,YAAY,kBACZC,mBAAoB,GACpBC,wBAAsB,EACtBC,MAAO,CACHC,QAAS,mBAIrB,oBAAChB,EAAA,EAAUiB,QAAX,CAAmBd,QAAkB,IAATN,GACxB,oBAAC,cAAD,SCjBDqB,EATF,SAAC,GAAkB,IACpBvB,EADmB,EAAhBH,WACHG,MACR,OACI,2BAAKD,UAAU,uBAAuByB,aAAYxB,GAC9C,oBAAC,cAAYsB,QAAb,QCmCGG,EAnCE,CACb,wBACA,CACIzB,MAAO0B,aAAG,mBACVC,YAAaD,aACT,4DAEJE,SAAU,SACVC,SAAU,CAACH,aAAG,eAAgBA,aAAG,aAAcI,EAAE,oBACjDC,SAAU,CACNC,MAAM,EACNC,OAAO,GAEXpC,WAAY,CACRG,MAAO,CACHkC,KAAM,SACNC,QAAS,oBAGjBC,WAAY,CACRC,GAAI,CACA,CACIH,KAAM,QACNI,OAAQ,CAAE,qBACVC,UAAW,SAAU1C,EAAY2C,GAC7B,OAAOC,sBAAa,oBAAqB5C,EAAY2C,OAKrE5C,OACA2B,SClCRmB,oBAAiB,WAAjB,ECFe,SAA4B/C,GACzC,GAAIgD,MAAMC,QAAQjD,GAAM,OAAO,OAAAkD,EAAA,GAAiBlD,GLGzC,CADkCA,EIDtB8B,IEHN,SAA0BqB,GACvC,GAAsB,oBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GNIvD,CAAgBnD,IAAQ,OAAAwD,EAAA,GAA2BxD,IOLvE,WACb,MAAM,IAAIyD,UAAU,wIPIwE,K,iBQL9F9D,EAAOC,QAAUE,GAAG4D,a,iBCApB/D,EAAOC,QAAUE,GAAG6D,M,iBCApBhE,EAAOC,QAAUE,GAAG6C,S","file":"collapsible/main-402be18c.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import { InnerBlocks, RichText } from '@wordpress/block-editor';\nimport { useState } from '@wordpress/element';\nimport { Accordion, Icon } from 'semantic-ui-react';\n\nconst edit = ({attributes, className, setAttributes}) => {\n    const { title } = attributes;\n    const [ open, setState ] = useState(true);\n    let direction = open ? 'down' : 'right';\n    return( \n        <Accordion styled>\n            <Accordion.Title\n            active={open ===  true}\n            index={0}\n            >\n                <Icon name={'caret ' + direction} onClick={ () => setState( ! open ) } />\n                <RichText\n                    tagName=\"div\" // The tag here is the element output and editable in the admin\n                    value={title} // Any existing content, either from the database or an attribute default\n                    onChange={t => setAttributes({ title: t })} // Store updated content as a block attribute\n                    placeholder=\"How we did this\" // Display this text before any content has been added by the user\n                    formattingControls={[]}\n                    keepPlaceholderOnFocus\n                    style={{\n                        display: 'inline-block'\n                    }}\n                />\n            </Accordion.Title>\n            <Accordion.Content active={ open === true }>\n                <InnerBlocks/>\n            </Accordion.Content>\n        </Accordion>\n    );\n}\n\nexport default edit;","import { InnerBlocks } from '@wordpress/block-editor';\n\nconst save = ({attributes}) => {\n    const { title } = attributes;\n    return( \n        <div className=\"js-react-collapsible\" data-title={title}>\n            <InnerBlocks.Content/>\n        </div>\n    );\n}\n\nexport default save;","\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/collapsible',\n    {\n        title: __('PRC Collapsible'),\n        description: __(\n            'Add a block that displays content in a single accordion.'\n        ),\n        category: 'layout',\n        keywords: [__('Collapsible'), __('Accordion'), _('How we did this')],\n        supports: {\n            html: false,\n            align: false,\n        },\n        attributes: {\n            title: {\n                type: 'string',\n                default: 'How we did this',\n            }\n        },\n        transforms: {\n            to: [\n                {\n                    type: 'block',\n                    blocks: [ 'prc-block/callout' ],\n                    transform: function( attributes, innerBlocks ) {\n                        return createBlock( 'prc-block/callout', attributes, innerBlocks );\n                    },\n                },\n            ],\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = wp.blockEditor;","module.exports = wp.i18n;","module.exports = wp.blocks;"],"sourceRoot":""}