{"version":3,"sources":["webpack:///external \"wp.blockEditor\"","webpack:///./src/callout/helpers.js","webpack:///./src/callout/edit.js","webpack:///./src/callout/save.js","webpack:///./src/callout/settings.js","webpack:///./src/callout/index.js","webpack:///external \"wp.blocks\"","webpack:///external \"React\"","webpack:///external \"wp.components\"","webpack:///external \"wp.i18n\"","webpack:///external \"wp.element\""],"names":["module","exports","wp","blockEditor","isSize","target","value","parseInt","getClassName","className","size","classNames","ALLOWED_BLOCKS","TEMPLATE","content","level","Controls","setSize","title","__","label","options","onChange","s","edit","attributes","setAttributes","Segment","inverted","allowedBlocks","template","save","Content","settings","description","category","keywords","supports","html","align","transforms","to","type","blocks","transform","innerBlocks","createBlock","width","default","registerBlockType","React","components","i18n","element"],"mappings":";;;;;;;;;;;;;;;;;wHAAAA,EAAOC,QAAUC,GAAGC,a,qHCEdC,EAAS,SAACC,EAAQC,GACpB,OAAKC,SAASF,KAAYE,SAASD,IAOjCE,EAAe,SAACC,EAAWC,GAC7B,OAAOC,IAAWF,EAAW,CACzB,WAAYL,EAAO,IAAKM,GACxB,WAAYN,EAAO,IAAKM,GACxB,WAAYN,EAAO,IAAKM,GACxB,WAAYN,EAAO,IAAKM,MCR1BE,EAAiB,CACnB,aACA,iBACA,eACA,YACA,oBAGEC,EAAW,CAAC,CAAC,eAAgB,CAACC,QAAS,eAAgBC,MAAO,KAE9DC,EAAW,SAAC,GAAuB,IAArBN,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,QACtB,OACI,oBAAC,oBAAD,KACI,oBAAC,YAAD,CAAWC,MAAOC,aAAG,oBACjB,+BACI,oBAAC,gBAAD,CACAC,MAAM,OACNd,MAAQI,EACRW,QAAU,CACN,CAAED,MAAO,MAAOd,MAAO,KACvB,CAAEc,MAAO,MAAOd,MAAO,KACvB,CAAEc,MAAO,MAAOd,MAAO,KACvB,CAAEc,MAAO,MAAOd,MAAO,MAE3BgB,SAAW,SAAEC,GAASN,EAASM,UAoBpCC,EAZF,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYhB,EAA+B,EAA/BA,UAAWiB,EAAoB,EAApBA,cAC3BhB,EAASe,EAATf,KACR,OACI,oBAAC,WAAD,KACI,oBAAC,EAAD,CAAUA,KAAMA,EAAMO,QAAS,SAACM,GAAD,OAAOG,EAAc,CAAChB,KAAMa,OAC3D,oBAACI,EAAA,EAAD,CAASC,UAAQ,EAACnB,UAAWD,EAAa,GAAD,OAAIC,EAAJ,UAAuBC,IAC5D,oBAAC,cAAD,CAAamB,cAAejB,EAAgBkB,SAAUjB,OChCvDkB,EATF,SAAC,GAA+B,IAA7BtB,EAA4B,EAA5BA,UACJC,EADgC,EAAjBe,WACff,KACR,OACI,oBAACiB,EAAA,EAAD,CAASC,UAAQ,EAACnB,UAAWD,EAAa,GAAD,OAAIC,EAAJ,UAAuBC,IAC5D,oBAAC,cAAYsB,QAAb,QCoCGC,EAvCE,CACb,oBACA,CACIf,MAAOC,aAAG,eACVe,YAAaf,aACT,2DAEJgB,SAAU,SACVC,SAAU,CAACjB,aAAG,WAAYA,aAAG,YAC7BkB,SAAU,CACNC,MAAM,EACNC,MAAO,CAAC,OAAQ,UAEpBC,WAAY,CACRC,GAAI,CACA,CACIC,KAAM,QACNC,OAAQ,CAAC,yBACTC,UAHJ,SAGcnB,EAAYoB,GAClB,OAAOC,sBACH,wBACArB,EACAoB,OAMpBpB,WAAY,CACRsB,MAAO,CACHL,KAAM,UACNM,QAAS,MAGjBxB,OACAO,SCrCRkB,oBAAiB,WAAjB,cAAqBhB,K,iBCHrBjC,EAAOC,QAAUC,GAAGyC,Q,gBCApB3C,EAAOC,QAAUiD,O,iBCAjBlD,EAAOC,QAAUC,GAAGiD,Y,gBCApBnD,EAAOC,QAAUC,GAAGkD,M,iBCApBpD,EAAOC,QAAUC,GAAGmD,S","file":"callout/main-ce83069a.js","sourcesContent":["module.exports = wp.blockEditor;","import classNames from 'classnames/bind';\n\nconst isSize = (target, value) => {\n    if ( parseInt(target) === parseInt(value) ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst getClassName = (className, size) => {\n    return classNames(className, {\n        'size-200': isSize(200, size),\n        'size-310': isSize(310, size),\n        'size-420': isSize(420, size),\n        'size-640': isSize(640, size),\n    })\n}\n\nexport { isSize, getClassName };","import { __ } from '@wordpress/i18n';\nimport { InspectorControls, InnerBlocks } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl } from '@wordpress/components';\nimport { Segment } from 'semantic-ui-react';\nimport { Fragment } from '@wordpress/element';\nimport { getClassName } from './helpers';\n\nconst ALLOWED_BLOCKS = [\n    'core/image',\n    'core/paragraph',\n    'core/heading',\n    'core/list',\n    'prc-block/button',\n];\n\nconst TEMPLATE = [['core/heading', {content: 'Heading Here', level: 4}]];\n\nconst Controls = ({ size, setSize }) => {\n    return(\n        <InspectorControls>\n            <PanelBody title={__('Callout Options')}>\n                <div>\n                    <SelectControl\n                    label=\"Size\"\n                    value={ size }\n                    options={ [\n                        { label: '200', value: 200 },\n                        { label: '310', value: 310 },\n                        { label: '420', value: 420 },\n                        { label: '640', value: 640 },\n                    ] }\n                    onChange={ ( s ) => { setSize( s ) } }\n                    />\n                </div>\n            </PanelBody>\n        </InspectorControls>\n    );\n}\n\nconst edit = ({ attributes, className, setAttributes }) => {\n    const { size } = attributes;\n    return (\n        <Fragment>\n            <Controls size={size} setSize={(s) => setAttributes({size: s})}/>\n            <Segment inverted className={getClassName(`${className} beige`, size)}>\n                <InnerBlocks allowedBlocks={ALLOWED_BLOCKS} template={TEMPLATE}/>\n            </Segment>\n        </Fragment>\n    );\n};\n\nexport default edit;\n","import { InnerBlocks } from '@wordpress/block-editor';\nimport { Segment } from 'semantic-ui-react';\nimport { getClassName } from './helpers';\n\nconst save = ({ className, attributes }) => {\n    const { size } = attributes;\n    return (\n        <Segment inverted className={getClassName(`${className} beige`, size)}>\n            <InnerBlocks.Content />\n        </Segment>\n    );\n};\n\nexport default save;\n","import { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport edit from './edit';\nimport save from './save';\n\nconst settings = [\n    'prc-block/callout',\n    {\n        title: __('PRC Callout'),\n        description: __(\n            'Add a block that displays content in a oatmeal callout.',\n        ),\n        category: 'layout',\n        keywords: [__('Callout'), __('Segment')],\n        supports: {\n            html: false,\n            align: ['left', 'right'],\n        },\n        transforms: {\n            to: [\n                {\n                    type: 'block',\n                    blocks: ['prc-block/collapsible'],\n                    transform(attributes, innerBlocks) {\n                        return createBlock(\n                            'prc-block/collapsible',\n                            attributes,\n                            innerBlocks,\n                        );\n                    },\n                },\n            ],\n        },\n        attributes: {\n            width: {\n                type: 'integer',\n                default: 310,\n            },\n        },\n        edit,\n        save,\n    },\n];\n\nexport default settings;\n","import { registerBlockType } from '@wordpress/blocks';\nimport settings from './settings';\n\nregisterBlockType(...settings);\n","module.exports = wp.blocks;","module.exports = React;","module.exports = wp.components;","module.exports = wp.i18n;","module.exports = wp.element;"],"sourceRoot":""}