{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.domReady\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-form/frontend.js","webpack:///external \"ReactDOM\"","webpack:///./src/mailchimp-form/component.js","webpack:///external \"wp.apiFetch\""],"names":["module","exports","React","wp","domReady","element","document","querySelector","querySelectorAll","forEach","elm","props","display","interest","getAttribute","className","render","ReactDOM","MailchimpForm","useState","buttonText","changeButtonText","success","toggleSuccess","error","toggleError","loading","toggleLoading","emailAddress","setEmail","subscribed","name","onSubmit","e","preventDefault","email","setTimeout","apiFetch","path","method","then","catch","code","console","info","Field","Input","placeholder","type","data-validate","required","onChange","target","value","Button","secondary","positive","negative","icon"],"mappings":";;;;;;;;;;;;;;;;;2IAAAA,EAAOC,QAAUC,O,kBCAjBF,EAAOC,QAAUE,GAAGC,U,iBCApBJ,EAAOC,QAAUE,GAAGE,S,8ECApB,6CAMAD,KAAS,WACDE,SAASC,cAAc,uCACVD,SAASE,iBAClB,sCAECC,SAAQ,SAAAC,GACT,IAAMC,EAAQ,CACVC,SAAS,EACTC,SAAUH,EAAII,aAAa,mBAC3BC,UAAWL,EAAII,aAAa,UAEhCE,iBAAO,oBAAC,IAAkBL,GAAWD,U,iBCjBjDV,EAAOC,QAAUgB,U,2FCqFFC,IA/EO,SAAC,GAAsC,IAApCN,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,UAAgB,EACjBI,mBAAS,UADQ,mBACjDC,EADiD,KACrCC,EADqC,OAEvBF,oBAAS,GAFc,mBAEjDG,EAFiD,KAExCC,EAFwC,OAG3BJ,oBAAS,GAHkB,mBAGjDK,EAHiD,KAG1CC,EAH0C,OAIvBN,oBAAS,GAJc,mBAIjDO,EAJiD,KAIxCC,EAJwC,OAKvBR,mBAAS,IALc,mBAKjDS,EALiD,KAKnCC,EALmC,KAOlDC,EAAa,WACfL,GAAY,GACZE,GAAc,GACdJ,GAAc,GACdF,EAAiB,oBAAC,IAAD,CAAMU,KAAK,kBAC5BF,EAAS,KAsCb,OACI,2BAAKd,UAAWA,GACZ,oBAAC,IAAD,CAAMA,UAAU,YAAYS,MAAOA,EAAOQ,SArC5B,SAAAC,GAGlB,GAFAA,EAAEC,kBAEE,IAAStB,EAAb,CAIA,IAAMuB,EAAQP,EAEdD,GAAc,GAEdS,YAAW,WACPC,IAAS,CACLC,KAAK,0CAAD,OAA4CH,EAA5C,sBAA+DtB,GACnE0B,OAAQ,SAEPC,MAAK,WACFV,OAEHW,OAAM,SAAAR,GACHN,GAAc,GACV,qBAAuBM,EAAES,MACzBZ,IACAa,QAAQC,KAAR,UACOhB,EADP,kCAC6Cf,MAG7CU,GAAc,GACdE,GAAY,GACZJ,EAAiB,eAG9B,QAMK,oBAAC,IAAKwB,MAAN,KACI,oBAAC,IAAKC,MAAN,CACIC,YAAY,gBACZC,KAAK,QACLC,gBAAc,WACdC,UAAQ,EACRC,SAAU,SAAAlB,GACNJ,EAASI,EAAEmB,OAAOC,QAEtBA,MAAOzB,IAEX,oBAAC,IAAK0B,OAAN,CACIC,WAAS,EACTC,SAAUlC,EACVmC,SAAUjC,EACVE,QAASA,EACTgC,KAAMpC,GAELF,Q,iBC7EzBpB,EAAOC,QAAUE,GAAGkC,U","file":"mailchimp-form/frontend-740ae870.js","sourcesContent":["module.exports = React;","module.exports = wp.domReady;","module.exports = wp.element;","import { render } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\n\nimport MailchimpForm from './component';\n\n// When the document is fully loaded load the mailchimp-form.\ndomReady(() => {\n    if (document.querySelector('.wp-block-prc-block-mailchimp-form')) {\n        const elms = document.querySelectorAll(\n            '.wp-block-prc-block-mailchimp-form',\n        );\n        elms.forEach(elm => {\n            const props = {\n                display: true,\n                interest: elm.getAttribute('data-segment-id'),\n                className: elm.getAttribute('class'),\n            };\n            render(<MailchimpForm {...props} />, elm);\n        });\n    }\n});\n","module.exports = ReactDOM;","import { useState } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { Form, Icon } from 'semantic-ui-react';\n\nimport './style.scss';\n\nconst MailchimpForm = ({ display, interest, className }) => {\n    const [buttonText, changeButtonText] = useState('SIGNUP');\n    const [success, toggleSuccess] = useState(false);\n    const [error, toggleError] = useState(false);\n    const [loading, toggleLoading] = useState(false);\n    const [emailAddress, setEmail] = useState('');\n\n    const subscribed = () => {\n        toggleError(false);\n        toggleLoading(false);\n        toggleSuccess(true);\n        changeButtonText(<Icon name=\"check circle\" />);\n        setEmail('');\n    };\n\n    const submitHandler = e => {\n        e.preventDefault();\n\n        if (true !== display) {\n            return; // Never allow running this from inside Gutenberg.\n        }\n\n        const email = emailAddress;\n\n        toggleLoading(true);\n\n        setTimeout(() => {\n            apiFetch({\n                path: `/prc-api/v2/mailchimp/subscribe/?email=${email}&interests=${interest}`,\n                method: 'POST',\n            })\n                .then(() => {\n                    subscribed();\n                })\n                .catch(e => {\n                    toggleLoading(false);\n                    if ('add-member-error' === e.code) {\n                        subscribed();\n                        console.info(\n                            `${emailAddress} already subscribed to ${interest}`,\n                        );\n                    } else {\n                        toggleSuccess(false);\n                        toggleError(true);\n                        changeButtonText('ERROR');\n                    }\n                });\n        }, 2000);\n    };\n\n    return (\n        <div className={className}>\n            <Form className=\"mailchimp\" error={error} onSubmit={submitHandler}>\n                <Form.Field>\n                    <Form.Input\n                        placeholder=\"Email address\"\n                        type=\"email\"\n                        data-validate=\"mc-email\"\n                        required\n                        onChange={e => {\n                            setEmail(e.target.value);\n                        }}\n                        value={emailAddress}\n                    />\n                    <Form.Button\n                        secondary\n                        positive={success}\n                        negative={error}\n                        loading={loading}\n                        icon={success}\n                    >\n                        {buttonText}\n                    </Form.Button>\n                </Form.Field>\n            </Form>\n        </div>\n    );\n};\n\nexport default MailchimpForm;\n","module.exports = wp.apiFetch;"],"sourceRoot":""}