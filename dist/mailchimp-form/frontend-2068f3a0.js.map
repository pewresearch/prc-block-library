{"version":3,"sources":["webpack:///external \"React\"","webpack:///external \"wp.element\"","webpack:///./src/mailchimp-form/frontend.js","webpack:///external \"ReactDOM\"","webpack:///./src/mailchimp-form/component.js","webpack:///external \"lodash\""],"names":["module","exports","React","wp","element","document","addEventListener","querySelector","querySelectorAll","elm","props","display","interest","getAttribute","render","ReactDOM","MailchimpForm","withState","error","loading","emailAddress","dimmerActive","dimmerMessage","setState","Dimmable","as","id","dimmed","className","onSubmit","e","preventDefault","email","setTimeout","jQuery","ajax","url","window","siteURL","param","interests","type","done","console","info","fail","jqXHR","failState","responseJSON","code","always","Field","Input","placeholder","data-validate","required","onChange","target","value","Button","secondary","content","active","onClickOutside","lodash"],"mappings":";;;;;;;;;;;;;;;;;2IAAAA,EAAOC,QAAUC,O,iBCAjBF,EAAOC,QAAUE,GAAGC,S,0kCCIpBC,SAASC,iBAAiB,oBAAoB,WAC1C,GAAID,SAASE,cAAc,4BAA6B,CACpD,IADoD,MACvCF,SAASG,iBAAiB,6BADa,IAGpD,2BAAwB,CAAC,IAAdC,EAAa,QACdC,EAAQ,CACVC,SAAS,EACTC,SAAUH,EAAII,aAAa,oBAE/BC,iBAAO,oBAAC,IAAkBJ,GAAWD,IARW,oC,iBCL5DT,EAAOC,QAAUc,U,gCCAjB,6BAWMC,EAAgBC,YARD,CACjBC,OAAO,EACPC,SAAS,EACTC,aAAc,GACdC,cAAc,EACdC,cAAe,wBAGGL,EAAwB,YASnC,IARHN,EAQE,EARFA,QACAC,EAOE,EAPFA,SACAM,EAME,EANFA,MACAC,EAKE,EALFA,QACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,cACAC,EACE,EADFA,SA0DA,OACI,oBAAC,IAAOC,SAAR,CACIC,GAAG,MACHC,GAAG,oBACHC,OAAQN,GAER,oBAAC,IAAD,CACIO,UAAU,YACVV,MAAOA,EACPW,SAhEU,SAAAC,GAGlB,GAFAA,EAAEC,kBAEE,IAASpB,EAAb,CAKA,IAAMqB,EAAQZ,EAEdG,EAAS,CAAEJ,SAAS,IAEpBc,YAAW,WACPC,OACKC,KAAK,CACFC,IAAI,GAAD,OACCC,OAAOC,QADR,mDAEwCJ,OAAOK,MAC9C,CACIP,QACAQ,UAAW5B,KAEnB6B,KAAM,SAETC,MAAK,WACFC,QAAQC,KAAK,0BACbrB,EAAS,CACLD,cACI,2DAGXuB,MAAK,SAAAC,GACF,IAAMC,EAAY,CACd7B,OAAO,EACPI,cAAe,IAEf,qBAAuBwB,EAAME,aAAaC,KAC1CF,EAAUzB,cACN,+DAEJyB,EAAUzB,cACN,oGAERC,EAASwB,MAEZG,QAAO,WACJ3B,EAAS,CACLJ,SAAS,EACTC,aAAc,GACdC,cAAc,SAG3B,QAcK,oBAAC,IAAK8B,MAAN,KACI,oBAAC,IAAKC,MAAN,CACIC,YAAY,gBACZZ,KAAK,QACLa,gBAAc,WACdC,UAAQ,EACRC,SAAU,SAAA1B,GACNP,EAAS,CACLH,aAAcU,EAAE2B,OAAOC,SAG/BA,MAAOtC,IAEX,oBAAC,IAAKuC,OAAN,CACIC,WAAS,EACTzC,QAASA,EACT0C,QAAQ,cAKpB,oBAAC,IAAD,CACIC,OAAQzC,EACR0C,eAAgB,WACZxC,EAAS,CAAEF,cAAc,MAG7B,yBAAGO,UAAU,cACRN,EADL,0BASLN,O,iBC5HfhB,EAAOC,QAAU+D,S","file":"mailchimp-form/frontend-2068f3a0.js","sourcesContent":["module.exports = React;","module.exports = wp.element;","import { render } from '@wordpress/element';\nimport MailchimpForm from './component';\n\n// When the document is fully loaded load the mailchimp-form\ndocument.addEventListener('DOMContentLoaded', () => {\n    if (document.querySelector('.js-react-mailchimp-form')) {\n        const elms = document.querySelectorAll('.js-react-mailchimp-form',);\n        // eslint-disable-next-line no-restricted-syntax\n        for (const elm of elms) {\n            const props = {\n                display: true,\n                interest: elm.getAttribute('data-segment-id'),\n            };\n            render(<MailchimpForm {...props} />, elm);\n        }\n    }\n});\n","module.exports = ReactDOM;","import { withState } from '@wordpress/compose';\nimport { Form, Dimmer } from 'semantic-ui-react';\n\nconst defaultState = {\n    error: false,\n    loading: false,\n    emailAddress: '',\n    dimmerActive: false,\n    dimmerMessage: 'BLANK DIMMER MESSAGE',\n};\n\nconst MailchimpForm = withState(defaultState)(({\n        display,\n        interest,\n        error,\n        loading,\n        emailAddress,\n        dimmerActive,\n        dimmerMessage,\n        setState,\n    }) => {\n\n        const submitHandler = e => {\n            e.preventDefault();\n\n            if (true !== display) {\n                return; // Never allow running this from inside Gutenberg.\n            }\n\n            // Request (POST wp-json/prc-api/v2/mailchimp/subscribe)\n            const email = emailAddress;\n\n            setState({ loading: true });\n\n            setTimeout(() => {\n                jQuery\n                    .ajax({\n                        url: `${\n                            window.siteURL\n                        }/wp-json/prc-api/v2/mailchimp/subscribe?${jQuery.param(\n                            {\n                                email,\n                                interests: interest,\n                            })}`,\n                        type: 'POST',\n                    })\n                    .done(() => {\n                        console.info('Succesfully subscribed');\n                        setState({\n                            dimmerMessage:\n                                'You have succesfully subscribed to this newsletter.',\n                        });\n                    })\n                    .fail(jqXHR => {\n                        const failState = {\n                            error: true,\n                            dimmerMessage: '',\n                        };\n                        if ('add-member-error' === jqXHR.responseJSON.code) {\n                            failState.dimmerMessage =\n                                'This email address is already subscribed to this newsletter.';\n                        } else {\n                            failState.dimmerMessage =\n                                'Unfortunatley we could not subscribe you to this newsletter at this time, please try again later.';\n                        }\n                        setState(failState);\n                    })\n                    .always(() => {\n                        setState({\n                            loading: false,\n                            emailAddress: '',\n                            dimmerActive: true,\n                        });\n                    });\n            }, 2000);\n        };\n\n        return (\n            <Dimmer.Dimmable\n                as=\"div\"\n                id=\"js-mailchimp-form\"\n                dimmed={dimmerActive}\n            >\n                <Form\n                    className=\"mailchimp\"\n                    error={error}\n                    onSubmit={submitHandler}\n                >\n                    <Form.Field>\n                        <Form.Input\n                            placeholder=\"Email address\"\n                            type=\"email\"\n                            data-validate=\"mc-email\"\n                            required\n                            onChange={e => {\n                                setState({\n                                    emailAddress: e.target.value,\n                                });\n                            }}\n                            value={emailAddress}\n                        />\n                        <Form.Button\n                            secondary\n                            loading={loading}\n                            content=\"SIGN UP\"\n                        />\n                    </Form.Field>\n                </Form>\n\n                <Dimmer\n                    active={dimmerActive}\n                    onClickOutside={() => {\n                        setState({ dimmerActive: false });\n                    }}\n                >\n                    <p className=\"sans-serif\">\n                        {dimmerMessage} (Click to close)\n                    </p>\n                </Dimmer>\n            </Dimmer.Dimmable>\n        );\n    },\n);\n\nexport default MailchimpForm;\n","module.exports = lodash;"],"sourceRoot":""}