.wp-block-cover {
	margin-bottom: 2em;
	.wp-block-cover__inner-container > [class*="wp-block-"] {
		max-width: var(--wp--custom--content-size);
		margin-left: auto;
		margin-right: auto;
	}
}

// Collapse cover block on mobile
@media screen and (max-width: 785px) {
	.wp-block-cover:not(.is-style-snap-groups) {
		flex-direction: column!important;
		margin-bottom: 0; // The content inside should provide its own bottom margin.
		&[style] {
			min-height: auto!important;
		}
		img.wp-block-cover__image-background {
			position: relative!important;
			margin-left: -2em;
			margin-right: -2em;
			max-width: calc(100% + 2em)!important;
			width: calc(100% + 2em)!important;
		}
		.has-text-color {
			color: inherit!important;
		}
		.wp-block-cover__inner-container > [class*="wp-block-"]:last-child {
			margin-bottom: 0!important;
		}
		.wp-block-cover__background,
		.wp-block-spacer {
			display: none!important;
		}
	}
}

// We need to use intersection scroll observer to apply this is-style-snap-groups active and not active
.wp-block-cover.is-style-snap-groups {
	padding: 0;
	&.active .wp-block-cover__inner-container,
	&.is-selected .wp-block-cover__inner-container,
	&.has-child-selected .wp-block-cover__inner-container {
		overflow-y: scroll;
	}
	 // We don't want to lock the scrolling in the gutenberg editor so only do this on the frontend.
	&.locked .wp-block-cover__inner-container {
		overscroll-behavior: contain;
	}
	.wp-block-cover__inner-container {
		height: 100vh;
		overflow-y: hidden;
		scroll-snap-type: y mandatory;
		.wp-block-group {
			scroll-snap-align: start;
			scroll-snap-stop: always;
			height: 100vh;
			display: flex;
			flex-direction: column;
			justify-content: center;
			@media screen and (max-width: 640px) {
				margin-left: 1em;
				margin-right: 1em;
				.alignwide {
					margin-left: 0!important;
					margin-right: 0!important;
					width: 100%!important;
				}
			}
		}
	}
}
