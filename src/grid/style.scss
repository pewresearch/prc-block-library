
@use "../../../../themes/prc_parent/src/scss/master.variables.scss" as variables;
@use "../../../../themes/prc_parent/src/scss/colors.scss" as colors;
@use "../../../../themes/prc_parent/src/scss/functions.scss" as functions;
@use "../../../../themes/prc_parent/src/scss/mixins.scss" as mixins;
@use "sass:math";

$dividerColor: colors.$borderColor;
$gutterGap: 42px;
$consecutiveGridDistance: 14px;

$maxWidth: 1127px;

@mixin horizonalDivider($orientation: 'top') {
  &::after {
      display: block;
      content: '';
      position: absolute;
      background-color: $dividerColor;
      width: 100%; //calc(100% - #{$gutterGap});
      height: 1px;
      @if $orientation == 'bottom' {
        top: inherit;
        bottom: 0;
      }
      @if $orientation == 'top' {
        top: 0;
        bottom: inherit;
      }
      left: inherit;
  }
}

@mixin verticalDivider() {
  &::after {
      display: block;
      content: '';
      position: absolute;
      background-color: $dividerColor;
      width: 1px;
      height: calc(100% - #{$consecutiveGridDistance});
      top: inherit;
      bottom: 0;
      left: 0;
  }
}

// Frontend Styles (New)
.wp-block-prc-block-grid {
  @media only screen and (max-width: variables.$largestMobileScreen) {
    &.stackable.divided:not(.vertically) {
      & > div.column:not(:last-child) {
        @include horizonalDivider('bottom');
      }
    }
  }
}

/////////////////////////////////////////////////////////////////////////////////////

// Editor Styles
div.wp-block[data-type="prc-block/grid"],
div.wp-block[data-type="prc-block/grid"] > .ui.grid > .wp-block.block-list-appender,
div.wp-block[data-type="prc-block/grid"] > .wp-block.block-list-appender {
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  max-width: $maxWidth!important;
  width: 100%;
}
div.wp-block[data-type="prc-block/grid"] {
  .block-editor-block-list__block {
    margin-top: inherit;
		box-sizing: border-box;
  }
}
div.wp-block[data-type="prc-block/grid"] > .ui.grid > .wp-block.block-list-appender,
div.wp-block[data-type="prc-block/grid"] > .block-editor-block-list__layout > .wp-block.block-list-appender {
  & > .components-button {
    background-color: #f9f9f9;
    flex-direction: row;
    &:after {
      display: inline;
      content: 'Add Row';
    }
  }
}
div.wp-block[data-type="prc-block/grid"] .block-editor-block-list__layout:not(.ui.grid) div.wp-block[data-type="prc-block/row"]:not(.has-placeholder),
div.wp-block[data-type="prc-block/grid"] .block-editor-block-list__layout.ui.grid div.wp-block[data-type="prc-block/row"],
div.wp-block[data-type="prc-block/grid"] > .ui.grid > .wp-block.block-list-appender {
  max-width: calc(100% + 3rem)!important;
  width: calc(100% + 3rem)!important;
}
// Make all blocks inside a column take up the width and not exceed the column width.
div.wp-block[data-type="prc-block/column"],
div.wp-block[data-type="prc-block/column"] > .wp-block {
  max-width: 100%!important;
}
