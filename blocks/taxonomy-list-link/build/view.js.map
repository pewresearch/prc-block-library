{"version":3,"file":"view.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICAlF,MAAM,EAA+BI,OAAW,GAAY,S,MCK5DC,IAAS,KACR,MAAMC,EAAoBC,SAASC,iBAClC,yHAIK,KAAEC,GAASL,OAAOM,SAExB,GAAID,GAAQH,EAAkBK,OAAQ,CACrC,MAAMC,EAASH,EAAKI,UAAU,GACxBC,EAAWP,SAASQ,eAAeH,GACrCE,GACHA,EAASE,UAAUC,IAAI,YAIzB,CAEAX,EAAkBY,SAASC,IAK1B,IAJgBA,EAAiBC,cAChC,oDAIA,OAGD,MAAMC,EAAiBF,EAAiBX,iBACvC,kDAGIa,GAILA,EAAeH,SAASI,IACvBA,EAAcC,iBAAiB,SAAUC,IACxCA,EAAMC,iBACNN,EAAiBH,UAAUU,OAAO,aAGlC,MAAM,GAAEC,GAAOR,GACT,SAAES,GAAaxB,OAAOM,SACtBmB,EAAU,GAAED,KAAYD,IAE9BvB,OAAO0B,QAAQC,UAAU,CAAEJ,MAAM,GAAIE,EAAO,GAC3C,GACD,GACD,G","sources":["webpack://menu-link/webpack/bootstrap","webpack://menu-link/webpack/runtime/compat get default export","webpack://menu-link/webpack/runtime/define property getters","webpack://menu-link/webpack/runtime/hasOwnProperty shorthand","webpack://menu-link/external window [\"wp\",\"domReady\"]","webpack://menu-link/./src/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"domReady\"];","/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\ndomReady(() => {\n\tconst taxonomyMenuLinks = document.querySelectorAll(\n\t\t'.wp-block-prc-block-taxonomy-menu-link.is-style-sub-expand, .wp-block-prc-block-taxonomy-menu-link.is-style-sub-tree'\n\t);\n\n\t// Get the hash at end of the URL, if present.\n\tconst { hash } = window.location;\n\t// If there is a hash, and it matches a taxonomy menu link, open the sub menu.\n\tif (hash && taxonomyMenuLinks.length) {\n\t\tconst hashId = hash.substring(1);\n\t\tconst hashLink = document.getElementById(hashId);\n\t\tif (hashLink) {\n\t\t\thashLink.classList.add('is-active');\n\t\t\t// Scroll to the hash link.\n\t\t\t// hashLink.scrollIntoView();\n\t\t}\n\t}\n\n\ttaxonomyMenuLinks.forEach((taxonomyMenuLink) => {\n\t\tconst subMenu = taxonomyMenuLink.querySelector(\n\t\t\t'.wp-block-prc-block-taxonomy-menu-link--sub-menu'\n\t\t);\n\n\t\tif (!subMenu) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subMenuToggles = taxonomyMenuLink.querySelectorAll(\n\t\t\t'.wp-block-prc-block-taxonomy-menu-link--toggle'\n\t\t);\n\n\t\tif (!subMenuToggles) {\n\t\t\treturn;\n\t\t}\n\n\t\tsubMenuToggles.forEach((subMenuToggle) => {\n\t\t\tsubMenuToggle.addEventListener('click', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\ttaxonomyMenuLink.classList.toggle('is-active');\n\n\t\t\t\t// Update the window history with the id from taxonomyMenuLink as a hash.\n\t\t\t\tconst { id } = taxonomyMenuLink;\n\t\t\t\tconst { pathname } = window.location;\n\t\t\t\tconst newUrl = `${pathname}#${id}`;\n\n\t\t\t\twindow.history.pushState({ id }, '', newUrl);\n\t\t\t});\n\t\t});\n\t});\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","domReady","taxonomyMenuLinks","document","querySelectorAll","hash","location","length","hashId","substring","hashLink","getElementById","classList","add","forEach","taxonomyMenuLink","querySelector","subMenuToggles","subMenuToggle","addEventListener","event","preventDefault","toggle","id","pathname","newUrl","history","pushState"],"sourceRoot":""}