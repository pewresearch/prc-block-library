{"version":3,"file":"index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAQ,KCYzC,SAASC,EAAY,GAAc,IAAd,SAAEC,GAAU,EAC/C,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,YACvBC,IACA,MAAM,aAAEC,EAAY,qBAAEC,GACrBF,EAAO,qBAEFG,EAAOF,EAAaJ,GAC1B,IAAIO,EAAKP,EAMT,MAJI,mCAAqCM,IACxCC,EAAKF,EAAqBL,IAGpB,CACNC,aAAcM,EACd,GAEF,CAACP,KAKKQ,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAuC3C,OAtCAC,EAAAA,EAAAA,YAAU,KACT,MAGMC,EAHcC,SAASC,cAC5B,0DAEmCA,cAClC,gBAAeb,OAEbW,GACc,IAAIG,kBAAkBC,IACtCA,EAAUC,SAASC,IAClBC,QAAQC,IAAI,WAAYF,GACF,eAAlBA,EAASG,MACZZ,EACC,SAAWG,EAAgBU,QAAQC,QAErC,GACC,IAEMC,QAAQZ,EAAiB,CACjCa,YAAY,GAEd,GACE,CAACxB,KAiBH,mBAAC,EAAAyB,cAAa,MACb,mBAAC,EAAAC,aAAY,MACZ,mBAAC,EAAAC,cAAa,CACbC,QAAS,IAlBE,MACd,MAGMjB,EAHcC,SAASC,cAC5B,0DAEmCA,cAClC,gBAAeb,OAEjB,GAAIW,EAAiB,CACpB,MAAM,QAAEW,GAAYX,EAAgBU,QACpCV,EAAgBU,QAAQC,QACvB,SAAWA,EAAU,QAAU,MACjC,GAOkBO,GACfC,SAAUvB,EACVwB,MACCxB,EAAY,qBAAuB,oBAEpCyB,KAAK,kBAKV,CCvEA,MAAMC,EAAiB,CACtB,eACA,iBACA,YACA,aACA,eCrBK,EAA+BpC,OAAiB,SCKvC,aACd,OACC,mBAAC,EAAAqC,KAAI,CACJF,KAAMG,EAAAA,MAAAA,uBACNC,MAAO,GACPC,oBAAoB,iBAGvB,CCHA,SACC,CACChC,KAAM,kBACNiC,OAAOC,EAAAA,EAAAA,IAAG,kBAAmB,qBAC7Bf,WAAY,CACXgB,UAAW,kBAEZC,YAAa,CACZ,CACC,iBACA,CACCC,YAAa,wBAIhBZ,SAAU,QAAC,UAAEU,GAAW,UACvBA,GAAYA,EAAUG,SAAS,iBAAyB,GAE1D,CACCtC,KAAM,iBACNiC,OAAOC,EAAAA,EAAAA,IAAG,iBAAkB,qBAC5Bf,WAAY,CACXgB,UAAW,iBAEZC,YAAa,CACZ,CACC,iBACA,CACCC,YAAa,uBAIhBV,MAAM,mBAACE,EAAI,CAACU,QAAQ,SACpBd,SAAU,QAAC,UAAEU,GAAW,UACvBA,GAAYA,EAAUG,SAAS,gBAAwB,I,yoBCTlDtC,KAAIA,GAAKwC,EAEXC,EAAW,CAChBd,KAAME,EAINa,KJHc,SAAc,GAM1B,IAN0B,WAC5BvB,EAAU,cACVwB,EAAa,QACbC,EAAO,SACPlD,EAAQ,WACRmD,GACA,EACA,MAAMC,GAAaC,EAAAA,EAAAA,kBAIb,cAAEC,EAAa,YAAEC,GAAgB9B,EACjC+B,GAAmBC,EAAAA,EAAAA,qBAAoBL,EAAY,CACxDE,cAAeA,GAAiBpB,EAChCwB,cAAc,IAGf,OACC,mBAAC,EAAAC,SAAQ,MACR,mBAAC5D,EAAW,CAAOC,cACnB,yBAASwD,GAGZ,EIhBCI,KCnBc,SAAc,GAAkB,IAAjB,WAAEnC,GAAY,EAC3C,OAAO,mBAAC,EAAAoC,YAAA,QAAmB,KAC5B,EDsBCC,WAAUA,IAQXC,EAAAA,EAAAA,mBAAmBzD,EAAM,IAAKwC,KAAaC,G","sources":["webpack://flip-card-side/external window [\"wp\",\"i18n\"]","webpack://flip-card-side/external window [\"wp\",\"blocks\"]","webpack://flip-card-side/external window [\"wp\",\"element\"]","webpack://flip-card-side/external window [\"wp\",\"blockEditor\"]","webpack://flip-card-side/external window [\"wp\",\"components\"]","webpack://flip-card-side/external window [\"wp\",\"data\"]","webpack://flip-card-side/../flip-card-controller/src/FlipControl.jsx","webpack://flip-card-side/./src/Edit.jsx","webpack://flip-card-side/external window \"prcIcons\"","webpack://flip-card-side/./src/Icon.jsx","webpack://flip-card-side/./src/variations.js","webpack://flip-card-side/./src/index.js","webpack://flip-card-side/./src/Save.jsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { ToolbarButton, ToolbarGroup } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nexport default function FlipControl({ clientId }) {\n\tconst { controllerId } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getBlockName, getBlockRootClientId } =\n\t\t\t\tselect('core/block-editor');\n\n\t\t\tconst name = getBlockName(clientId);\n\t\t\tlet id = clientId;\n\n\t\t\tif ('prc-block/flip-card-controller' !== name) {\n\t\t\t\tid = getBlockRootClientId(clientId);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcontrollerId: id,\n\t\t\t};\n\t\t},\n\t\t[clientId]\n\t);\n\n\t// create an event listener to watch for the block elm for the controllerId\n\t// to have data-flipped attribute change and then update the isFlipped state\n\tconst [isFlipped, setIsFlipped] = useState(false);\n\tuseEffect(() => {\n\t\tconst blockEditor = document.querySelector(\n\t\t\t'.wp-block-post-content.block-editor-block-list__layout'\n\t\t);\n\t\tconst controllerBlock = blockEditor.querySelector(\n\t\t\t`[data-block=\"${controllerId}\"]`\n\t\t);\n\t\tif (controllerBlock) {\n\t\t\tconst observer = new MutationObserver((mutations) => {\n\t\t\t\tmutations.forEach((mutation) => {\n\t\t\t\t\tconsole.log('mutation', mutation);\n\t\t\t\t\tif (mutation.type === 'attributes') {\n\t\t\t\t\t\tsetIsFlipped(\n\t\t\t\t\t\t\t'true' === controllerBlock.dataset.flipped\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\tobserver.observe(controllerBlock, {\n\t\t\t\tattributes: true,\n\t\t\t});\n\t\t}\n\t}, [controllerId]);\n\n\tconst doFlip = () => {\n\t\tconst blockEditor = document.querySelector(\n\t\t\t'.wp-block-post-content.block-editor-block-list__layout'\n\t\t);\n\t\tconst controllerBlock = blockEditor.querySelector(\n\t\t\t`[data-block=\"${controllerId}\"]`\n\t\t);\n\t\tif (controllerBlock) {\n\t\t\tconst { flipped } = controllerBlock.dataset;\n\t\t\tcontrollerBlock.dataset.flipped =\n\t\t\t\t'true' === flipped ? 'false' : 'true';\n\t\t}\n\t};\n\n\treturn (\n\t\t<BlockControls>\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\tonClick={() => doFlip()}\n\t\t\t\t\tisActive={isFlipped}\n\t\t\t\t\tlabel={\n\t\t\t\t\t\tisFlipped ? 'Flip Over to Front' : 'Flip Over to Back'\n\t\t\t\t\t}\n\t\t\t\t\ticon=\"image-rotate\"\n\t\t\t\t/>\n\t\t\t</ToolbarGroup>\n\t\t</BlockControls>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport FlipControl from '../../flip-card-controller/src/FlipControl';\n\nconst ALLOWED_BLOCKS = [\n\t'core/heading',\n\t'core/paragraph',\n\t'core/list',\n\t'core/image',\n\t'core/button',\n];\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param            props.context\n * @param            props.clientId\n * @param            props.isSelected\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tcontext,\n\tclientId,\n\tisSelected,\n}) {\n\tconst blockProps = useBlockProps();\n\t// By defining a allowedBlocks attribute any block can now customize what inner blocks are allowed.\n\t// This gives us a good way to ensure greater template and pattern control.\n\t// By default if nothing is defined in the \"allowedBlocks\" attribute this will default to the constant ALLOWED_BLOCKS found under \"Internal Dependencies\" ^.\n\tconst { allowedBlocks, orientation } = attributes;\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\tallowedBlocks: allowedBlocks || ALLOWED_BLOCKS,\n\t\ttemplateLock: false,\n\t});\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<FlipControl {...{ clientId }} />\n\t\t\t<div {...innerBlocksProps} />\n\t\t</Fragment>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * External Dependencies\n */\nimport { icons, Icon } from '@prc/icons';\n\nexport default function() {\n\treturn(\n\t\t<Icon\n\t\t\ticon={icons.faCreditCardFrontLight}\n\t\t\twidth={21}\n\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t/>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport Icon from './Icon';\n\nexport default [\n\t{\n\t\tname: 'flip-card-front',\n\t\ttitle: __('Flip Card Front', 'prc-block-library'),\n\t\tattributes: {\n\t\t\tclassName: 'is-style-front',\n\t\t},\n\t\tinnerBlocks: [\n\t\t\t[\n\t\t\t\t'core/paragraph',\n\t\t\t\t{\n\t\t\t\t\tplaceholder: 'Flip Card Front...',\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t\tisActive: ({ className }) =>\n\t\t\tclassName ? className.includes('is-style-front') : false,\n\t},\n\t{\n\t\tname: 'flip-card-back',\n\t\ttitle: __('Flip Card Back', 'prc-block-library'),\n\t\tattributes: {\n\t\t\tclassName: 'is-style-back',\n\t\t},\n\t\tinnerBlocks: [\n\t\t\t[\n\t\t\t\t'core/paragraph',\n\t\t\t\t{\n\t\t\t\t\tplaceholder: 'Flip Card Back...',\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t\ticon: <Icon variant=\"back\" />,\n\t\tisActive: ({ className }) =>\n\t\t\tclassName ? className.includes('is-style-back') : false,\n\t},\n];\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport Edit from './Edit';\nimport Save from './Save';\nimport Icon from './Icon';\nimport variations from './variations';\n\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon: Icon,\n\t/**\n\t * @see ./Edit.jsx\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./Save.jsx\n\t */\n\tsave: Save,\n\t/**\n\t * @see ./variations.js\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-variations/\n\t */\n\tvariations,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( name, { ...metadata, ...settings } );\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save( { attributes } ) {\n\treturn <InnerBlocks.Content />;\n}\n"],"names":["window","FlipControl","clientId","controllerId","useSelect","select","getBlockName","getBlockRootClientId","name","id","isFlipped","setIsFlipped","useState","useEffect","controllerBlock","document","querySelector","MutationObserver","mutations","forEach","mutation","console","log","type","dataset","flipped","observe","attributes","BlockControls","ToolbarGroup","ToolbarButton","onClick","doFlip","isActive","label","icon","ALLOWED_BLOCKS","Icon","icons","width","preserveAspectRatio","title","__","className","innerBlocks","placeholder","includes","variant","metadata","settings","edit","setAttributes","context","isSelected","blockProps","useBlockProps","allowedBlocks","orientation","innerBlocksProps","useInnerBlocksProps","templateLock","Fragment","save","InnerBlocks","variations","registerBlockType"],"sourceRoot":""}