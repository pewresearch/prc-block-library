{"version":3,"file":"view.js","mappings":"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","sources":["webpack://navigation-mega-menu/webpack/bootstrap","webpack://navigation-mega-menu/webpack/runtime/define property getters","webpack://navigation-mega-menu/webpack/runtime/hasOwnProperty shorthand","webpack://navigation-mega-menu/external module \"@wordpress/interactivity\"","webpack://navigation-mega-menu/./src/view.js","webpack://navigation-mega-menu/./src/use-ref-resizer.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetElement,\n\tuseState,\n\tuseEffect,\n} from '@wordpress/interactivity';\n\nimport { setValues } from './use-ref-resizer';\n\n// Function to convert a complex CSS value to pixels\nfunction convertCssValueToPixels(cssValue) {\n\t// Create a temporary element\n\tconst tempElement = document.createElement('div');\n\n\t// Apply the CSS value to the temporary element\n\t// For example, setting its width to the complex CSS value\n\ttempElement.style.width = cssValue;\n\n\t// Append the temporary element to the body to make it part of the document\n\tdocument.body.appendChild(tempElement);\n\n\t// Use getComputedStyle to get the computed width in pixels\n\tconst computedWidth = window.getComputedStyle(tempElement).width;\n\n\t// Remove the temporary element from the document\n\tdocument.body.removeChild(tempElement);\n\n\t// Return the computed width as a number\n\treturn parseFloat(computedWidth);\n}\n\nconst { state, actions } = store('prc-block/navigation-mega-menu', {\n\tstate: {\n\t\tget isActive() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\treturn state[id]?.isActive;\n\t\t},\n\t\tget width() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.width;\n\t\t},\n\t\tget left() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.left;\n\t\t},\n\t\tget top() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.top;\n\t\t},\n\t},\n\tactions: {\n\t\tcloseAll: () => {\n\t\t\tObject.keys(state).forEach((key) => {\n\t\t\t\tstate[key].isActive = false;\n\t\t\t});\n\t\t},\n\t\ttoggleMenuOnClick() {\n\t\t\tactions.toggleMenu();\n\t\t},\n\t\tcloseMenuOnClick() {\n\t\t\tactions.closeMenu('click');\n\t\t\tactions.closeMenu('focus');\n\t\t},\n\t\ttoggleMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = !state[id].isActive;\n\t\t},\n\t\topenMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = true;\n\t\t},\n\t\tcloseMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = false;\n\t\t},\n\t\tsetMenuPositions() {\n\t\t\tconst { ref } = getElement();\n\t\t\tconst menu = ref.querySelector(\n\t\t\t\t'.wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t);\n\t\t\tif (!menu) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst navBlock = menu.closest('.wp-block-navigation');\n\t\t\tif (!navBlock) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst context = getContext();\n\n\t\t\tconst { width, left, top } = setValues(\n\t\t\t\tref,\n\t\t\t\tref.closest('.wp-block-navigation')\n\t\t\t);\n\n\t\t\tcontext.width = width;\n\t\t\tcontext.left = left;\n\t\t\tcontext.top = top;\n\t\t},\n\t},\n\tcallbacks: {\n\t\tonInit() {\n\t\t\tconst context = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tconst menu = ref.querySelector(\n\t\t\t\t'.wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t);\n\t\t\tcontext.menuRef = menu;\n\n\t\t\tactions.setMenuPositions();\n\n\t\t\tconst innerGroup = menu.querySelector(\n\t\t\t\t'.wp-block-group.has-background'\n\t\t\t);\n\t\t\tif (innerGroup) {\n\t\t\t\tconst activeClassnames = innerGroup.className.match(\n\t\t\t\t\t/(has-.*-background-color|has-background|has-text-color|has-.*-color)/g\n\t\t\t\t);\n\t\t\t\tcontext.activeClassnames = activeClassnames;\n\t\t\t}\n\t\t},\n\n\t\tonResize() {\n\t\t\tactions.setMenuPositions();\n\t\t},\n\t\tgetToggleClassname() {\n\t\t\tconst defaults = [\n\t\t\t\t'wp-block-navigation-item__content',\n\t\t\t\t'wp-block-prc-block-navigation-mega-menu__toggle',\n\t\t\t];\n\t\t\tconst context = getContext();\n\t\t\tconst { activeClassnames } = context;\n\t\t\t// convert the array of activeClassnames to a string\n\t\t\tif (state.isActive) {\n\t\t\t\tconst newClassnames =\n\t\t\t\t\tdefaults.join(' ') + activeClassnames.join(' ');\n\t\t\t\treturn newClassnames;\n\t\t\t}\n\t\t\treturn defaults.join(' ');\n\t\t},\n\t\tonWindowClickCloseMegaMenu: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tif (!id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!state[id]?.isActive) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst elm = getElement();\n\t\t\tconst { ref } = elm;\n\n\t\t\t// check elm for any of the event.target\n\t\t\t// if present then return early\n\t\t\tif (\n\t\t\t\tref.contains(event.target) &&\n\t\t\t\t!event.target.classList.contains(\n\t\t\t\t\t'wp-block-prc-block-popup-modal__outer'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst megaMenuContainer = ref.querySelector(\n\t\t\t\t'.wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t);\n\t\t\tif (\n\t\t\t\t!megaMenuContainer.innerHTML.includes(event.target.innerHTML) &&\n\t\t\t\ttrue === state[id].isActive\n\t\t\t) {\n\t\t\t\tstate[id].isActive = false;\n\t\t\t}\n\t\t},\n\t\tonESCKey: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tif (!id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tif (true === state[id].isActive) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tstate[id].isActive = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n","// Function to convert a complex CSS value to pixels\n// Everything below is heavily cribbed from Nick Diego for the js math window math.\nfunction convertCssValueToPixels(cssValue) {\n\t// Create a temporary element\n\tconst tempElement = document.createElement('div');\n\n\t// Apply the CSS value to the temporary element\n\t// For example, setting its width to the complex CSS value\n\ttempElement.style.width = cssValue;\n\n\t// Append the temporary element to the body to make it part of the document\n\tdocument.body.appendChild(tempElement);\n\n\t// Use getComputedStyle to get the computed width in pixels\n\tconst computedWidth = window.getComputedStyle(tempElement).width;\n\n\t// Remove the temporary element from the document\n\tdocument.body.removeChild(tempElement);\n\n\t// Return the computed width as a number\n\treturn parseFloat(computedWidth);\n}\n\nfunction getRootPaddingValues() {\n\tconst bodyStyles = window.getComputedStyle(document.body);\n\tlet rootPaddingLeft = bodyStyles\n\t\t.getPropertyValue('--wp--style--root--padding-left')\n\t\t.trim();\n\tlet rootPaddingRight = bodyStyles\n\t\t.getPropertyValue('--wp--style--root--padding-left')\n\t\t.trim();\n\t// Convert the CSS variable value to pixels.\n\trootPaddingLeft = '16px';\n\trootPaddingRight = '16px';\n\n\tconst rootPaddingLeftValue = convertCssValueToPixels(rootPaddingLeft);\n\tconst rootPaddingRightValue = convertCssValueToPixels(rootPaddingRight);\n\n\treturn {\n\t\trootPaddingLeftValue,\n\t\trootPaddingRightValue,\n\t};\n}\n\nexport function setValues(menuContainer, navBlock) {\n\tif (!menuContainer && !navBlock) {\n\t\treturn;\n\t}\n\tlet width;\n\tlet left;\n\tlet top;\n\n\tconst navBlockHeight = navBlock.offsetHeight;\n\n\t// find the body of menuContainer, remember iframes can have their own body.\n\tconst body = menuContainer.closest('body');\n\tconst windowWidth = body.offsetWidth;\n\n\t// Get the bounding rectangle of the navigation block containing the menu.\n\tconst menuRect = menuContainer.getBoundingClientRect();\n\tconst menuLeftPosition = menuRect?.left;\n\n\ttop = `${navBlockHeight - 1}px`;\n\twidth = `${windowWidth}px`;\n\tleft = `-${menuLeftPosition}px`;\n\n\treturn {\n\t\twidth,\n\t\tleft,\n\t\ttop,\n\t};\n}\n\nexport default function useRefResizer({ ref, isMobile, useState, useEffect }) {\n\tconst [topPosition, setTopPosition] = useState(0);\n\tconst [leftPosition, setLeftPosition] = useState(0);\n\tconst [widthValue, setWidth] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst updateRefPositions = () => {\n\t\t\tif (ref.current) {\n\t\t\t\tlet menuContainer; // That which menu options are acted upon.\n\t\t\t\tif (\n\t\t\t\t\tref.current.classList.contains(\n\t\t\t\t\t\t'wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tmenuContainer = ref.current;\n\t\t\t\t} else {\n\t\t\t\t\t// Return early if the ref.current is not the menu container.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet navBlock = menuContainer.closest('.wp-block-navigation'); // That which menu options are derived from.\n\t\t\t\tnavBlock = navBlock.parentElement;\n\n\t\t\t\tconst { width, left, top } = setValues(menuContainer, navBlock);\n\n\t\t\t\tsetTopPosition(top);\n\t\t\t\tsetLeftPosition(left);\n\t\t\t\tsetWidth(width);\n\t\t\t}\n\t\t};\n\n\t\t// Run once, to initially set the positions.\n\t\tupdateRefPositions();\n\n\t\t// Add a listener for the window resize event\n\t\twindow.addEventListener('resize', updateRefPositions);\n\n\t\treturn () => {\n\t\t\t// Remove the listener when the component unmounts\n\t\t\twindow.removeEventListener('resize', updateRefPositions);\n\t\t};\n\t}, [ref.current, isMobile]);\n\n\treturn {\n\t\ttopPosition,\n\t\tleftPosition,\n\t\twidth: widthValue,\n\t};\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","state","actions","store","isActive","context","getContext","id","width","left","top","closeAll","keys","forEach","toggleMenuOnClick","toggleMenu","closeMenuOnClick","closeMenu","openMenu","setMenuPositions","ref","getElement","menu","querySelector","closest","menuContainer","navBlock","navBlockHeight","offsetHeight","windowWidth","offsetWidth","menuRect","getBoundingClientRect","menuLeftPosition","setValues","callbacks","onInit","menuRef","innerGroup","activeClassnames","className","match","onResize","getToggleClassname","defaults","join","onWindowClickCloseMegaMenu","event","elm","contains","target","classList","innerHTML","includes","onESCKey","preventDefault"],"sourceRoot":""}