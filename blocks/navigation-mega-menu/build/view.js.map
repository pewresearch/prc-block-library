{"version":3,"file":"view.js","mappings":"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","sources":["webpack://navigation-mega-menu/webpack/bootstrap","webpack://navigation-mega-menu/webpack/runtime/define property getters","webpack://navigation-mega-menu/webpack/runtime/hasOwnProperty shorthand","webpack://navigation-mega-menu/external module \"@wordpress/interactivity\"","webpack://navigation-mega-menu/./src/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress dependencies\n */\nimport { store, getContext, getElement } from '@wordpress/interactivity';\n\n// Function to convert a complex CSS value to pixels\nfunction convertCssValueToPixels(cssValue) {\n\t// Create a temporary element\n\tconst tempElement = document.createElement('div');\n\n\t// Apply the CSS value to the temporary element\n\t// For example, setting its width to the complex CSS value\n\ttempElement.style.width = cssValue;\n\n\t// Append the temporary element to the body to make it part of the document\n\tdocument.body.appendChild(tempElement);\n\n\t// Use getComputedStyle to get the computed width in pixels\n\tconst computedWidth = window.getComputedStyle(tempElement).width;\n\n\t// Remove the temporary element from the document\n\tdocument.body.removeChild(tempElement);\n\n\t// Return the computed width as a number\n\treturn parseFloat(computedWidth);\n}\n\nconst { state, actions } = store('prc-block/navigation-mega-menu', {\n\tstate: {\n\t\tget isActive() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\treturn state[id]?.isActive;\n\t\t},\n\t\tget width() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.width;\n\t\t},\n\t\tget left() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.left;\n\t\t},\n\t\tget top() {\n\t\t\tconst context = getContext();\n\t\t\treturn context.top;\n\t\t},\n\t},\n\tactions: {\n\t\tcloseAll: () => {\n\t\t\tObject.keys(state).forEach((key) => {\n\t\t\t\tstate[key].isActive = false;\n\t\t\t});\n\t\t},\n\t\ttoggleMenuOnClick() {\n\t\t\tactions.toggleMenu();\n\t\t},\n\t\tcloseMenuOnClick() {\n\t\t\tactions.closeMenu('click');\n\t\t\tactions.closeMenu('focus');\n\t\t},\n\t\ttoggleMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = !state[id].isActive;\n\t\t},\n\t\topenMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = true;\n\t\t},\n\t\tcloseMenu() {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tstate[id].isActive = false;\n\t\t},\n\t\tsetMenuPositions() {\n\t\t\tconst { ref } = getElement();\n\t\t\tconst menu = ref.querySelector(\n\t\t\t\t'.wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t);\n\t\t\tif (!menu) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst navBlock = menu.closest('.wp-block-navigation');\n\t\t\tif (!navBlock) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst context = getContext();\n\n\t\t\t// Determine the height of the navigation block and set the mega menu top position.\n\t\t\tconst height = navBlock.offsetHeight;\n\t\t\tcontext.top = height + 1;\n\n\t\t\t// Everything below is heavily cribbed from Nick Diego for the js math window math.\n\t\t\tconst bodyStyles = window.getComputedStyle(document.body);\n\t\t\tconst rootPaddingLeft = bodyStyles\n\t\t\t\t.getPropertyValue('--wp--style--root--padding-left')\n\t\t\t\t.trim();\n\t\t\tconst rootPaddingRight = bodyStyles\n\t\t\t\t.getPropertyValue('--wp--style--root--padding-left')\n\t\t\t\t.trim();\n\t\t\t// Convert the CSS variable value to pixels.\n\t\t\tconst rootPaddingLeftValue =\n\t\t\t\tconvertCssValueToPixels(rootPaddingLeft);\n\t\t\tconst rootPaddingRightValue =\n\t\t\t\tconvertCssValueToPixels(rootPaddingRight);\n\n\t\t\t// Get the window space and the native width of the mega menu.\n\t\t\tconst windowSpace =\n\t\t\t\twindow.innerWidth -\n\t\t\t\trootPaddingRightValue -\n\t\t\t\trootPaddingLeftValue;\n\t\t\tconst menuWidth = menu.offsetWidth;\n\n\t\t\t// Get the bounding rectangle of the navigation block containing the menu.\n\t\t\tconst menuRect = menu.getBoundingClientRect();\n\t\t\tconst navBlockRect = navBlock.getBoundingClientRect();\n\n\t\t\t// Assumes that the navigation block is always offset by the root padding.\n\t\t\tconst leftOffset =\n\t\t\t\tnavBlockRect.left <= rootPaddingLeftValue\n\t\t\t\t\t? rootPaddingLeftValue - navBlockRect.left\n\t\t\t\t\t: navBlockRect.left - rootPaddingLeftValue;\n\t\t\tconst leftSpace = (windowSpace - menuWidth) / 2;\n\n\t\t\tif (menuWidth > windowSpace) {\n\t\t\t\tconsole.log('a');\n\t\t\t\tcontext.width = `${window.innerWidth}px`;\n\t\t\t\tcontext.left = `-${navBlockRect.left}px`;\n\t\t\t} else if (menuRect.left > 0 && leftSpace >= menuRect.left) {\n\t\t\t\tconsole.log('b');\n\t\t\t\t// Do nothing, the menu is positioned with CSS and it looks fine.\n\t\t\t\tcontext.left = '';\n\t\t\t} else if (leftOffset >= leftSpace) {\n\t\t\t\tconsole.log('c');\n\t\t\t\t// Reset width.\n\t\t\t\tcontext.width = '';\n\t\t\t\tcontext.left = `-${leftOffset - leftSpace}px`;\n\t\t\t} else {\n\t\t\t\tconsole.log('d');\n\t\t\t\tcontext.width = '';\n\t\t\t\tcontext.left = `${leftSpace - leftOffset}px`;\n\t\t\t}\n\t\t},\n\t},\n\tcallbacks: {\n\t\tonInit() {\n\t\t\tconst context = getContext();\n\t\t\tconst { ref } = getElement();\n\t\t\tconst menu = ref.querySelector(\n\t\t\t\t'.wp-block-prc-block-navigation-mega-menu__container'\n\t\t\t);\n\t\t\tcontext.menuRef = menu;\n\t\t\tconsole.log('onInit', ref, menu);\n\n\t\t\tactions.setMenuPositions();\n\n\t\t\tconst innerGroup = menu.querySelector(\n\t\t\t\t'.wp-block-group.has-background'\n\t\t\t);\n\t\t\tif (innerGroup) {\n\t\t\t\tconst activeClassnames = innerGroup.className.match(\n\t\t\t\t\t/(has-.*-background-color|has-background|has-text-color|has-.*-color)/g\n\t\t\t\t);\n\t\t\t\tcontext.activeClassnames = activeClassnames;\n\t\t\t}\n\t\t},\n\t\tgetToggleClassname() {\n\t\t\tconst defaults = [\n\t\t\t\t'wp-block-navigation-item__content',\n\t\t\t\t'wp-block-prc-block-navigation-mega-menu__toggle',\n\t\t\t];\n\t\t\tconst context = getContext();\n\t\t\tconst { activeClassnames } = context;\n\t\t\t// convert the array of activeClassnames to a string\n\t\t\tconsole.log('getToggleClassname', defaults, activeClassnames);\n\t\t\tif (state.isActive) {\n\t\t\t\tconst newClassnames =\n\t\t\t\t\tdefaults.join(' ') + activeClassnames.join(' ');\n\t\t\t\treturn newClassnames;\n\t\t\t}\n\t\t\treturn defaults.join(' ');\n\t\t},\n\t\tonResize() {\n\t\t\tactions.setMenuPositions();\n\t\t},\n\t\tonWindowClickCloseMegaMenu: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tif (!id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!state[id]?.isActive) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst elm = getElement();\n\t\t\tconst { ref } = elm;\n\t\t\tconsole.log('onWindowClickCloseMegaMenu', elm, event.target);\n\n\t\t\t// check elm for any of the event.target\n\t\t\t// if present then return early\n\t\t\tif (\n\t\t\t\tref.contains(event.target) &&\n\t\t\t\t!event.target.classList.contains(\n\t\t\t\t\t'wp-block-prc-block-popup-modal__outer'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst megaMenuContainer = ref.querySelector('.wp-block-prc-block-navigation-mega-menu__container');\n\t\t\tif (\n\t\t\t\t!megaMenuContainer.innerHTML.includes(event.target.innerHTML) &&\n\t\t\t\ttrue === state[id].isActive\n\t\t\t) {\n\t\t\t\tstate[id].isActive = false;\n\t\t\t}\n\t\t},\n\t\tonESCKey: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { id } = context;\n\t\t\tif (!id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tif (true === state[id].isActive) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tstate[id].isActive = false;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","convertCssValueToPixels","cssValue","tempElement","document","createElement","style","width","body","appendChild","computedWidth","window","getComputedStyle","removeChild","parseFloat","state","actions","store","isActive","context","getContext","id","left","top","closeAll","keys","forEach","toggleMenuOnClick","toggleMenu","closeMenuOnClick","closeMenu","openMenu","setMenuPositions","ref","getElement","menu","querySelector","navBlock","closest","height","offsetHeight","bodyStyles","rootPaddingLeft","getPropertyValue","trim","rootPaddingRight","rootPaddingLeftValue","rootPaddingRightValue","windowSpace","innerWidth","menuWidth","offsetWidth","menuRect","getBoundingClientRect","navBlockRect","leftOffset","leftSpace","console","log","callbacks","onInit","menuRef","innerGroup","activeClassnames","className","match","getToggleClassname","defaults","join","onResize","onWindowClickCloseMegaMenu","event","elm","target","contains","classList","innerHTML","includes","onESCKey","preventDefault"],"sourceRoot":""}