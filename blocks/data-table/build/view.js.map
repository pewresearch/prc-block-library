{"version":3,"file":"view.js","mappings":"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","sources":["webpack://data-table/webpack/bootstrap","webpack://data-table/webpack/runtime/compat get default export","webpack://data-table/webpack/runtime/define property getters","webpack://data-table/webpack/runtime/hasOwnProperty shorthand","webpack://data-table/external window \"jQuery\"","webpack://data-table/./node_modules/datatables.net/js/jquery.dataTables.mjs","webpack://data-table/./node_modules/datatables.net-dt/js/dataTables.dataTables.mjs","webpack://data-table/./node_modules/datatables.net-responsive/js/dataTables.responsive.mjs","webpack://data-table/./node_modules/datatables.net-responsive-dt/js/responsive.dataTables.mjs","webpack://data-table/external window [\"wp\",\"domReady\"]","webpack://data-table/./src/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"jQuery\"];","/*! DataTables 1.13.11\n * ©2008-2024 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\t/**\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t * return the resulting jQuery object.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {object} jQuery object, filtered by the given selector.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Highlight every second row\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t *      oTable.fnFilter('Webkit');\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t *      oTable.fnFilter('');\n\t *    } );\n\t */\n\tthis.$ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).$( sSelector, oOpts );\n\t};\n\t\n\t\n\t/**\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t * rows are found, the data returned is the original data array/object that was used to\n\t * create the row (or a generated array if from a DOM source).\n\t *\n\t * This method is often useful in-combination with $ where both functions are given the\n\t * same parameters and the array indexes will match identically.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t *    entry in the array.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the data from the first row in the table\n\t *      var data = oTable._('tr:first');\n\t *\n\t *      // Do something useful with the data\n\t *      alert( \"First cell is: \"+data[0] );\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to 'Webkit' and get all data for\n\t *      oTable.fnFilter('Webkit');\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t *\n\t *      // Do something with the data\n\t *      alert( data.length+\" rows matched the search\" );\n\t *    } );\n\t */\n\tthis._ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t};\n\t\n\t\n\t/**\n\t * Create a DataTables Api instance, with the currently selected tables for\n\t * the Api's context.\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t *   or if all tables captured in the jQuery object should be used.\n\t * @return {DataTables.Api}\n\t */\n\tthis.api = function ( traditional )\n\t{\n\t\treturn traditional ?\n\t\t\tnew _Api(\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t) :\n\t\t\tnew _Api( this );\n\t};\n\t\n\t\n\t/**\n\t * Add a single new row or multiple rows of data to the table. Please note\n\t * that this is suitable for client-side processing only - if you are using\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t *  @param {array|object} data The data to be added to the table. This can be:\n\t *    <ul>\n\t *      <li>1D array of data - add a single row with the data provided</li>\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t *      <li>object - data object when using <i>mData</i></li>\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t *    </ul>\n\t *  @param {bool} [redraw=true] redraw the table or not\n\t *  @returns {array} An array of integers, representing the list of indexes in\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t *    the table.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Global var for counter\n\t *    var giCount = 2;\n\t *\n\t *    $(document).ready(function() {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *    function fnClickAddRow() {\n\t *      $('#example').dataTable().fnAddData( [\n\t *        giCount+\".1\",\n\t *        giCount+\".2\",\n\t *        giCount+\".3\",\n\t *        giCount+\".4\" ]\n\t *      );\n\t *\n\t *      giCount++;\n\t *    }\n\t */\n\tthis.fnAddData = function( data, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\t/* Check if we want to add multiple rows or not */\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\tapi.rows.add( data ) :\n\t\t\tapi.row.add( data );\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn rows.flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * This function will make DataTables recalculate the column sizes, based on the data\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t * through the sWidth parameter). This can be useful when the width of the table's\n\t * parent element changes (for example a window resize).\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *\n\t *      $(window).on('resize', function () {\n\t *        oTable.fnAdjustColumnSizing();\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t{\n\t\tvar api = this.api( true ).columns.adjust();\n\t\tvar settings = api.settings()[0];\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw( false );\n\t\t}\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Quickly and simply clear a table\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t *      oTable.fnClearTable();\n\t *    } );\n\t */\n\tthis.fnClearTable = function( bRedraw )\n\t{\n\t\tvar api = this.api( true ).clear();\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t * are currently 'open'.\n\t *  @param {node} nTr the table row to 'close'\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnClose = function( nTr )\n\t{\n\t\tthis.api( true ).row( nTr ).child.hide();\n\t};\n\t\n\t\n\t/**\n\t * Remove a row for the table\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t *    the TR element you want to delete\n\t *  @param {function|null} [callBack] Callback function\n\t *  @param {bool} [redraw=true] Redraw the table or not\n\t *  @returns {array} The row that was deleted\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately remove the first row\n\t *      oTable.fnDeleteRow( 0 );\n\t *    } );\n\t */\n\tthis.fnDeleteRow = function( target, callback, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar rows = api.rows( target );\n\t\tvar settings = rows.settings()[0];\n\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\n\t\trows.remove();\n\t\n\t\tif ( callback ) {\n\t\t\tcallback.call( this, settings, data );\n\t\t}\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn data;\n\t};\n\t\n\t\n\t/**\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnDestroy();\n\t *    } );\n\t */\n\tthis.fnDestroy = function ( remove )\n\t{\n\t\tthis.api( true ).destroy( remove );\n\t};\n\t\n\t\n\t/**\n\t * Redraw the table\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t *      oTable.fnDraw();\n\t *    } );\n\t */\n\tthis.fnDraw = function( complete )\n\t{\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t// into account the new data, but can hold position.\n\t\tthis.api( true ).draw( complete );\n\t};\n\t\n\t\n\t/**\n\t * Filter the input based on data\n\t *  @param {string} sInput String to filter the table on\n\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sometime later - filter...\n\t *      oTable.fnFilter( 'test string' );\n\t *    } );\n\t */\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\telse {\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\n\t\tapi.draw();\n\t};\n\t\n\t\n\t/**\n\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t * provided parameters.\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t *  @param {int} [col] Optional column index that you want the data of.\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t *    defined, only data for the designated cell is returned.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Row data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('tr').click( function () {\n\t *        var data = oTable.fnGetData( this );\n\t *        // ... do something with the array / object of data for the row\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Individual cell data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('td').click( function () {\n\t *        var sData = oTable.fnGetData( this );\n\t *        alert( 'The cell clicked on had the value of '+sData );\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnGetData = function( src, col )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( src !== undefined ) {\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\tapi.row( src ).data() || null;\n\t\t}\n\t\n\t\treturn api.data().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t * typically want to use the '$' API method in preference to this as it is more\n\t * flexible.\n\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the nodes from the table\n\t *      var nNodes = oTable.fnGetNodes( );\n\t *    } );\n\t */\n\tthis.fnGetNodes = function( iRow )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\treturn iRow !== undefined ?\n\t\t\tapi.row( iRow ).node() :\n\t\t\tapi.rows().nodes().flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get the array indexes of a particular cell from it's DOM element\n\t * and column index including hidden columns\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t *    if given as a cell, an array of [row index, column index (visible),\n\t *    column index (all)] is given.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      $('#example tbody td').click( function () {\n\t *        // Get the position of the current data from the node\n\t *        var aPos = oTable.fnGetPosition( this );\n\t *\n\t *        // Get the data array for this row\n\t *        var aData = oTable.fnGetData( aPos[0] );\n\t *\n\t *        // Update the data array and return the value\n\t *        aData[ aPos[1] ] = 'clicked';\n\t *        this.innerHTML = 'clicked';\n\t *      } );\n\t *\n\t *      // Init DataTables\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnGetPosition = function( node )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\n\t\tif ( nodeName == 'TR' ) {\n\t\t\treturn api.row( node ).index();\n\t\t}\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\tvar cell = api.cell( node ).index();\n\t\n\t\t\treturn [\n\t\t\t\tcell.row,\n\t\t\t\tcell.columnVisible,\n\t\t\t\tcell.column\n\t\t\t];\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t/**\n\t * Check to see if a row is 'open' or not.\n\t *  @param {node} nTr the table row to check\n\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnIsOpen = function( nTr )\n\t{\n\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t};\n\t\n\t\n\t/**\n\t * This function will place a new row directly after a row which is currently\n\t * on display on the page, with the HTML contents that is passed into the\n\t * function. This can be used, for example, to ask for confirmation that a\n\t * particular record should be deleted.\n\t *  @param {node} nTr The table row to 'open'\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t *  @param {string} sClass Class to give the new TD cell\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t *    first parameter, is not found in the table, this method will silently\n\t *    return.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t{\n\t\treturn this.api( true )\n\t\t\t.row( nTr )\n\t\t\t.child( mHtml, sClass )\n\t\t\t.show()\n\t\t\t.child()[0];\n\t};\n\t\n\t\n\t/**\n\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t * function. With this function you can have a DataTables table go to the next,\n\t * previous, first or last pages.\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnPageChange( 'next' );\n\t *    } );\n\t */\n\tthis.fnPageChange = function ( mAction, bRedraw )\n\t{\n\t\tvar api = this.api( true ).page( mAction );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw(false);\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Show a particular column\n\t *  @param {int} iCol The column whose display should be changed\n\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Hide the second column after initialisation\n\t *      oTable.fnSetColumnVis( 1, false );\n\t *    } );\n\t */\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t{\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.columns.adjust().draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the settings for a particular table for external manipulation\n\t *  @returns {object} DataTables settings object. See\n\t *    {@link DataTable.models.oSettings}\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      var oSettings = oTable.fnSettings();\n\t *\n\t *      // Show an example parameter from the settings\n\t *      alert( oSettings._iDisplayStart );\n\t *    } );\n\t */\n\tthis.fnSettings = function()\n\t{\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t};\n\t\n\t\n\t/**\n\t * Sort the table by a particular column\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t *    'display index' if you have hidden data entries\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort immediately with columns 0 and 1\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t *    } );\n\t */\n\tthis.fnSort = function( aaSort )\n\t{\n\t\tthis.api( true ).order( aaSort ).draw();\n\t};\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *  @param {node} nNode the element to attach the sort listener to\n\t *  @param {int} iColumn the column that a click on this node will sort on\n\t *  @param {function} [fnCallback] callback function when sort is run\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort on column 1, when 'sorter' is clicked on\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t *    } );\n\t */\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t{\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t};\n\t\n\t\n\t/**\n\t * Update a table cell or row - this method will accept either a single value to\n\t * update the cell with, an array of values with one element for each column or\n\t * an object in the same format as the original data source. The function is\n\t * self-referencing in order to make the multi column updates easier.\n\t *  @param {object|array|string} mData Data to update the cell/row with\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t *    update a whole row.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t *  @returns {int} 0 on success, 1 on error\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t *    } );\n\t */\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\tapi.row( mRow ).data( mData );\n\t\t}\n\t\telse {\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t}\n\t\n\t\tif ( bAction === undefined || bAction ) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @method\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\tthis.oApi = this.internal = _ext.internal;\n\n\t// Extend with old style plug-in API methods\n\tfor ( var fn in DataTable.ext.internal ) {\n\t\tif ( fn ) {\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t}\n\t}\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t/*global oInit,_that,emptyInit*/\n\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oApi   = _that.internal;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"asStripeClasses\",\n\t\t\t\"ajax\",\n\t\t\t\"fnServerData\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"sAjaxSource\",\n\t\t\t\"sAjaxDataProp\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"sDom\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.sTable );\n\t\t\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tif ( oInit.iDeferLoading !== null )\n\t\t{\n\t\t\toSettings.bDeferLoading = true;\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Stripes\n\t\t */\n\t\tif ( oInit.asStripeClasses === null )\n\t\t{\n\t\t\toSettings.asStripeClasses =[\n\t\t\t\toClasses.sStripeOdd,\n\t\t\t\toClasses.sStripeEven\n\t\t\t];\n\t\t}\n\t\t\n\t\t/* Remove row stripe classes if they are already on the table row */\n\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\treturn rowOne.hasClass(el);\n\t\t} ) ) !== -1 ) {\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar anThs = [];\n\t\tvar aoColumnsInit;\n\t\tvar nThead = this.getElementsByTagName('thead');\n\t\tif ( nThead.length !== 0 )\n\t\t{\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t}\n\t\t\n\t\t/* If not given a column array, generate one with nulls */\n\t\tif ( oInit.aoColumns === null )\n\t\t{\n\t\t\taoColumnsInit = [];\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoColumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t}\n\t\t\n\t\t/* Add the columns */\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t}\n\t\t\n\t\t/* Apply the column definitions */\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t}, 'sc' );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t} );\n\t\t\n\t\t\tvar thead = $this.children('thead');\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t}\n\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t * to replace it with Ajax data\n\t\t\t\t */\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - Ƀ - Bitcoin\n// - Ξ - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _stripHtml = function ( d ) {\n\treturn d\n\t\t.replace( _re_html, '' ) // Complete tags\n\t\t.replace(/<script/i, ''); // Safety for incomplete script tag\n};\n\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n  \n\treturn out;\n}\n\nvar _includes = function (search, start) {\n\tif (start === undefined) {\n\t\tstart = 0;\n\t}\n\n\treturn this.indexOf(search, start) !== -1;\t\n};\n\n// Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (! Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\nif (! Array.prototype.includes) {\n\tArray.prototype.includes = _includes;\n}\n\n// .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nif (! String.prototype.includes) {\n\tString.prototype.includes = _includes;\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t}\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key, val) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key, val) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Language compatibility - when certain options are given, and others aren't, we\n * need to duplicate the values over, in order to provide backwards compatibility\n * with older language files.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnLanguageCompat( lang )\n{\n\t// Note the use of the Hungarian notation for the parameters in this method as\n\t// this is called after the mapping of camelCase to Hungarian\n\tvar defaults = DataTable.defaults.oLanguage;\n\n\t// Default mapping\n\tvar defaultDecimal = defaults.sDecimal;\n\tif ( defaultDecimal ) {\n\t\t_addNumericSort( defaultDecimal );\n\t}\n\n\tif ( lang ) {\n\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t// sZeroRecords - assuming that is given.\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\n\t\t// Likewise with loading records\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n}\n\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Numbers below, in order, are:\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t//\n\t\t// IE6 XP:                           100 100 100  83\n\t\t// IE7 Vista:                        100 100 100  83\n\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t// Evergreen Windows:                 83  83 100  83\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t// element is contained without forcing scrolling\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n\n/**\n * Array.prototype reduce[Right] method, used for browsers which don't support\n * JS 1.6. Done this way to reduce code size, since we iterate either way\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnReduce ( that, fn, init, start, end, inc )\n{\n\tvar\n\t\ti = start,\n\t\tvalue,\n\t\tisSet = false;\n\n\tif ( init !== undefined ) {\n\t\tvalue = init;\n\t\tisSet = true;\n\t}\n\n\twhile ( i !== end ) {\n\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalue = isSet ?\n\t\t\tfn( value, that[i], i, that ) :\n\t\t\tthat[i];\n\n\t\tisSet = true;\n\t\ti += inc;\n\t}\n\n\treturn value;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nTh The th element for this column\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings, nTh )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\n\t// Use the default column options function to initialise classes etc\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\tvar oClasses = oSettings.oClasses;\n\tvar th = $(oCol.nTh);\n\n\t// Try to get width information from the DOM. We can't get it from CSS\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\tif ( ! oCol.sWidthOrig ) {\n\t\t// Width attribute\n\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t// Style attribute\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\tif ( t ) {\n\t\t\toCol.sWidthOrig = t[1];\n\t\t}\n\t}\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\t\tif ( oOptions.sClass ) {\n\t\t\tth.addClass( oOptions.sClass );\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\n\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t// provided.\n\t\tif (! oCol.ariaTitle) {\n\t\t\toCol.ariaTitle = th.attr(\"aria-label\");\n\t\t}\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn mRender && type ?\n\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t}\n\n\t/* Check that the class assignment is correct for sorting */\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\toCol.sSortingClassJUI = \"\";\n\t}\n\telse if ( bAsc && !bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t}\n\telse if ( !bAsc && bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t}\n\telse\n\t{\n\t\toCol.sSortingClass = oClasses.sSortable;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t/* Not interested in doing column width calculation if auto-width is disabled */\n\tif ( settings.oFeatures.bAutoWidth !== false )\n\t{\n\t\tvar columns = settings.aoColumns;\n\n\t\t_fnCalculateColumnWidths( settings );\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t}\n\t}\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t{\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = $.inArray( iMatch, aiVis );\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( oSettings )\n{\n\tvar vis = 0;\n\n\t// No reduce in IE8, use a loop for now\n\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\tvis++;\n\t\t}\n\t} );\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\t$.map( oSettings.aoColumns, function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, cell, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t{\n\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols )\n\t{\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aData data array to be added\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar iRow = oSettings.aoData.length;\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: nTr ? 'dom' : 'data',\n\t\tidx: iRow\n\t} );\n\n\toData._aData = aDataIn;\n\toSettings.aoData.push( oData );\n\n\t/* Create the cells */\n\tvar nTd, sThisType;\n\tvar columns = oSettings.aoColumns;\n\n\t// Invalidate the column types as the new data needs to be revalidated\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\toSettings.aiDisplayMaster.push( iRow );\n\n\tvar id = oSettings.rowIdFn( aDataIn );\n\tif ( id !== undefined ) {\n\t\toSettings.aIds[ id ] = oData;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t}\n\n\treturn iRow;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Take a TR element and convert it to an index in aoData\n *  @param {object} oSettings dataTables settings object\n *  @param {node} n the TR element to find\n *  @returns {int} index if the node is found, null if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToDataIndex( oSettings, n )\n{\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n}\n\n\n/**\n * Take a TD element and convert it into a column data index (not the visible index)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow The row number the TD/TH can be found in\n *  @param {node} n The TD/TH element to find\n *  @returns {int} index if the node is found, -1 if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n{\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n /**\n * Take an array of integers (index array) and remove a target integer (value - not\n * the key!)\n *  @param {array} a Index array to target\n *  @param {int} iTarget value to find\n *  @memberof DataTable#oApi\n */\nfunction _fnDeleteIndex( a, iTarget, splice )\n{\n\tvar iTargetIndex = -1;\n\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t{\n\t\tif ( a[i] == iTarget )\n\t\t{\n\t\t\tiTargetIndex = i;\n\t\t}\n\t\telse if ( a[i] > iTarget )\n\t\t{\n\t\t\ta[i]--;\n\t\t}\n\t}\n\n\tif ( iTargetIndex != -1 && splice === undefined )\n\t{\n\t\ta.splice( iTargetIndex, 1 );\n\t}\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\tvar cellWrite = function ( cell, col ) {\n\t\t// This is very frustrating, but in IE if you just write directly\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t// even if there is a reference to them elsewhere\n\t\twhile ( cell.childNodes.length ) {\n\t\t\tcell.removeChild( cell.firstChild );\n\t\t}\n\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t};\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// For both row and cell invalidation, the cached data for sorting and\n\t// filtering is nulled out\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\n\t// Invalidate the type for a specific column (if given) or all columns since\n\t// the data might have changed\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\tcols[ colIdx ].sType = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, o, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t)) {\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t}\n\n\t\t\t/* Add user defined class */\n\t\t\tif ( oCol.sClass )\n\t\t\t{\n\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( oSettings )\n{\n\tvar i, ien, cell, row, column;\n\tvar thead = oSettings.nTHead;\n\tvar tfoot = oSettings.nTFoot;\n\tvar createHeader = $('th, td', thead).length === 0;\n\tvar classes = oSettings.oClasses;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( createHeader ) {\n\t\trow = $('<tr/>').appendTo( thead );\n\t}\n\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcell = $( column.nTh ).addClass( column.sClass );\n\n\t\tif ( createHeader ) {\n\t\t\tcell.appendTo( row );\n\t\t}\n\n\t\t// 1.11 move into sorting\n\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\tcell.addClass( column.sSortingClass );\n\n\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\tcell\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t}\n\t\t}\n\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\tcell.html( column.sTitle );\n\t\t}\n\n\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\toSettings, cell, column, classes\n\t\t);\n\t}\n\n\tif ( createHeader ) {\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t}\n\n\t/* Deal with the footer - add classes if required */\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\n\t// Cache the footer cells. Note that we only take the cells from the first\n\t// row in the footer. If there is more than one row the user wants to\n\t// interact with, they need to use the table().foot() method. Note also this\n\t// allows cells to be used for multiple columns using colspan\n\tif ( tfoot !== null ) {\n\t\tvar cells = oSettings.aoFooter[0];\n\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif (column) {\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states. The\n * methodology here is to use the layout array from _fnDetectHeader, modified for\n * the instantaneous column visibility, to construct the new layout. The grid is\n * traversed over cell at a time in a rows x columns grid fashion, although each\n * cell insert can cover multiple elements in the grid - which is tracks using the\n * aApplied array. Cell inserts in the grid will only occur where there isn't\n * already a cell in that position.\n *  @param {object} oSettings dataTables settings object\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n{\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\tvar aoLocal = [];\n\tvar aApplied = [];\n\tvar iColumns = oSettings.aoColumns.length;\n\tvar iRowspan, iColspan;\n\n\tif ( ! aoSource )\n\t{\n\t\treturn;\n\t}\n\n\tif (  bIncludeHidden === undefined )\n\t{\n\t\tbIncludeHidden = false;\n\t}\n\n\t/* Make a copy of the master layout array, but without the visible columns in it */\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t{\n\t\taoLocal[i] = aoSource[i].slice();\n\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t/* Remove any columns which are currently hidden */\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t{\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t{\n\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t}\n\t\t}\n\n\t\t/* Prep the applied array - it needs an element for each row */\n\t\taApplied.push( [] );\n\t}\n\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t{\n\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t/* All cells are going to be replaced, so empty out the row */\n\t\tif ( nLocalTr )\n\t\t{\n\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t{\n\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tiRowspan = 1;\n\t\t\tiColspan = 1;\n\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t */\n\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t{\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t{\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\tiRowspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t{\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tiColspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar asStripeClasses = oSettings.asStripeClasses;\n\tvar iStripes = asStripeClasses.length;\n\tvar oLang = oSettings.oLanguage;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.bDeferLoading )\n\t{\n\t\toSettings.bDeferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\tif ( iStripes !== 0 )\n\t\t\t{\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t{\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\t/* Table is empty - create a row with an empty message in it */\n\t\tvar sZero = oLang.sZeroRecords;\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t{\n\t\t\tsZero = oLang.sLoadingRecords;\n\t\t}\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t{\n\t\t\tsZero = oLang.sEmptyTable;\n\t\t}\n\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t.append( $('<td />', {\n\t\t\t\t'valign':  'top',\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t} ).html( sZero ) )[0];\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tvar body = $(oSettings.nTBody);\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif ( sort ) {\n\t\t_fnSort( settings );\n\t}\n\n\tif ( filter ) {\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t}\n\telse {\n\t\t// No filtering, so we want to just use the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( oSettings )\n{\n\tvar classes = oSettings.oClasses;\n\tvar table = $(oSettings.nTable);\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\tvar features = oSettings.oFeatures;\n\n\t// All DataTables are wrapped in a div\n\tvar insert = $('<div/>', {\n\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t} );\n\n\toSettings.nHolding = holding[0];\n\toSettings.nTableWrapper = insert[0];\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t/* Loop over the user set positioning and place the elements as needed */\n\tvar aDom = oSettings.sDom.split('');\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t{\n\t\tfeatureNode = null;\n\t\tcOption = aDom[i];\n\n\t\tif ( cOption == '<' )\n\t\t{\n\t\t\t/* New container div */\n\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\tcNext = aDom[i+1];\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t{\n\t\t\t\tsAttr = \"\";\n\t\t\t\tj = 2;\n\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t{\n\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t}\n\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t}\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t{\n\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t}\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t{\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t}\n\n\t\t\t\ti += j; /* Move along the position array */\n\t\t\t}\n\n\t\t\tinsert.append( nNewNode );\n\t\t\tinsert = $(nNewNode);\n\t\t}\n\t\telse if ( cOption == '>' )\n\t\t{\n\t\t\t/* End container div */\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\t// @todo Move options into their own plugins?\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t{\n\t\t\t/* Length */\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t}\n\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t{\n\t\t\t/* Filter */\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t}\n\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t{\n\t\t\t/* pRocessing */\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t}\n\t\telse if ( cOption == 't' )\n\t\t{\n\t\t\t/* Table */\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t}\n\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t{\n\t\t\t/* Info */\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t}\n\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t{\n\t\t\t/* Pagination */\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t}\n\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t{\n\t\t\t/* Plug-in features */\n\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t{\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Add to the 2D features array */\n\t\tif ( featureNode )\n\t\t{\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t{\n\t\t\t\taanFeatures[cOption] = [];\n\t\t\t}\n\n\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n\n\t/* Built our DOM structure - replace the holding div with what we want */\n\tholding.replaceWith( insert );\n\toSettings.nHolding = null;\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param array {object} aLayout Array to store the calculated layout in\n *  @param {node} nThead The header/footer element for the table\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( aLayout, nThead )\n{\n\tvar nTrs = $(nThead).children('tr');\n\tvar nTr, nCell;\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\tvar bUnique;\n\tvar fnShiftCol = function ( a, i, j ) {\n\t\tvar k = a[i];\n                while ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\taLayout.splice( 0, aLayout.length );\n\n\t/* We know how many rows there are in the layout - so prep it */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\taLayout.push( [] );\n\t}\n\n\t/* Calculate a layout array */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\tnTr = nTrs[i];\n\t\tiColumn = 0;\n\n\t\t/* For every cell in the row... */\n\t\tnCell = nTr.firstChild;\n\t\twhile ( nCell ) {\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t{\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t * accordingly\n\t\t\t\t */\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\n\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t};\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnCell = nCell.nextSibling;\n\t\t}\n\t}\n}\n\n\n/**\n * Get an array of unique th elements, one for each column\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nHeader automatically detect the layout from this node - optional\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n *  @returns array {node} aReturn list of unique th's\n *  @memberof DataTable#oApi\n */\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n{\n\tvar aReturn = [];\n\tif ( !aLayout )\n\t{\n\t\taLayout = oSettings.aoHeader;\n\t\tif ( nHeader )\n\t\t{\n\t\t\taLayout = [];\n\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t}\n\t}\n\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t{\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t{\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aReturn;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\n\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t// come from server-side processing or serverParams\n\tif ( data && Array.isArray(data) ) {\n\t\tvar tmp = {};\n\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t$.each( data, function (key, val) {\n\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\tif ( match ) {\n\t\t\t\t// Support for arrays\n\t\t\t\tvar name = match[0];\n\n\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t}\n\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp[val.name] = val.value;\n\t\t\t}\n\t\t} );\n\t\tdata = tmp;\n\t}\n\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error, thrown) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\n\tif ( oSettings.fnServerData )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.fnServerData.call( instance,\n\t\t\toSettings.sAjaxSource,\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\treturn { name: key, value: val };\n\t\t\t} ),\n\t\t\tcallback,\n\t\t\toSettings\n\t\t);\n\t}\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t} ) );\n\t}\n\telse if ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse\n\t{\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\n\t\t// Restore for next time around\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t// Keep track of drawHold state to handle scrolling after the Ajax call\n\tvar drawHold = settings._drawHold;\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\tsettings._drawHold = drawHold;\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\tsettings._drawHold = false;\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request. Note that this is basically done twice, is different ways - a modern\n * method which is used by default in DataTables 1.10 which uses objects and\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\n * option is set.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tcolumnCount = columns.length,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\ti, data = [], dataProp, column, columnSearch,\n\t\tsort = _fnSortFlatten( settings ),\n\t\tdisplayStart = settings._iDisplayStart,\n\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1;\n\n\tvar param = function ( name, value ) {\n\t\tdata.push( { 'name': name, 'value': value } );\n\t};\n\n\t// DataTables 1.9- compatible method\n\tparam( 'sEcho',          settings.iDraw );\n\tparam( 'iColumns',       columnCount );\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\tparam( 'iDisplayStart',  displayStart );\n\tparam( 'iDisplayLength', displayLength );\n\n\t// DataTables 1.10+ method\n\tvar d = {\n\t\tdraw:    settings.iDraw,\n\t\tcolumns: [],\n\t\torder:   [],\n\t\tstart:   displayStart,\n\t\tlength:  displayLength,\n\t\tsearch:  {\n\t\t\tvalue: preSearch.sSearch,\n\t\t\tregex: preSearch.bRegex\n\t\t}\n\t};\n\n\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcolumnSearch = preColSearch[i];\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\n\t\td.columns.push( {\n\t\t\tdata:       dataProp,\n\t\t\tname:       column.sName,\n\t\t\tsearchable: column.bSearchable,\n\t\t\torderable:  column.bSortable,\n\t\t\tsearch:     {\n\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\tregex: columnSearch.bRegex\n\t\t\t}\n\t\t} );\n\n\t\tparam( \"mDataProp_\"+i, dataProp );\n\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t}\n\n\t\tif ( features.bSort ) {\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t}\n\t}\n\n\tif ( features.bFilter ) {\n\t\tparam( 'sSearch', preSearch.sSearch );\n\t\tparam( 'bRegex', preSearch.bRegex );\n\t}\n\n\tif ( features.bSort ) {\n\t\t$.each( sort, function ( i, val ) {\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\n\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t} );\n\n\t\tparam( 'iSortingCols', sort.length );\n\t}\n\n\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t// form to use, based on sAjaxSource\n\tvar legacy = DataTable.ext.legacy.ajax;\n\tif ( legacy === null ) {\n\t\treturn settings.sAjaxSource ? data : d;\n\t}\n\n\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t// form\n\treturn legacy ? data : d;\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t// Support both\n\tvar compat = function ( old, modern ) {\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t};\n\n\tvar data = _fnAjaxDataSrc( settings, json );\n\tvar draw            = compat( 'sEcho',                'draw' );\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\n\tif ( ! settings._bInitComplete ) {\n\t\t_fnInitComplete( settings, json );\n\t}\n\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} oSettings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n function _fnAjaxDataSrc ( oSettings, json, write )\n {\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\toSettings.ajax.dataSrc :\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\tif ( ! write ) {\n\t\tif ( dataSrc === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\n\t// set\n\t_fnSetObjectDataFn( dataSrc )( json, write );\n}\n\n/**\n * Generate the node required for filtering text\n *  @returns {node} Filter control element\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlFilter ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar features = settings.aanFeatures;\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\n\tvar str = language.sSearch;\n\tstr = str.match(/_INPUT_/) ?\n\t\tstr.replace('_INPUT_', input) :\n\t\tstr+input;\n\n\tvar filter = $('<div/>', {\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t'class': classes.sFilter\n\t\t} )\n\t\t.append( $('<label/>' ).append( str ) );\n\n\tvar searchFn = function(event) {\n\t\t/* Update all other filter input elements for the new display */\n\t\tvar n = features.f;\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\tif(previousSearch['return'] && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\"sSearch\": val,\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\"return\": previousSearch['return']\n\t\t\t} );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t400 :\n\t\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.sSearch )\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s ) {\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame...\n\t\t\ttry {\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch ( e ) {}\n\t\t}\n\t} );\n\n\treturn filter[0];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oSearch search information\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\n{\n\tvar oPrevSearch = oSettings.oPreviousSearch;\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\tvar fnSaveFilter = function ( oFilter ) {\n\t\t/* Save the filtering values */\n\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\toPrevSearch['return'] = oFilter['return'];\n\t};\n\tvar fnRegex = function ( o ) {\n\t\t// Backwards compatibility with the bEscapeRegex option\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t};\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( oSettings );\n\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t{\n\t\t/* Global filter */\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\tfnSaveFilter( oInput );\n\n\t\t/* Now do the individual column filter */\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t{\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t}\n\n\t\t/* Custom filtering */\n\t\t_fnFilterCustom( oSettings );\n\t}\n\telse\n\t{\n\t\tfnSaveFilter( oInput );\n\t}\n\n\t/* Tell the draw function we have been filtering */\n\toSettings.bFiltered = true;\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n}\n\n\n/**\n * Apply custom filtering functions\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\t$.merge( displayRows, rows );\n\t}\n}\n\n\n/**\n * Filter the table on a per-column basis\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sInput string to filter on\n *  @param {int} iColumn column to filter\n *  @param {bool} bRegex treat search string as a regular expression or not\n *  @param {bool} bSmart use smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n{\n\tif ( searchStr === '' ) {\n\t\treturn;\n\t}\n\n\tvar data;\n\tvar out = [];\n\tvar display = settings.aiDisplay;\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\n\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\tif ( rpSearch.test( data ) ) {\n\t\t\tout.push( display[i] );\n\t\t}\n\t}\n\n\tsettings.aiDisplay = out;\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n *  @param {object} settings dataTables settings object\n *  @param {string} input string to filter on\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n *  @param {bool} regex treat as a regular expression or not\n *  @param {bool} smart perform smart filtering or not\n *  @param {bool} caseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n{\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\tvar displayMaster = settings.aiDisplayMaster;\n\tvar display, invalidated, i;\n\tvar filtered = [];\n\n\t// Need to take account of custom filtering functions - always filter\n\tif ( DataTable.ext.search.length !== 0 ) {\n\t\tforce = true;\n\t}\n\n\t// Check if any of the rows were invalidated\n\tinvalidated = _fnFilterData( settings );\n\n\t// If the input is blank - we just want the full data set\n\tif ( input.length <= 0 ) {\n\t\tsettings.aiDisplay = displayMaster.slice();\n\t}\n\telse {\n\t\t// New search - start from the master array\n\t\tif ( invalidated ||\n\t\t\t force ||\n\t\t\t regex ||\n\t\t\t prevSearch.length > input.length ||\n\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t                  // re-filtered since indexes will have changed\n\t\t) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\n\t\t// Search the display array\n\t\tdisplay = settings.aiDisplay;\n\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\tfiltered.push( display[i] );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = filtered;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n{\n\tsearch = regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. So this is what we want to\n\t\t * generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar a = $.map( search.match( /[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''], function ( word ) {\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\tvar m = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t}\n\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar column;\n\tvar i, j, ien, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Convert from the internal Hungarian notation to camelCase for external\n * interaction\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToCamel ( obj )\n{\n\treturn {\n\t\tsearch:          obj.sSearch,\n\t\tsmart:           obj.bSmart,\n\t\tregex:           obj.bRegex,\n\t\tcaseInsensitive: obj.bCaseInsensitive\n\t};\n}\n\n\n\n/**\n * Convert from camelCase notation to the internal Hungarian. We could use the\n * Hungarian convert function here, but this is cleaner\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToHung ( obj )\n{\n\treturn {\n\t\tsSearch:          obj.search,\n\t\tbSmart:           obj.smart,\n\t\tbRegex:           obj.regex,\n\t\tbCaseInsensitive: obj.caseInsensitive\n\t};\n}\n\n/**\n * Generate the node required for the info display\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Information element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlInfo ( settings )\n{\n\tvar\n\t\ttid = settings.sTableId,\n\t\tnodes = settings.aanFeatures.i,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t} );\n\n\tif ( ! nodes ) {\n\t\t// Update display on each draw\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\"sName\": \"information\"\n\t\t} );\n\n\t\tn\n\t\t\t.attr( 'role', 'status' )\n\t\t\t.attr( 'aria-live', 'polite' );\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n[0];\n}\n\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings )\n{\n\t/* Show information about the table */\n\tvar nodes = settings.aanFeatures.i;\n\tif ( nodes.length === 0 ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total ?\n\t\t\tlang.sInfo :\n\t\t\tlang.sInfoEmpty;\n\n\tif ( total !== max ) {\n\t\t/* Record set after filtering */\n\t\tout += ' ' + lang.sInfoFiltered;\n\t}\n\n\t// Convert the macros\n\tout += lang.sInfoPostFix;\n\tout = _fnInfoMacros( settings, out );\n\n\tvar callback = lang.fnInfoCallback;\n\tif ( callback !== null ) {\n\t\tout = callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\t$(nodes).html( out );\n}\n\n\nfunction _fnInfoMacros ( settings, str )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t// internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n}\n\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\tvar columns = settings.aoColumns, column;\n\tvar features = settings.oFeatures;\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Show the display HTML options */\n\t_fnAddOptionsHtml( settings );\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t/* Calculate sizes for columns */\n\tif ( features.bAutoWidth ) {\n\t\t_fnCalculateColumnWidths( settings );\n\t}\n\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\tcolumn = columns[i];\n\n\t\tif ( column.sWidth ) {\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t}\n\t}\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tvar dataSrc = _fnDataSource( settings );\n\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t_fnInitComplete( settings );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} oSettings dataTables settings object\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n *    with client-side processing (optional)\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings, json )\n{\n\tsettings._bInitComplete = true;\n\n\t// When data was added after the initialisation (data or Ajax) we need to\n\t// calculate the column sizing\n\tif ( json || settings.oInit.aaData ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n}\n\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n\n/**\n * Generate the node required for user display length changing\n *  @param {object} settings dataTables settings object\n *  @returns {node} Display length feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlLength ( settings )\n{\n\tvar\n\t\tclasses  = settings.oClasses,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = settings.aLengthMenu,\n\t\td2       = Array.isArray( menu[0] ),\n\t\tlengths  = d2 ? menu[0] : menu,\n\t\tlanguage = d2 ? menu[1] : menu;\n\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.sLengthSelect\n\t} );\n\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\tif ( ! settings.aanFeatures.l ) {\n\t\tdiv[0].id = tableId+'_length';\n\t}\n\n\tdiv.children().append(\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function(e) {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\t\t}\n\t} );\n\n\treturn div[0];\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Note that most of the paging logic is done in\n * DataTable.ext.pager\n */\n\n/**\n * Generate the node required for default pagination\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Pagination feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlPaginate ( settings )\n{\n\tvar\n\t\ttype   = settings.sPaginationType,\n\t\tplugin = DataTable.ext.pager[ type ],\n\t\tmodern = typeof plugin === 'function',\n\t\tredraw = function( settings ) {\n\t\t\t_fnDraw( settings );\n\t\t},\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\tfeatures = settings.aanFeatures;\n\n\tif ( ! modern ) {\n\t\tplugin.fnInit( settings, node, redraw );\n\t}\n\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\tif ( ! features.p )\n\t{\n\t\tnode.id = settings.sTableId+'_paginate';\n\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": function( settings ) {\n\t\t\t\tif ( modern ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sName\": \"pagination\"\n\t\t} );\n\t}\n\n\treturn node;\n}\n\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t  start = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\tif ( changed ) {\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\n\t\tif ( redraw ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t}\n\telse {\n\t\t// No change event - paging was called, but no change\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\n\t}\n\n\treturn changed;\n}\n\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings dataTables settings object\n *  @returns {node} Processing element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlProcessing ( settings )\n{\n\treturn $('<div/>', {\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t'class': settings.oClasses.sProcessing,\n\t\t\t'role': 'status'\n\t\t} )\n\t\t.html( settings.oLanguage.sProcessing )\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t.insertBefore( settings.nTable )[0];\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings dataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n *  @memberof DataTable#oApi\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\tif ( settings.oFeatures.bProcessing ) {\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses;\n\tvar caption = table.children('caption');\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\tif ( scrollX ) {\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\tif ( footer ) {\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t} );\n\t}\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push( {\n\t\t\"fn\": _fnScrollDraw,\n\t\t\"sName\": \"scrolling\"\n\t} );\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Take live measurements from the DOM\n *   3. Apply the measurements to align the columns\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tscrollX        = scroll.sX,\n\t\tscrollXInner   = scroll.sXInner,\n\t\tscrollY        = scroll.sY,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderStyle = divHeader[0].style,\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivBodyStyle   = divBodyEl.style,\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\ttableEl        = table[0],\n\t\ttableStyle     = tableEl.style,\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\tie67           = browser.bScrollOversize,\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\theaderTrgEls, footerTrgEls,\n\t\theaderSrcEls, footerSrcEls,\n\t\theaderCopy, footerCopy,\n\t\theaderWidths=[], footerWidths=[],\n\t\theaderContent=[], footerContent=[],\n\t\tidx, correction, sanityWidth,\n\t\tzeroOut = function(nSizer) {\n\t\t\tvar style = nSizer.style;\n\t\t\tstyle.paddingTop = \"0\";\n\t\t\tstyle.paddingBottom = \"0\";\n\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\tstyle.height = 0;\n\t\t};\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t/*\n\t * 1. Re-create the table inside the scrolling div\n\t */\n\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\tfooterSrcEls = footerCopy.find('tr');\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderTrgEls = header.find('tr'); // original header is in its own table\n\theaderSrcEls = headerCopy.find('tr');\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\n\t/*\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t */\n\n\t// Remove old sizing and apply the calculated column widths\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t// calculated sizes to this header\n\tif ( ! scrollX )\n\t{\n\t\tdivBodyStyle.width = '100%';\n\t\tdivHeader[0].style.width = '100%';\n\t}\n\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t} );\n\n\tif ( footer ) {\n\t\t_fnApplyToChildren( function(n) {\n\t\t\tn.style.width = \"\";\n\t\t}, footerSrcEls );\n\t}\n\n\t// Size the table as a whole\n\tsanityWidth = table.outerWidth();\n\tif ( scrollX === \"\" ) {\n\t\t// No x scrolling\n\t\ttableStyle.width = \"100%\";\n\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t// into account.\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t}\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\telse if ( scrollXInner !== \"\" ) {\n\t\t// legacy x scroll inner has been given - use it\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\n\t// Hidden header should have zero height, so remove padding and borders. Then\n\t// set the width based on the real headers\n\n\t// Apply all styles in one pass\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\n\t// Read all widths in next pass\n\t_fnApplyToChildren( function(nSizer) {\n\t\tvar style = window.getComputedStyle ?\n\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t_fnStringToCss( $(nSizer).width() );\n\n\t\theaderContent.push( nSizer.innerHTML );\n\t\theaderWidths.push( style );\n\t}, headerSrcEls );\n\n\t// Apply all widths in final pass\n\t_fnApplyToChildren( function(nToSize, i) {\n\t\tnToSize.style.width = headerWidths[i];\n\t}, headerTrgEls );\n\n\t$(headerSrcEls).css('height', 0);\n\n\t/* Same again with the footer if we have one */\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = footerWidths[i];\n\t\t}, footerTrgEls );\n\n\t\t$(footerSrcEls).height(0);\n\t}\n\n\n\t/*\n\t * 3. Apply the measurements\n\t */\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely. We want to also fix their\n\t// width to what they currently are\n\t_fnApplyToChildren( function(nSizer, i) {\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\tnSizer.style.width = headerWidths[i];\n\t}, headerSrcEls );\n\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = footerWidths[i];\n\t\t}, footerSrcEls );\n\t}\n\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t{\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\tsanityWidth+barWidth :\n\t\t\t\tsanityWidth;\n\n\t\t// IE6/7 are a law unto themselves...\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t}\n\n\t\t// And give the user a warning that we've stopped the table getting too small\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t}\n\t}\n\telse\n\t{\n\t\tcorrection = '100%';\n\t}\n\n\t// Apply to the container elements\n\tdivBodyStyle.width = _fnStringToCss( correction );\n\tdivHeaderStyle.width = _fnStringToCss( correction );\n\n\tif ( footer ) {\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t}\n\n\n\t/*\n\t * 4. Clean up\n\t */\n\tif ( ! scrollY ) {\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t */\n\t\tif ( ie67 ) {\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t}\n\t}\n\n\t/* Finally set the width's of the header and footer tables */\n\tvar iOuterWidth = table.outerWidth();\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\n\tif ( footer ) {\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').insertBefore( table.children('thead') );\n\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n\n\n/**\n * Apply a given function to the display child nodes of an element array (typically\n * TD children of TR rows\n *  @param {function} fn Method to apply to the objects\n *  @param array {nodes} an1 List of elements to look through for display children\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyToChildren( fn, an1, an2 )\n{\n\tvar index=0, i=0, iLen=an1.length;\n\tvar nNode1, nNode2;\n\n\twhile ( i < iLen ) {\n\t\tnNode1 = an1[i].firstChild;\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\twhile ( nNode1 ) {\n\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\tif ( an2 ) {\n\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n\nvar __re_html_remove = /<.*?>/g;\n\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( oSettings )\n{\n\tvar\n\t\ttable = oSettings.nTable,\n\t\tcolumns = oSettings.aoColumns,\n\t\tscroll = oSettings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tcolumnCount = columns.length,\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\theaderCells = $('th', oSettings.nTHead),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\tuserInputs = false,\n\t\ti, column, columnIdx, width, outerWidth,\n\t\tbrowser = oSettings.oBrowser,\n\t\tie67 = browser.bScrollOversize;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t/* Convert any user input sizes into pixel sizes */\n\tvar sizes = _fnConvertToWidth(_pluck(columns, 'sWidthOrig'), tableContainer);\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\tif ( column.sWidth !== null ) {\n\t\t\tcolumn.sWidth = sizes[i];\n\n\t\t\tuserInputs = true;\n\t\t}\n\t}\n\n\t/* If the number of columns in the DOM equals the number that we have to\n\t * process in DataTables, then we can use the offsets that are created by\n\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t * nor scrolling used\n\t */\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t     columnCount == headerCells.length\n\t) {\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\n\t\t\tif ( colIdx !== null ) {\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t// table widths\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t.removeAttr( 'id' );\n\n\t\t// Clean up the table body\n\t\ttmpTable.find('tbody tr').remove();\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t// real header and footer are contained in different table tags\n\t\ttmpTable.find('thead, tfoot').remove();\n\t\ttmpTable\n\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t.append( $(oSettings.nTFoot).clone() );\n\n\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t// Apply custom sizing to the cloned header\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t'';\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\t// Find the widest cell for each column and put it into the table\n\t\tif ( oSettings.aoData.length ) {\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t.clone( false )\n\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t.appendTo( tr );\n\t\t\t}\n\t\t}\n\n\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t// duplicated in the dom (radio elements for example)\n\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t// Table has been built, attach to the document so we can work with it.\n\t\t// A holding element is used, positioned at the top of the container\n\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t// needed\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tright: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} :\n\t\t\t\t{}\n\t\t\t)\n\t\t\t.append( tmpTable )\n\t\t\t.appendTo( tableContainer );\n\n\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t// is. This results in slightly different, but I think correct behaviour\n\t\tif ( scrollX && scrollXInner ) {\n\t\t\ttmpTable.width( scrollXInner );\n\t\t}\n\t\telse if ( scrollX ) {\n\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t// collapse\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t}\n\t\telse if ( scrollY ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t\telse if ( tableWidthAttr ) {\n\t\t\ttmpTable.width( tableWidthAttr );\n\t\t}\n\n\t\t// Get the width of each column in the constructed table - we need to\n\t\t// know the inner width (so it can be assigned to the other table's\n\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t// column, but if ever a header can span multiple columns, this will\n\t\t// need to be modified.\n\t\tvar total = 0;\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tvar cell = $(headerCells[i]);\n\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\tcell.outerWidth();\n\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\ttotal += bounding;\n\n\t\t\t// Width for each column to use\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t}\n\n\t\ttable.style.width = _fnStringToCss( total );\n\n\t\t// Finished with the table - ditch it\n\t\tholder.remove();\n\t}\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t} ) );\n\t\t};\n\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\tif ( ie67 ) {\n\t\t\tsetTimeout( bindResize, 1000 );\n\t\t}\n\t\telse {\n\t\t\tbindResize();\n\t\t}\n\n\t\toSettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Throttle the calls to a function. Arguments and context are maintained for\n * the throttled function\n *  @param {function} fn Function to be called\n *  @param {int} [freq=200] call frequency in mS\n *  @returns {function} wrapped function\n *  @memberof DataTable#oApi\n */\nvar _fnThrottle = DataTable.util.throttle;\n\n\n/**\n * Convert a set of CSS units width to pixels (e.g. 2em)\n *  @param {string[]} widths widths to be converted\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\n *  @returns {int[]} widths in pixels\n *  @memberof DataTable#oApi\n */\nfunction _fnConvertToWidth ( widths, parent )\n{\n\tvar els = [];\n\tvar results = [];\n\n\t// Add the elements in a single loop so we only need to reflow once\n\tfor (var i=0 ; i<widths.length ; i++) {\n\t\tif (widths[i]) {\n\t\t\tels.push(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( 'width', _fnStringToCss( widths[i] ) )\n\t\t\t\t\t.appendTo( parent || document.body )\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\tels.push(null);\n\t\t}\n\t}\n\n\t// Get the sizes (will reflow once)\n\tfor (var i=0 ; i<widths.length ; i++) {\n\t\tresults.push(els[i] ? els[i][0].offsetWidth : null);\n\t}\n\n\t// Tidy\n\t$(els).remove();\n\n\treturn results;\n}\n\n\n/**\n * Get the widest node\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {node} widest table node\n *  @memberof DataTable#oApi\n */\nfunction _fnGetWidestNode( settings, colIdx )\n{\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\tif ( idx < 0 ) {\n\t\treturn null;\n\t}\n\n\tvar data = settings.aoData[ idx ];\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\tdata.anCells[ colIdx ];\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} max string length for each column\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar s, max=-1, maxIdx = -1;\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\ts = s.replace( __re_html_remove, '' );\n\t\ts = s.replace( /&nbsp;/g, ' ' );\n\n\t\tif ( s.length > max ) {\n\t\t\tmax = s.length;\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\n\treturn maxIdx;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, iLen, k, kLen,\n\t\taSort = [],\n\t\taiOrig = [],\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [],\n\t\tadd = function ( a ) {\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t// 1D array\n\t\t\t\tnestedSort.push( a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// 2D array\n\t\t\t\t$.merge( nestedSort, a );\n\t\t\t}\n\t\t};\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\tadd( fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\tadd( fixed.pre );\n\t}\n\n\tadd( settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\tadd( fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t{\n\t\t\tiCol = aDataSort[k];\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t}\n\n\t\t\taSort.push( {\n\t\t\t\tsrc:       srcCol,\n\t\t\t\tcol:       iCol,\n\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\ttype:      sType,\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n *  @todo This really needs split up!\n */\nfunction _fnSort ( oSettings )\n{\n\tvar\n\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\tsDataType, nTh,\n\t\taiOrig = [],\n\t\toExtSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\taoColumns = oSettings.aoColumns,\n\t\taDataSort, data, iCol, sType, oSort,\n\t\tformatters = 0,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\taSort = _fnSortFlatten( oSettings );\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Track if we can use the fast sort algorithm\n\t\tif ( sortCol.formatter ) {\n\t\t\tformatters++;\n\t\t}\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var iTest;\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t *      if (iTest !== 0)\n\t\t *        return iTest;\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (iTest !== 0)\n\t\t *      return iTest;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t *\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t * methods which do not have a pre-sort formatting function.\n\t\t */\n\t\tif ( formatters === aSort.length ) {\n\t\t\t// All sort types have formatting functions\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t// methods.\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t}\n\n\t/* Tell the draw function that we have sorted the data */\n\toSettings.bSorted = true;\n}\n\n\nfunction _fnSortAria ( settings )\n{\n\tvar label;\n\tvar nextSort;\n\tvar columns = settings.aoColumns;\n\tvar aSort = _fnSortFlatten( settings );\n\tvar oAria = settings.oLanguage.oAria;\n\n\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t// attributes as needed)\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tvar col = columns[i];\n\t\tvar asSorting = col.asSorting;\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\tvar th = col.nTh;\n\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t// attr() and removeAttr() methods...\n\t\tth.removeAttribute('aria-sort');\n\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\tif ( col.bSortable ) {\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextSort = asSorting[0];\n\t\t\t}\n\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\toAria.sSortAscending :\n\t\t\t\toAria.sSortDescending\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tlabel = sTitle;\n\t\t}\n\n\t\tth.setAttribute('aria-label', label);\n\t}\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortListener ( settings, colIdx, append, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n\n\t// Run the sort by calling a full redraw\n\t_fnReDraw( settings );\n\n\t// callback used for async user interaction\n\tif ( typeof callback == 'function' ) {\n\t\tcallback( settings );\n\t}\n}\n\n\n/**\n * Attach a sort handler (click) to a node\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\n\t_fnBindAction( attachTo, {}, function (e) {\n\t\t/* If the column is not sortable - don't to anything */\n\t\tif ( col.bSortable === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If processing is enabled use a timeout to allow the processing\n\t\t// display to be shown - otherwise to it synchronously\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\n\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t// processing display\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\t\telse {\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t}\n\t} );\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.sSortColumn;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, idx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ idx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\n\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\tformatter( cellData ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n\n/**\n * Save the state of a table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, oInit, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n};\n\n\n/**\n * Return the settings object for a particular table\n *  @param {node} table table we are using as a dataTable\n *  @returns {object} Settings object - or null if not found\n *  @memberof DataTable#oApi\n */\nfunction _fnSettingsFromNode ( table )\n{\n\tvar settings = DataTable.settings;\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\n\treturn idx !== -1 ?\n\t\tsettings[ idx ] :\n\t\tnull;\n}\n\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object} oData Data object to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, oData, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\tfn(e);\n\t\t\t} )\n\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\t\t\t} )\n\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\treturn false;\n\t\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @param {string} sName Identifying name for the callback (i.e. a label)\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n{\n\tif ( fn )\n\t{\n\t\toSettings[sStore].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"sName\": sName\n\t\t} );\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null ) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\n\t\ttable.trigger( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = $.map( settings, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = $.inArray( mixed, tables );\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed);\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed;\n\t}\n\n\tif ( jq ) {\n\t\treturn jq.map( function(i) {\n\t\t\tidx = $.inArray( this, tables );\n\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t} ).toArray();\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = _unique( settings );\n\n\t// Initial data\n\tif ( data ) {\n\t\t$.merge( this, data );\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\n\tconcat:  __arrayProto.concat,\n\n\n\tcontext: [], // array of table settings objects\n\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.filter ) {\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\ta.push( this[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\n\tjoin:    __arrayProto.join,\n\n\n\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t{\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\tif ( this[i] === obj ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t{\n\t\t// Bit cheeky...\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t},\n\n\n\tlength:  0,\n\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.map ) {\n\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\n\tpush:    __arrayProto.push,\n\n\n\t// Does not return an API instance\n\treduce: __arrayProto.reduce || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t},\n\n\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t},\n\n\n\treverse: __arrayProto.reverse,\n\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\n\tshift:   __arrayProto.shift,\n\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\n\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\tsplice:  __arrayProto.splice,\n\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this) );\n\t},\n\n\n\tunshift: __arrayProto.unshift\n} );\n\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct,\n\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\treturn function () {\n\t\t\t\tvar ret = fn.apply( scope, arguments );\n\n\t\t\t\t// Method extension\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\treturn ret;\n\t\t\t};\n\t\t};\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n\n// @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n\n// \t_Api.extend( inst, obj );\n// };\n\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tvar find = function ( src, name ) {\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\tif ( src[i].name === name ) {\n\t\t\t\treturn src[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\treturn $.map( selector, function (item) {\n\t\t\treturn __table_selector(item, a);\n\t\t} );\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = $.map( a, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function (i) {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTable;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTBody;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTHead;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTFoot;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function ( action ) {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn ctx.ajax ?\n\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\tctx.ajax.url :\n\t\t\t\tctx.ajax :\n\t\t\tctx.sAjaxSource;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t// value of `sAjaxSource` redundant.\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\nvar _selector_first = function ( inst )\n{\n\t// Reduce the API instance to the first item found\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\tif ( inst[i].length > 0 ) {\n\t\t\t// Assign the first element to the first item in the instance\n\t\t\t// and truncate the instance and context\n\t\t\tinst[0] = inst[i];\n\t\t\tinst[0].length = 1;\n\t\t\tinst.length = 1;\n\t\t\tinst.context = [ inst.context[i] ];\n\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\t// Not found - return an empty instance\n\tinst.length = 0;\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\tel :\n\t\t\t\t\tnull;\n\t\t\t} );\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar i, ien;\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\treturn _selector_run( 'row', selector, run, settings, opts );\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tvar that = this;\n\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\t\tvar i, ien, j, jen;\n\t\tvar loopRow, loopCells;\n\n\t\tdata.splice( row, 1 );\n\n\t\t// Update the cached indexes\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tloopRow = data[i];\n\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t// Rows\n\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t}\n\n\t\t\t// Cells\n\t\t\tif ( loopCells !== null ) {\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete from the display arrays\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( settings ) {\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tsettings.aoData[i].idx = i;\n\t\t}\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\t$.merge( modRows, newRows );\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\tvar namespace = 'on-plugin-init';\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\n\tvar destroyEvent = 'destroy. ' + namespace;\n\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar data = settings.aoData;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\tif (data[i]._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\tapi.on( destroyEvent, function () {\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\n\t});\n\n\tvar loaded = api.state.loaded();\n\n\tif ( loaded && loaded.childRows ) {\n\t\tapi\n\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n});\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\tundefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function ( show ) {   // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\tnodes = _pluck( columns, 'nTh' );\n\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\trow, cells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\ttr = data[i].nTr;\n\t\t\tcells = data[i].anCells;\n\n\t\t\tif ( tr ) {\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTh;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTf;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t__setColumnVis( settings, column, vis );\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n \t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = Array.prototype.slice.call( arguments );\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = order.slice();\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener( settings, node, column, callback );\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\treturn this.iterator( 'table', function ( settings, i ) {\n\t\tvar sort = [];\n\n\t\t$.each( that[i], function (j, col) {\n\t\t\tsort.push( [ col, dir ] );\n\t\t} );\n\n\t\tsettings.aaSorting = sort;\n\t} );\n} );\n\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\"sSearch\": input+\"\",\n\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t} ), 1 );\n\t} );\n} );\n\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} );\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t} );\n\t}\n);\n\n/*\n * State API methods\n */\n\n_api_register( 'state()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oSavedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n\n\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\n *   If not provided, automatic detection is attempted.\n */\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || module.type === 'DateTime') {\n\t\tDataTable.DateTime = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n{\n\tvar aThis = DataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = DataTable.fnTables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = $.map( DataTable.settings, function (o) {\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\treturn o.nTable;\n\t\t}\n\t} );\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\tvar i, ien;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t);\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.sTable );\n\n\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\tif ( ien ) {\n\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t// Rows and columns:\n\t\t\t//  arg1 - index\n\t\t\t//  arg2 - table counter\n\t\t\t//  arg3 - loop counter\n\t\t\t//  arg4 - undefined\n\t\t\t// Cells:\n\t\t\t//  arg1 - row index\n\t\t\t//  arg2 - column index\n\t\t\t//  arg3 - table counter\n\t\t\t//  arg4 - loop counter\n\t\t\tfn.call(\n\t\t\t\tapi[ type ](\n\t\t\t\t\targ1,\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t),\n\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t);\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"1.13.11\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bCaseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sSearch\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bRegex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bSmart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t *  @type array nodes\n\t *  @default []\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t *  @type array|object\n\t *  @default []\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Cache of the class name that DataTables has applied to the row, so we\n\t * can quickly look at this variable rather than needing to do a DOM check\n\t * on className for the nTr property.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @private\n\t */\n\t\"_sRowStripe\": \"\",\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t *  @type integer\n\t *  @default -1\n\t *  @private\n\t */\n\t\"idx\": -1\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t * is faster to just hold it as a variable\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t *  @type array\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t *  @type array\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t *  @type boolean\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t *  @type boolean\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t *  @type boolean\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t *  @type boolean\n\t *  @default false\n\t *  @private\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @default null\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {string} sSpecific The specific data type you want to get -\n\t *    'display', 'type' 'filter' 'sort'\n\t *  @returns {*} The data for the cell from the given row's data\n\t *  @default null\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {*} sValue Value to set\n\t *  @default null\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * Unique header TH/TD element for this column - this is what the sorting\n\t * listener is attached to (if sorting is enabled.)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTh\": null,\n\n\t/**\n\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t * in DataTables as such, but can be used for plug-ins to reference the\n\t * footer for each column.\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTf\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t *  @type string\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t *  @type string\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t *  @type string\n\t *  @default std\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column -\n\t * when jQuery UI theming is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClassJUI\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t *  @type string\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidthOrig\": null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.data\n\t *\n\t *  @example\n\t *    // Using a 2D array data source\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\" },\n\t *          { \"title\": \"Browser\" },\n\t *          { \"title\": \"Platform\" },\n\t *          { \"title\": \"Version\" },\n\t *          { \"title\": \"Grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using an array of objects as a data source (`data`)\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  4,\n\t *            \"grade\":    \"X\"\n\t *          },\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  5,\n\t *            \"grade\":    \"C\"\n\t *          }\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t *  @type array\n\t *  @default [[0,'asc']]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.order\n\t *\n\t *  @example\n\t *    // Sort by 3rd column first, and then 4th column\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t *      } );\n\t *    } );\n\t *\n\t *    // No initial sorting\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": []\n\t *      } );\n\t *    } );\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.orderFixed\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderFixed\": [[0,'asc']]\n\t *      } );\n\t *    } )\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t *   DataTables 1.9-.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t *\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t *\n\t *  @type string|object|function\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.ajax\n\t *  @since 1.10.0\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax.\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": \"data.json\"\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"tableData\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t *   // from a plain array rather than an array in an object\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Manipulate the data returned from the server - add a link to data\n\t *   // (note this can, should, be done using `render` for the column - this\n\t *   // is just a simple example of how the data can be manipulated).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": function ( json ) {\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t *         }\n\t *         return json;\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Add data to the request\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"data\": function ( d ) {\n\t *         return {\n\t *           \"extra_search\": $('#extra').val()\n\t *         };\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Send request as POST\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"type\": \"POST\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get the data from localStorage (could interface with a form for\n\t *   // adding, editing and removing rows).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": function (data, callback, settings) {\n\t *       callback(\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t *       );\n\t *     }\n\t *   } );\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t *  @type array\n\t *  @default [ 10, 25, 50, 100 ]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.lengthMenu\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t *      } );\n\t *    } );\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.column\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.columnDefs\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.searchCols\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchCols\": [\n\t *          null,\n\t *          { \"search\": \"My filter\" },\n\t *          null,\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t *        ]\n\t *      } );\n\t *    } )\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * An array of CSS classes that should be applied to displayed rows. This\n\t * array may be of any length, and DataTables will apply each class\n\t * sequentially, looping when required.\n\t *  @type array\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t *    options</i>\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.stripeClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t *      } );\n\t *    } )\n\t */\n\t\"asStripeClasses\": null,\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.autoWidth\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"autoWidth\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.deferRender\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajax\": \"sources/arrays.txt\",\n\t *        \"deferRender\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDeferRender\": false,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.destroy\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"srollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *\n\t *      // Some time later....\n\t *      $('#example').dataTable( {\n\t *        \"filter\": false,\n\t *        \"destroy\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.searching\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"searching\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bFilter\": true,\n\n\n\t/**\n\t * Enable or disable the table information display. This shows information\n\t * about the data that is currently visible on the page, including information\n\t * about filtered data if that action is being performed.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.info\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"info\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bInfo\": true,\n\n\n\t/**\n\t * Allows the end user to select the size of a formatted page from a select\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.lengthChange\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"lengthChange\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bLengthChange\": true,\n\n\n\t/**\n\t * Enable or disable pagination.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.paging\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"paging\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.processing\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"processing\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.retrieve\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      initTable();\n\t *      tableActions();\n\t *    } );\n\t *\n\t *    function initTable ()\n\t *    {\n\t *      return $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false,\n\t *        \"retrieve\": true\n\t *      } );\n\t *    }\n\t *\n\t *    function tableActions ()\n\t *    {\n\t *      var table = initTable();\n\t *      // perform API operations with oTable\n\t *    }\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollCollapse\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200\",\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverSide\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"xhr.php\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.ordering\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"ordering\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderMulti\n\t *\n\t *  @example\n\t *    // Disable multiple column sorting ability\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderMulti\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderCellsTop\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderCellsTop\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortCellsTop\": false,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.orderClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderClasses\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t *\n\t * Due to the use of `localStorage` the default state saving is not supported\n\t * in IE6 or 7. If state saving is required in those browsers, use\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.stateSave\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.createdRow\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.drawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"drawCallback\": function( settings ) {\n\t *          alert( 'DataTables has redrawn the table' );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t *  @type function\n\t *  @param {node} foot \"TR\" element for the footer\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.footerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t *  @type function\n\t *  @member\n\t *  @param {int} toFormat number to be formatted\n\t *  @returns {string} formatted string for DataTables to show the number\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.formatNumber\n\t *\n\t *  @example\n\t *    // Format a number using a single quote for the separator (note that\n\t *    // this can also be done with the language.thousands option)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"formatNumber\": function ( toFormat ) {\n\t *          return toFormat.toString().replace(\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t *          );\n\t *        };\n\t *      } );\n\t *    } );\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t *  @type function\n\t *  @param {node} head \"TR\" element for the header\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.headerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {int} start Starting position in data for the draw\n\t *  @param {int} end End position in data for the draw\n\t *  @param {int} max Total number of rows in the table (regardless of\n\t *    filtering)\n\t *  @param {int} total Total number of rows in the data set, after filtering\n\t *  @param {string} pre The string that DataTables has formatted using it's\n\t *    own rules\n\t *  @returns {string} The string to be displayed in the information element.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.infoCallback\n\t *\n\t *  @example\n\t *    $('#example').dataTable( {\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t *        return start +\" to \"+ end;\n\t *      }\n\t *    } );\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.initComplete\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"initComplete\": function(settings, json) {\n\t *          alert( 'DataTables has finished its initialisation.' );\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t *    return) will allow it to complete.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.preDrawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"preDrawCallback\": function( settings ) {\n\t *          if ( $('#test').val() == 1 ) {\n\t *            return false;\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} displayIndex The display index for the current table draw\n\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t *    rows (after filtering)\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.rowCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" ) {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * This parameter allows you to override the default function which obtains\n\t * the data from the server so something more suitable for your application.\n\t * For example you could use POST data, or pull information from a Gears or\n\t * AIR database.\n\t *  @type function\n\t *  @member\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t *  @param {array} data A key/value pair object containing the data to send\n\t *    to the server\n\t *  @param {function} callback to be called on completion of the data get\n\t *    process that will draw the data on the page.\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverData\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerData\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t *  It is often useful to send extra data to the server when making an Ajax\n\t * request - for example custom filtering information, and this callback\n\t * function makes it trivial to send extra information to the server. The\n\t * passed in parameter is the data set that has been constructed by\n\t * DataTables, and you can add to this or modify it as you require.\n\t *  @type function\n\t *  @param {array} data Data array (array of objects which are name/value\n\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t *    server. In the case of Ajax sourced data with server-side processing\n\t *    this will be an empty array, for server-side processing there will be a\n\t *    significant number of parameters!\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t *    as this is passed by reference.\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverParams\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerParams\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} callback Callback that can be executed when done. It\n\t *    should be passed the loaded state object.\n\t *  @return {object} The DataTables state object to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadCallback\": function (settings, callback) {\n\t *          $.ajax( {\n\t *            \"url\": \"/state_load\",\n\t *            \"dataType\": \"json\",\n\t *            \"success\": function (json) {\n\t *              callback( json );\n\t *            }\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that is to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never loaded\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Disallow state loading by returning false\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          return false;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that was loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoaded\n\t *\n\t *  @example\n\t *    // Show an alert with the filtering value that was saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoaded\": function (settings, data) {\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveCallback\": function (settings, data) {\n\t *          // Send an Ajax request to the server with the state object\n\t *          $.ajax( {\n\t *            \"url\": \"/state_save\",\n\t *            \"data\": data,\n\t *            \"dataType\": \"json\",\n\t *            \"method\": \"POST\"\n\t *            \"success\": function () {}\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t *  @type int\n\t *  @default 7200 <i>(2 hours)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.stateDuration\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateDuration\": 60*60*24; // 1 day\n\t *      } );\n\t *    } )\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * When enabled DataTables will not make a request to the server for the first\n\t * page draw - rather it will use the data already on the page (no sorting etc\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t * is used to indicate that deferred loading is required, but it is also used\n\t * to tell DataTables how many records there are in the full table (allowing\n\t * the information element and pagination to be displayed correctly). In the case\n\t * where a filtering is applied to the table on initial load, this can be\n\t * indicated by giving the parameter as an array, where the first element is\n\t * the number of records available after filtering and the second element is the\n\t * number of records without filtering (allowing the table information element\n\t * to be shown correctly).\n\t *  @type int | array\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.deferLoading\n\t *\n\t *  @example\n\t *    // 57 records available in the table, no filtering applied\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": 57\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": [ 57, 100 ],\n\t *        \"search\": {\n\t *          \"search\": \"my_filter\"\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"iDeferLoading\": null,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t *  @type int\n\t *  @default 10\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pageLength\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pageLength\": 50\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.displayStart\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"displayStart\": 20\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.tabIndex\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"tabIndex\": 1\n\t *      } );\n\t *    } );\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t *  @namespace\n\t *  @name DataTable.defaults.classes\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t *  @namespace\n\t *  @name DataTable.defaults.language\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.aria\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.paginate\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the first page.\n\t\t\t *  @type string\n\t\t\t *  @default First\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"first\": \"First page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the last page.\n\t\t\t *  @type string\n\t\t\t *  @default Last\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"last\": \"Last page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t * next page).\n\t\t\t *  @type string\n\t\t\t *  @default Next\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"next\": \"Next page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t * the previous page).\n\t\t\t *  @type string\n\t\t\t *  @default Previous\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sPrevious\": \"Previous\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t *  @type string\n\t\t *  @default No data available in table\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t *\n\t\t *  @type string\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t *  @type string\n\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t *  @type string\n\t\t *  @default (filtered from _MAX_ total entries)\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.decimal\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"decimal\": \",\"\n\t\t *          \"thousands\": \".\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t *  @type string\n\t\t *  @default ,\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.thousands\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"thousands\": \"'\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t *  @type string\n\t\t *  @default Show _MENU_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    // Language change only\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Language and options change\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t *            '<option value=\"10\">10</option>'+\n\t\t *            '<option value=\"20\">20</option>'+\n\t\t *            '<option value=\"30\">30</option>'+\n\t\t *            '<option value=\"40\">40</option>'+\n\t\t *            '<option value=\"50\">50</option>'+\n\t\t *            '<option value=\"-1\">All</option>'+\n\t\t *            '</select> records'\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t *  @type string\n\t\t *  @default Loading...\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t *  @type string\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t *  @type string\n\t\t *  @default Search:\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.search\n\t\t *\n\t\t *  @example\n\t\t *    // Input text box will be appended at the end automatically\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Filter records:\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Specify where the filter should appear\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t *  @type string\n\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.url\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"url\": \"https://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t *  @type string\n\t\t *  @default No matching records found\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.search\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"search\": {\"search\": \"Initial search\"}\n\t *      } );\n\t *    } )\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * By default DataTables will look for the property `data` (or `aaData` for\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t * source or for server-side processing - this parameter allows that\n\t * property to be changed. You can use Javascript dotted object notation to\n\t * get a data source for multiple levels of nesting.\n\t *  @type string\n\t *  @default data\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxDataProp\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxDataProp\": \"data\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * You can instruct DataTables to load data from an external\n\t * source using this parameter (use aData if you want to pass data in you\n\t * already have). Simply provide a url a JSON object can be obtained from.\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxSource\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxSource\": null,\n\n\n\t/**\n\t * This initialisation variable allows you to specify exactly where in the\n\t * DOM you want DataTables to inject the various controls it adds to the page\n\t * (for example you might want the pagination controls at the top of the\n\t * table). DIV elements (with or without a custom class) can also be added to\n\t * aid styling. The follow syntax is used:\n\t *   <ul>\n\t *     <li>The following options are allowed:\n\t *       <ul>\n\t *         <li>'l' - Length changing</li>\n\t *         <li>'f' - Filtering input</li>\n\t *         <li>'t' - The table!</li>\n\t *         <li>'i' - Information</li>\n\t *         <li>'p' - Pagination</li>\n\t *         <li>'r' - pRocessing</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following constants are allowed:\n\t *       <ul>\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following syntax is expected:\n\t *       <ul>\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>Examples:\n\t *       <ul>\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t *       </ul>\n\t *     </li>\n\t *   </ul>\n\t *  @type string\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.dom\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t *      } );\n\t *    } );\n\t */\n\t\"sDom\": \"lfrtip\",\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t *  @type integer\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.searchDelay\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchDelay\": 200\n\t *      } );\n\t *    } )\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t *  \n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t *  @type string\n\t *  @default simple_numbers\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pagingType\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pagingType\": \"full_numbers\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t *  @type boolean|string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollX\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": true,\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollXInner\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": \"100%\",\n\t *        \"scrollXInner\": \"110%\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollY\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t *  @type string\n\t *  @default GET\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverMethod\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t *  @type string|object\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.renderer\n\t *\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t *  @type string\n\t *  @default DT_RowId\n\t *\n\t *  @name DataTable.defaults.rowId\n\t */\n\t\"rowId\": \"DT_RowId\"\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t *  @type array|int\n\t *  @default null <i>Takes the value of the column index automatically</i>\n\t *\n\t *  @name DataTable.defaults.column.orderData\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderData\": [ 0, 1 ] },\n\t *          { \"orderData\": [ 1, 0 ] },\n\t *          { \"orderData\": 2 },\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t *  @type array\n\t *  @default [ 'asc', 'desc' ]\n\t *\n\t *  @name DataTable.defaults.column.orderSequence\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          { \"orderSequence\": [ \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\" ] },\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.searchable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"searchable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.orderable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.visible\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"visible\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} td The TD node that has been created\n\t *  @param {*} cellData The Data for the cell\n\t *  @param {array|object} rowData The data for the whole row\n\t *  @param {int} row The row index for the aoData data store\n\t *  @param {int} col The column index for aoColumns\n\t *\n\t *  @name DataTable.defaults.column.createdCell\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [3],\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t *            if ( cellData == \"1.7\" ) {\n\t *              $(td).css('color', 'blue')\n\t *            }\n\t *          }\n\t *        } ]\n\t *      });\n\t *    } );\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t * consistency. `dataProp` can still be used, as there is backwards\n\t * compatibility in DataTables for this option, but it is strongly\n\t * recommended that you use `data` in preference to `dataProp`.\n\t *  @name DataTable.defaults.column.dataProp\n\t */\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t *\n\t *  @type string|int|function|null\n\t *  @default null <i>Use automatically calculated column index</i>\n\t *\n\t *  @name DataTable.defaults.column.data\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Read table data from objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {value},\n\t *    //      \"version\": {value},\n\t *    //      \"grade\": {value}\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform\" },\n\t *          { \"data\": \"version\" },\n\t *          { \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Read information from deeply nested objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {\n\t *    //         \"inner\": {value}\n\t *    //      },\n\t *    //      \"details\": [\n\t *    //         {value}, {value}\n\t *    //      ]\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform.inner\" },\n\t *          { \"data\": \"details.0\" },\n\t *          { \"data\": \"details.1\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `data` as a function to provide different information for\n\t *    // sorting, filtering and display. In this case, currency (price)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": function ( source, type, val ) {\n\t *            if (type === 'set') {\n\t *              source.price = val;\n\t *              // Store the computed display and filter values for efficiency\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t *              return;\n\t *            }\n\t *            else if (type === 'display') {\n\t *              return source.price_display;\n\t *            }\n\t *            else if (type === 'filter') {\n\t *              return source.price_filter;\n\t *            }\n\t *            // 'sort', 'type' and undefined all just use the integer\n\t *            return source.price;\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using default content\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null,\n\t *          \"defaultContent\": \"Click to edit\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using array notation - outputting a list from an array\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"name[, ]\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t *\n\t *  @type string|int|function|object|null\n\t *  @default null Use the data source value.\n\t *\n\t *  @name DataTable.defaults.column.render\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Create a comma separated list from an array of objects\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          {\n\t *            \"data\": \"platform\",\n\t *            \"render\": \"[, ].name\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Execute a function to obtain data\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": \"browserName()\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // As an object, extracting different data for the different types\n\t *    // This would be used with a data source such as:\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t *    // the formatted phone number is the one that is shown in the table.\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": {\n\t *            \"_\": \"phone\",\n\t *            \"filter\": \"phone_filter\",\n\t *            \"display\": \"phone_display\"\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Use as a function to create a link from the data source\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"download_link\",\n\t *          \"render\": function ( data, type, full ) {\n\t *            return '<a href=\"'+data+'\">Download</a>';\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t *  @type string\n\t *  @default td\n\t *\n\t *  @name DataTable.defaults.column.cellType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Make the first column use TH cells\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"cellType\": \"th\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.class\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"class\": \"my_class\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t *  @type string\n\t *  @default <i>Empty string<i>\n\t *\n\t *  @name DataTable.defaults.column.contentPadding\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"contentPadding\": \"mmm\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.column.defaultContent\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\",\n\t *            \"targets\": [ -1 ]\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.name\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"name\": \"engine\" },\n\t *          { \"name\": \"browser\" },\n\t *          { \"name\": \"platform\" },\n\t *          { \"name\": \"version\" },\n\t *          { \"name\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t *  @type string\n\t *  @default std\n\t *\n\t *  @name DataTable.defaults.column.orderDataType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          { \"orderDataType\": \"dom-text\" },\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t *          { \"orderDataType\": \"dom-select\" },\n\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t *  @type string\n\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t *    original HTML table.</i>\n\t *\n\t *  @name DataTable.defaults.column.title\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"title\": \"My column title\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t *  @type string\n\t *  @default null <i>Auto-detected from raw data</i>\n\t *\n\t *  @name DataTable.defaults.column.type\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"type\": \"html\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t *  @type string\n\t *  @default null <i>Automatic</i>\n\t *\n\t *  @name DataTable.defaults.column.width\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"width\": \"20%\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant\n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t *  @namespace\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t * flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfo\": null,\n\n\t\t/**\n\t\t * Present a user control allowing the end user to change the page size\n\t\t * when pagination is enabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bLengthChange\": null,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t *  @namespace\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t *  @namespace\n\t *  @extends DataTable.defaults.oLanguage\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t *  @namespace\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t * scrolling element (IE6/7)\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollOversize\": false,\n\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bBounding\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @todo These inner arrays should really be objects\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * Classes to use for the striping of a table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asStripeClasses\": null,\n\n\t/**\n\t * If restoring a table - we should restore its striping classes as well\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDestroyStripes\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if when using server-side processing the loading of data\n\t * should be deferred until the second draw.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDeferLoading\": false,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default two_button\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Source url for AJAX data for the table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sAjaxSource\": null,\n\n\t/**\n\t * Property from a given object from which to read the table data from. This\n\t * can be an empty string (when not server-side processing), in which case\n\t * it is  assumed an an array is given directly.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sAjaxDataProp\": null,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t *  @type object\n\t *  @default null\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Function to get the server-side data.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnServerData\": null,\n\n\t/**\n\t * Functions which are called prior to sending an Ajax request so extra\n\t * parameters can easily be sent to the server\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoServerParams\": [],\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t *  @type int\n\t *  @default -1\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t *  @type int\n\t *  @default 10\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type int\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type boolean\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t *  @type function\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t *  @type function\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t *  @type function\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t *  @type function\n\t *  @default null\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t *  @type string\n\t *  @default null\n\t */\n\t\"rowId\": null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an array of objects which describe the feature plug-ins that are\n\t * available to DataTables. These feature plug-ins are then available for\n\t * use through the `dom` initialisation option.\n\t * \n\t * Each feature plug-in is described by an object which must have the\n\t * following properties:\n\t * \n\t * * `fnInit` - function that is used to initialise the plug-in,\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t *   instillation option. This is case sensitive.\n\t *\n\t * The `fnInit` function has the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t *\n\t * And the following return is expected:\n\t * \n\t * * {node|null} The element which contains your feature. Note that the\n\t *   return may also be void if your plug-in does not require to inject any\n\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t *   be useful when developing a plug-in which allows table control via\n\t *   keyboard entry\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    $.fn.dataTable.ext.features.push( {\n\t *      \"fnInit\": function( oSettings ) {\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t *      },\n\t *      \"cFeature\": \"T\"\n\t *    } );\n\t */\n\tfeature: [],\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Internal functions, exposed for used in plug-ins.\n\t * \n\t * Please note that you should not need to use the internal methods for\n\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t * The internal function may change between releases.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tinternal: {},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * jQuery UI class container\n\t *  @type object\n\t *  @deprecated Since v1.10\n\t */\n\toJUIClasses: {},\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toApi:         _ext.internal,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\t\"sTable\": \"dataTable\",\n\t\"sNoFooter\": \"no-footer\",\n\n\t/* Paging buttons */\n\t\"sPageButton\": \"paginate_button\",\n\t\"sPageButtonActive\": \"current\",\n\t\"sPageButtonDisabled\": \"disabled\",\n\n\t/* Striping classes */\n\t\"sStripeOdd\": \"odd\",\n\t\"sStripeEven\": \"even\",\n\n\t/* Empty row */\n\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t/* Features */\n\t\"sWrapper\": \"dataTables_wrapper\",\n\t\"sFilter\": \"dataTables_filter\",\n\t\"sInfo\": \"dataTables_info\",\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\"sLength\": \"dataTables_length\",\n\t\"sProcessing\": \"dataTables_processing\",\n\n\t/* Sorting */\n\t\"sSortAsc\": \"sorting_asc\",\n\t\"sSortDesc\": \"sorting_desc\",\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\"sSortableNone\": \"sorting_disabled\",\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t/* Filtering */\n\t\"sFilterInput\": \"\",\n\n\t/* Page length */\n\t\"sLengthSelect\": \"\",\n\n\t/* Scrolling */\n\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t/* Misc */\n\t\"sHeaderTH\": \"\",\n\t\"sFooterTH\": \"\",\n\n\t// Deprecated\n\t\"sSortJUIAsc\": \"\",\n\t\"sSortJUIDesc\": \"\",\n\t\"sSortJUI\": \"\",\n\t\"sSortJUIAscAllowed\": \"\",\n\t\"sSortJUIDescAllowed\": \"\",\n\t\"sSortJUIWrapper\": \"\",\n\t\"sSortIcon\": \"\",\n\t\"sJUIHeader\": \"\",\n\t\"sJUIFooter\": \"\"\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\nfunction _numbers ( page, pages ) {\n\tvar\n\t\tnumbers = [],\n\t\tbuttons = extPagination.numbers_length,\n\t\thalf = Math.floor( buttons / 2 ),\n\t\ti = 1;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range( 0, pages );\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range( 0, buttons-2 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\telse {\n\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\n\tnumbers.DT_el = 'span';\n\treturn numbers;\n}\n\n\n$.extend( extPagination, {\n\tsimple: function ( page, pages ) {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function ( page, pages ) {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function ( page, pages ) {\n\t\treturn [ _numbers(page, pages) ];\n\t},\n\n\tsimple_numbers: function ( page, pages ) {\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t},\n\n\tfull_numbers: function ( page, pages ) {\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t},\n\t\n\tfirst_last_numbers: function (page, pages) {\n \t\treturn ['first', _numbers(page, pages), 'last'];\n \t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _numbers,\n\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpageButton: {\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\tvar btnDisplay, btnClass;\n\n\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\tvar i, ien, node, button;\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t};\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar disabled = false;\n\n\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\tbtnClass = button;\n\n\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\n\n\t\t\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t'role': 'link',\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t\t'tabindex': disabled ? -1 : settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t// accessibility, but neither are frames.\n\t\t\tvar activeEl;\n\n\t\t\ttry {\n\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t// completed\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t}\n\t\t\tcatch (e) {}\n\n\t\t\tattach( $(host).empty(), buttons );\n\n\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t}\n\t\t}\n\t}\n} );\n\n\n\n// Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n$.extend( DataTable.ext.type.detect, [\n\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t},\n\n\t// Dates (only those recognised by the browser's Date.parse)\n\tfunction ( d, settings )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\n\t// Formatted numbers\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t},\n\n\t// HTML numeric\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t},\n\n\t// HTML numeric, formatted\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t},\n\n\t// HTML (this is strict checking - there must be html)\n\tfunction ( d, settings )\n\t{\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t}\n] );\n\n\n\n// Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n\n$.extend( DataTable.ext.type.search, {\n\thtml: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t'';\n\t},\n\n\tstring: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\tdata;\n\t}\n} );\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n// Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\nfunction _addNumericSort ( decimalPlace ) {\n\t$.each(\n\t\t{\n\t\t\t// Plain numbers\n\t\t\t\"num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t},\n\n\t\t\t// Formatted numbers\n\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t},\n\n\t\t\t// HTML numeric\n\t\t\t\"html-num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t},\n\n\t\t\t// HTML numeric, formatted\n\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t}\n\t\t},\n\t\tfunction ( key, fn ) {\n\t\t\t// Add the ordering method\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\n\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t}\n\t\t}\n\t);\n}\n\n\n// Default sort methods\n$.extend( _ext.type.order, {\n\t// Dates\n\t\"date-pre\": function ( d ) {\n\t\tvar ts = Date.parse( d );\n\t\treturn isNaN(ts) ? -Infinity : ts;\n\t},\n\n\t// html\n\t\"html-pre\": function ( a ) {\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ta.replace ?\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\ta+'';\n\t},\n\n\t// string\n\t\"string-pre\": function ( a ) {\n\t\t// This is a little complex, but faster than always calling toString,\n\t\t// https://jsperf.com/tostring-v-check\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ttypeof a === 'string' ?\n\t\t\t\ta.toLowerCase() :\n\t\t\t\t! a.toString ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.toString();\n\t},\n\n\t// string-asc and -desc are retained only for compatibility with the old\n\t// sort methods\n\t\"string-asc\": function ( x, y ) {\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\n\t\"string-desc\": function ( x, y ) {\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t}\n} );\n\n\n// Numeric sorting types - order doesn't matter here\n_addNumericSort( '' );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\theader: {\n\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\t\t\t} );\n\t\t},\n\n\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t.append( cell.contents() )\n\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t)\n\t\t\t\t.appendTo( cell );\n\n\t\t\t// Attach a sort listener to update on sort\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\n\t\t\t\tcell\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nvar __htmlEscapeEntities = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime-' + to;\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t});\n\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x < y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x > y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\treturn d === '' || dt ? typeName : false;\n\t\t});\n\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t}\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\tfilter: __htmlEscapeEntities\n\t\t};\n\t}\n};\n\n\n/*\n * This is really a good bit rubbish this method of exposing the internal methods\n * publicly... - To be fixed in 2.0 using methods on the prototype\n */\n\n\n/**\n * Create a wrapper function for exporting an internal functions to an external API.\n *  @param {string} fn API function name\n *  @returns {function} wrapped function\n *  @memberof DataTable#internal\n */\nfunction _fnExternApiFunc (fn)\n{\n\treturn function() {\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\tArray.prototype.slice.call(arguments)\n\t\t);\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t};\n}\n\n\n/**\n * Reference to internal functions for use by plug-in developers. Note that\n * these methods are references to internal functions and are considered to be\n * private. If you use these methods, be aware that they are liable to change\n * between versions.\n *  @namespace\n */\n$.extend( DataTable.ext.internal, {\n\t_fnExternApiFunc: _fnExternApiFunc,\n\t_fnBuildAjax: _fnBuildAjax,\n\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t_fnAjaxParameters: _fnAjaxParameters,\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t_fnAddColumn: _fnAddColumn,\n\t_fnColumnOptions: _fnColumnOptions,\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t_fnVisbleColumns: _fnVisbleColumns,\n\t_fnGetColumns: _fnGetColumns,\n\t_fnColumnTypes: _fnColumnTypes,\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t_fnHungarianMap: _fnHungarianMap,\n\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t_fnLanguageCompat: _fnLanguageCompat,\n\t_fnBrowserDetect: _fnBrowserDetect,\n\t_fnAddData: _fnAddData,\n\t_fnAddTr: _fnAddTr,\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t_fnGetCellData: _fnGetCellData,\n\t_fnSetCellData: _fnSetCellData,\n\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t_fnGetDataMaster: _fnGetDataMaster,\n\t_fnClearTable: _fnClearTable,\n\t_fnDeleteIndex: _fnDeleteIndex,\n\t_fnInvalidate: _fnInvalidate,\n\t_fnGetRowElements: _fnGetRowElements,\n\t_fnCreateTr: _fnCreateTr,\n\t_fnBuildHead: _fnBuildHead,\n\t_fnDrawHead: _fnDrawHead,\n\t_fnDraw: _fnDraw,\n\t_fnReDraw: _fnReDraw,\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t_fnDetectHeader: _fnDetectHeader,\n\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t_fnFilterComplete: _fnFilterComplete,\n\t_fnFilterCustom: _fnFilterCustom,\n\t_fnFilterColumn: _fnFilterColumn,\n\t_fnFilter: _fnFilter,\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t_fnEscapeRegex: _fnEscapeRegex,\n\t_fnFilterData: _fnFilterData,\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t_fnUpdateInfo: _fnUpdateInfo,\n\t_fnInfoMacros: _fnInfoMacros,\n\t_fnInitialise: _fnInitialise,\n\t_fnInitComplete: _fnInitComplete,\n\t_fnLengthChange: _fnLengthChange,\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t_fnPageChange: _fnPageChange,\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t_fnScrollDraw: _fnScrollDraw,\n\t_fnApplyToChildren: _fnApplyToChildren,\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t_fnThrottle: _fnThrottle,\n\t_fnConvertToWidth: _fnConvertToWidth,\n\t_fnGetWidestNode: _fnGetWidestNode,\n\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t_fnStringToCss: _fnStringToCss,\n\t_fnSortFlatten: _fnSortFlatten,\n\t_fnSort: _fnSort,\n\t_fnSortAria: _fnSortAria,\n\t_fnSortListener: _fnSortListener,\n\t_fnSortAttachListener: _fnSortAttachListener,\n\t_fnSortingClasses: _fnSortingClasses,\n\t_fnSortData: _fnSortData,\n\t_fnSaveState: _fnSaveState,\n\t_fnLoadState: _fnLoadState,\n\t_fnImplementState: _fnImplementState,\n\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t_fnLog: _fnLog,\n\t_fnMap: _fnMap,\n\t_fnBindAction: _fnBindAction,\n\t_fnCallbackReg: _fnCallbackReg,\n\t_fnCallbackFire: _fnCallbackFire,\n\t_fnLengthOverflow: _fnLengthOverflow,\n\t_fnRenderer: _fnRenderer,\n\t_fnDataSource: _fnDataSource,\n\t_fnRowAttributes: _fnRowAttributes,\n\t_fnExtend: _fnExtend,\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t                                // in 1.10, so this dead-end function is\n\t                                // added to prevent errors\n} );\n\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n","/*! DataTables styling integration\n * ©2018 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n\n\nexport default DataTable;\n","/*! Responsive 2.5.0\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.5.0\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('1.10.10')) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api(settings)\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif (this.s.dt.settings()[0].responsive) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif (opts && typeof opts.details === 'string') {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if (opts && opts.details === false) {\n\t\topts.details = { type: false };\n\t}\n\telse if (opts && opts.details === true) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend(true, {}, Responsive.defaults, DataTable.defaults.responsive, opts);\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend(Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on(\n\t\t\t'resize.dtr orientationchange.dtr',\n\t\t\tDataTable.util.throttle(function () {\n\t\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\t\tvar width = $(window).innerWidth();\n\n\t\t\t\tif (width !== oldWindowWidth) {\n\t\t\t\t\tthat._resize();\n\t\t\t\t\toldWindowWidth = width;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg(\n\t\t\tdtPrivateSettings,\n\t\t\t'aoRowCreatedCallback',\n\t\t\tfunction (tr, data, idx) {\n\t\t\t\tif ($.inArray(false, that.s.current) !== -1) {\n\t\t\t\t\t$('>td, >th', tr).each(function (i) {\n\t\t\t\t\t\tvar idx = dt.column.index('toData', i);\n\n\t\t\t\t\t\tif (that.s.current[idx] === false) {\n\t\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Destroy event handler\n\t\tdt.on('destroy.dtr', function () {\n\t\t\tdt.off('.dtr');\n\t\t\t$(dt.table().body()).off('.dtr');\n\t\t\t$(window).off('resize.dtr orientationchange.dtr');\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each(that.s.current, function (i, val) {\n\t\t\t\tif (val === false) {\n\t\t\t\t\tthat._setColumnVis(i, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort(function (a, b) {\n\t\t\treturn a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n\t\t});\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif (details.type !== false) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on('column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif (that._timer) {\n\t\t\t\t\tclearTimeout(that._timer);\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout(function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100);\n\t\t\t});\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on('draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t});\n\n\t\t\t$(dt.table().node()).addClass('dtr-' + details.type);\n\t\t}\n\n\t\tdt.on('column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t});\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on('column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on('column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i = 0; i < curr.length; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on('preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every(function () {\n\t\t\t\tif (this.child.isShown()) {\n\t\t\t\t\trowIds.push(this.id(true));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdt.one('draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows(rowIds).every(function () {\n\t\t\t\t\tthat._detailsDisplay(this, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._controlClass();\n\t\t}).on('init.dtr', function (e, settings, details) {\n\t\t\tif (e.namespace !== 'dt') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\n\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t// column sizing\n\t\t\tif ($.inArray(false, that.s.current)) {\n\t\t\t\tdt.columns.adjust();\n\t\t\t}\n\t\t});\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (this.s.childNodeStore[name]) {\n\t\t\treturn this.s.childNodeStore[name];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell(row, col).node().childNodes;\n\t\tfor (var i = 0, ien = children.length; i < ien; i++) {\n\t\t\tnodes.push(children[i]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (!this.s.childNodeStore[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell(row, col).node();\n\t\tvar store = this.s.childNodeStore[name];\n\t\tvar parent = store[0].parentNode;\n\t\tvar parentChildren = parent.childNodes;\n\t\tvar a = [];\n\n\t\tfor (var i = 0, ien = parentChildren.length; i < ien; i++) {\n\t\t\ta.push(parentChildren[i]);\n\t\t}\n\n\t\tfor (var j = 0, jen = a.length; j < jen; j++) {\n\t\t\tnode.appendChild(a[j]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function (breakpoint) {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map(function (col, idx) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function (a, b) {\n\t\t\t\tif (a.priority !== b.priority) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t});\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map(columns, function (col, i) {\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null\n\t\t\t\t? false\n\t\t\t\t: col.auto === true\n\t\t\t\t? '-'\n\t\t\t\t: $.inArray(breakpoint, col.includeIn) !== -1;\n\t\t});\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (display[i] === true) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor (i = 0, ien = order.length; i < ien; i++) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif (display[colIdx] === '-' && !columns[colIdx].control && columns[colIdx].minWidth) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif (empty || usedWidth - columns[colIdx].minWidth < 0) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (!columns[i].control && !columns[i].never && display[i] === false) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif (display[i] === 'not-visible') {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ($.inArray(true, display) === -1) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function () {\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt\n\t\t\t.columns()\n\t\t\t.eq(0)\n\t\t\t.map(function (i) {\n\t\t\t\tvar column = this.column(i);\n\t\t\t\tvar className = column.header().className;\n\t\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\t\tif (priority === undefined) {\n\t\t\t\t\tpriority =\n\t\t\t\t\t\tdataPriority === undefined || dataPriority === null\n\t\t\t\t\t\t\t? 10000\n\t\t\t\t\t\t\t: dataPriority * 1;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tincludeIn: [],\n\t\t\t\t\tauto: false,\n\t\t\t\t\tcontrol: false,\n\t\t\t\t\tnever: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\t\tpriority: priority\n\t\t\t\t};\n\t\t\t});\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function (colIdx, name) {\n\t\t\tvar includeIn = columns[colIdx].includeIn;\n\n\t\t\tif ($.inArray(name, includeIn) === -1) {\n\t\t\t\tincludeIn.push(name);\n\t\t\t}\n\t\t};\n\n\t\tvar column = function (colIdx, name, operator, matched) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif (!operator) {\n\t\t\t\tcolumns[colIdx].includeIn.push(name);\n\t\t\t}\n\t\t\telse if (operator === 'max-') {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width <= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'min-') {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width >= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'not-') {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].name.indexOf(matched) === -1) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each(function (col, i) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor (var k = 0, ken = classNames.length; k < ken; k++) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif (className === 'all' || className === 'dtr-all') {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map(breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (className === 'none' || className === 'dtr-none' || col.never) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (className === 'control' || className === 'dtr-control') {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each(breakpoints, function (j, breakpoint) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\t'(min\\\\-|max\\\\-|not\\\\-)?(' + brokenPoint[0] + ')(\\\\-[_a-zA-Z0-9])?'\n\t\t\t\t\t);\n\t\t\t\t\tvar match = className.match(re);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif (match[2] === brokenPoint[0] && match[3] === '-' + brokenPoint[1]) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2] + match[3]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (match[2] === brokenPoint[0] && !match[3]) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif (!hasClass) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function () {\n\t\tif (this.c.details.type === 'inline') {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction (idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{ page: 'current' }\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, { page: 'current' }).nodes().to$().addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function (row, update) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\t\tvar event = function (res) {\n\t\t\t$(row.node()).toggleClass('parent', res !== false);\n\t\t\t$(dt.table().node()).triggerHandler('responsive-display.dt', [dt, row, res, update]);\n\t\t};\n\n\t\tif (details && details.type !== false) {\n\t\t\tvar renderer =\n\t\t\t\ttypeof details.renderer === 'string'\n\t\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display(\n\t\t\t\trow,\n\t\t\t\tupdate,\n\t\t\t\tfunction () {\n\t\t\t\t\treturn renderer.call(that, dt, row[0], that._detailsObj(row[0]));\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tevent(false);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (typeof res === 'boolean') {\n\t\t\t\tevent(res);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif (details.type === 'inline') {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t});\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n\t\t\tif (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t});\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif (target !== undefined || target !== null) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$(dt.table().body()).on('click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t// then take no action\n\t\t\t\tif (!$(dt.table().node()).hasClass('collapsed')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\tif ($.inArray($(this).closest('tr').get(0), dt.rows().nodes().toArray()) === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\tif (typeof target === 'number') {\n\t\t\t\t\tvar targetIdx = target < 0 ? dt.columns().eq(0).length + target : target;\n\n\t\t\t\t\tif (dt.cell(this).index().column !== targetIdx) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\tvar row = dt.row($(this).closest('tr'));\n\n\t\t\t\t// Check event type to do an action\n\t\t\t\tif (e.type === 'click') {\n\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t// the renderer)\n\t\t\t\t\tthat._detailsDisplay(row, false);\n\t\t\t\t}\n\t\t\t\telse if (e.type === 'mousedown') {\n\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t}\n\t\t\t\telse if (e.type === 'mouseup') {\n\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function (rowIdx) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.columns, function (col, i) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif (col.never || col.control) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[i];\n\n\t\t\treturn {\n\t\t\t\tclassName: dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata: dt.cell(rowIdx, i).render(that.c.orthogonal),\n\t\t\t\thidden: dt.column(i).visible() && !that.s.current[i],\n\t\t\t\trowIndex: rowIdx,\n\t\t\t\ttitle: dtCol.sTitle !== null ? dtCol.sTitle : $(dt.column(i).header()).text()\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function (name) {\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor (var i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\tif (breakpoints[i].name === name) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows({ page: 'current' }).iterator('row', function (settings, idx) {\n\t\t\tthat._detailsDisplay(dt.row(idx), true);\n\t\t});\n\t},\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor (i = breakpoints.length - 1; i >= 0; i--) {\n\t\t\tif (width <= breakpoints[i].width) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity(breakpoint);\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\tcolumnsVis[i] === false &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!dt.column(i).visible() === false\n\t\t\t) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(dt.table().node()).toggleClass('collapsed', collapsedClass);\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns()\n\t\t\t.eq(0)\n\t\t\t.each(function (colIdx, i) {\n\t\t\t\tif (columnsVis[i] === true) {\n\t\t\t\t\tvisible++;\n\t\t\t\t}\n\n\t\t\t\tif (forceRedraw || columnsVis[i] !== oldVis[i]) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tthat._setColumnVis(colIdx, columnsVis[i]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Always need to update the display, regardless of if it has changed or not, so nodes\n\t\t// can be re-inserted for listHiddenNodes\n\t\tthis._redrawChildren();\n\n\t\tif (changed) {\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger('responsive-resize.dt', [dt, this.s.current]);\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif (dt.page.info().recordsDisplay === 0) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif (!this.c.auto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif (\n\t\t\t$.inArray(\n\t\t\t\ttrue,\n\t\t\t\t$.map(columns, function (c) {\n\t\t\t\t\treturn c.auto;\n\t\t\t\t})\n\t\t\t) === -1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\t$.each(this.s.childNodeStore, function (key) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\tthat._childNodesRestore(dt, idx[0] * 1, idx[1] * 1);\n\t\t\t});\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable = dt.table().node().cloneNode(false);\n\t\tvar clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(clonedTable);\n\t\tvar clonedBody = $(dt.table().body()).clone(false, false).empty().appendTo(clonedTable); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt\n\t\t\t.columns()\n\t\t\t.header()\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t})\n\t\t\t.to$()\n\t\t\t.clone(false)\n\t\t\t.css('display', 'table-cell')\n\t\t\t.css('width', 'auto')\n\t\t\t.css('min-width', 0);\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append($(dt.rows({ page: 'current' }).nodes()).clone(false))\n\t\t\t.find('th, td')\n\t\t\t.css('display', '');\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif (footer) {\n\t\t\tvar clonedFooter = $(footer.cloneNode(false)).appendTo(clonedTable);\n\t\t\tvar footerCells = dt\n\t\t\t\t.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter(function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t})\n\t\t\t\t.to$()\n\t\t\t\t.clone(false)\n\t\t\t\t.css('display', 'table-cell');\n\n\t\t\t$('<tr/>').append(footerCells).appendTo(clonedFooter);\n\t\t}\n\n\t\t$('<tr/>').append(headerCells).appendTo(clonedHeader);\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif (this.c.details.type === 'inline') {\n\t\t\t$(clonedTable).addClass('dtr-inline collapsed');\n\t\t}\n\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$(clonedTable).find('[name]').removeAttr('name');\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$(clonedTable).css('position', 'relative');\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css({\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t})\n\t\t\t.append(clonedTable);\n\n\t\tinserted.insertBefore(dt.table().node());\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each(function (i) {\n\t\t\tvar idx = dt.column.index('fromVisible', i);\n\t\t\tcolumns[idx].minWidth = this.offsetWidth || 0;\n\t\t});\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function () {\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t});\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function (col, showHide) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$(dt.column(col).header()).css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\t$(dt.column(col).footer()).css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\tdt.column(col).nodes().to$().css('display', display).toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\tdt.cells(null, col)\n\t\t\t\t.indexes()\n\t\t\t\t.each(function (idx) {\n\t\t\t\t\tthat._childNodesRestore(dt, idx.row, idx.column);\n\t\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells({ page: 'current' }).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n\t\tif (typeof target === 'number') {\n\t\t\tdt.cells(null, target, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif (target === 'td:first-child, th:first-child') {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$(target, dt.rows({ page: 'current' }).nodes())\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t}\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop', width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function (row, update, render) {\n\t\tif (update) {\n\t\t\tif ($(row.node()).hasClass('parent')) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!row.child.isShown()) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child(false);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function (row, update, render) {\n\t\tif ((!update && row.child.isShown()) || !row.responsive.hasHidden()) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child(false);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child(render(), 'child').show();\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function (options) {\n\t\treturn function (row, update, render, closeCallback) {\n\t\t\tif (!update) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off('keypress.dtr');\n\t\t\t\t\t$(row.node()).removeClass('parent');\n\n\t\t\t\t\tcloseCallback();\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t\t\t.data('dtr-row-idx', row.index())\n\t\t\t\t\t\t\t\t\t.append(render())\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-close\">&times;</div>').click(function () {\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-background\"/>').click(function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\t$(row.node()).addClass('parent');\n\n\t\t\t\t$(document).on('keyup.dtr', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar modal = $('div.dtr-modal-content');\n\n\t\t\t\tif (modal.length && row.index() === modal.data('dtr-row-idx')) {\n\t\t\t\t\tmodal.empty().append(render());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Modal not shown, nothing to update\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.header) {\n\t\t\t\t$('div.dtr-modal-content').prepend('<h2>' + options.header(row) + '</h2>');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t}\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each(columns, function (i, col) {\n\t\t\t\tif (col.hidden) {\n\t\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<span class=\"dtr-data\"/>').append(\n\t\t\t\t\t\t\t\tthat._childNodes(api, col.rowIndex, col.columnIndex)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo(ul);\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn found ? ul : false;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\treturn col.hidden\n\t\t\t\t\t? '<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'<span class=\"dtr-data\">' +\n\t\t\t\t\t\t\tcol.data +\n\t\t\t\t\t\t\t'</span>' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t: '';\n\t\t\t}).join('');\n\n\t\t\treturn data\n\t\t\t\t? $('<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>').append(data)\n\t\t\t\t: false;\n\t\t};\n\t},\n\n\ttableAll: function (options) {\n\t\toptions = $.extend(\n\t\t\t{\n\t\t\t\ttableClass: ''\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className ? 'class=\"' + col.className + '\"' : '';\n\n\t\t\t\treturn (\n\t\t\t\t\t'<tr ' +\n\t\t\t\t\tklass +\n\t\t\t\t\t' data-dt-row=\"' +\n\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.title +\n\t\t\t\t\t':' +\n\t\t\t\t\t'</td> ' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.data +\n\t\t\t\t\t'</td>' +\n\t\t\t\t\t'</tr>'\n\t\t\t\t);\n\t\t\t}).join('');\n\n\t\t\treturn $('<table class=\"' + options.tableClass + ' dtr-details\" width=\"100%\"/>').append(\n\t\t\t\tdata\n\t\t\t);\n\t\t};\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n\treturn this;\n});\n\nApi.register('responsive.index()', function (li) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow: li.parent().data('dtr-index')\n\t};\n});\n\nApi.register('responsive.rebuild()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t});\n});\n\nApi.register('responsive.recalc()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t});\n});\n\nApi.register('responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive\n\t\t? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1\n\t\t: false;\n});\n\nApi.registerPlural('columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator(\n\t\t'column',\n\t\tfunction (settings, column) {\n\t\t\treturn settings._responsive\n\t\t\t\t? settings._responsive._responsiveOnlyHidden()[column]\n\t\t\t\t: false;\n\t\t},\n\t\t1\n\t);\n});\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.5.0';\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tif (\n\t\t$(settings.nTable).hasClass('responsive') ||\n\t\t$(settings.nTable).hasClass('dt-responsive') ||\n\t\tsettings.oInit.responsive ||\n\t\tDataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif (init !== false) {\n\t\t\tnew Responsive(settings, $.isPlainObject(init) ? init : {});\n\t\t}\n\t}\n});\n\n\nexport default DataTable;\n","/*! DataTables styling wrapper for Responsive\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net-dt';\nimport Responsive from 'datatables.net-responsive';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n\nexport default DataTable;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"domReady\"];","/**\n * External Dependencies\n */\nimport DataTable from 'datatables.net-dt';\nimport 'datatables.net-responsive-dt';\n\n/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal Dependencies\n */\nimport './view-table.scss';\n\nconst initDataTable = (id, extraConfigs = {}) =>\n\tnew DataTable(`#${id}`, {\n\t\tsearching: false,\n\t\tinfo: false,\n\t\tlengthChange: false,\n\t\tpaging: false,\n\t\tresponsive: true,\n\t\t...extraConfigs,\n\t});\n\ndomReady(() => {\n\tconst tableBlocks = document.querySelectorAll(\n\t\t'.wp-block-prc-block-data-table > table'\n\t);\n\n\ttableBlocks.forEach((tableBlock) => {\n\t\tconst { prcDataTables } = window;\n\t\tconst tableId = tableBlock.getAttribute('id');\n\t\tconst extraConfigs = {};\n\t\tconst frozenTargets = prcDataTables[tableId]?.frozenColumns;\n\t\textraConfigs.columnDefs = [\n\t\t\t{ orderable: false, targets: frozenTargets },\n\t\t];\n\t\tconst dataTable = initDataTable(tableId, extraConfigs);\n\t\tconsole.log('dataTable', dataTable, prcDataTables[tableId]);\n\t});\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","_ext","_Api","_api_register","_api_registerPlural","$","selector","options","factory","this","DataTable","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","Array","isArray","isPlainObject","add","row","undefined","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","name","sort","filter","_isArrayHost","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","insertAfter","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","html","_isHtml","_stripHtml","_pluck","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","j","k","again","_flatten","_includes","indexOf","_fnHungarianMap","match","newKey","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","arg","toString","includes","String","trim","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","Error","__reArray","__reFn","jLen","t","fetchData","substring","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","nTh","oDefaults","oCol","oColumn","document","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","mDataProp","sType","_sManualType","className","origClass","iDataSort","ariaTitle","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","nextSibling","rowNode","nTrIn","nTd","create","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","ajaxComplete","bServerSide","fnRecordsDisplay","_fnStart","aPreDraw","anRows","iRowCount","iStripes","oLang","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","drawHold","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","write","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","event","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnSearchToCamel","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","getComputedStyle","nToSize","iOuterWidth","bScrolling","padding","trigger","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","sizes","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","widths","els","results","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","setAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","fnStateLoadCallback","_fnImplementState","Api","abStateLoad","duration","iStateDuration","oLoadedState","level","msg","tn","console","log","sErrMode","errMode","alert","mappedName","extender","breakRefs","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","parents","result","renderer","host","__apiStruct","__arrayProto","context","ctxSettings","mixed","jq","tables","_toSettings","opts","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","sel","selInt","cellIdx","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","namespace","stateSaveParamsEvent","destroyEvent","idFn","ids","_detailsShow","childRows","off","loaded","every","__details_state","__details_remove","_details","__details_display","__details_events","drawEvent","colvisEvent","_child_obj","_child_mth","klass","addRow","created","colSpan","__details_add","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","caseInsen","use","DateTime","root","is","jquery","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","head","foot","fnTables","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","oPaginate","aria","attach","container","button","disabledClass","sPageButtonDisabled","clickHandler","disabled","sFirst","sPrevious","sNext","sLast","sPageButtonActive","tag","pagingTag","sPageButton","empty","parsed","string","__numericReplace","decimalPlace","re1","re2","ts","sSortAsc","sSortDesc","jqueryui","sSortJUIWrapper","sSortIcon","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","__mld","dt","momentFn","luxonFn","dateFn","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","from","to","typeName","valueOf","local","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","render","date","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt","Responsive","childNodeStore","current","responsive","details","c","_constructor","dtPrivateSettings","oldWindowWidth","innerWidth","_responsive","_resize","_setColumnVis","breakpoints","_classLogic","_resizeAuto","_detailsInit","_timer","_redrawChildren","curr","rowIds","_detailsDisplay","_controlClass","_childNodes","_childNodesRestore","parentChildren","_columnsVisiblity","breakpoint","priority","auto","minWidth","includeIn","requiredWidth","scrolling","bar","usedWidth","control","showControl","never","responsivePriority","dataPriority","operator","matched","_find","classNames","brokenPoint","re","columnsVis","firstVisible","update","toggleClass","triggerHandler","_detailsObj","_tabIndexes","click","targetIdx","dtCol","columnIndex","orthogonal","hidden","rowIndex","title","forceRedraw","oldVis","collapsedClass","recordsDisplay","isEmptyObject","clonedTable","clonedHeader","clonedBody","clonedFooter","footerCells","inserted","_responsiveOnlyHidden","v","showHide","indexes","removeData","Infinity","childRow","childRowImmediate","hasHidden","modal","closeCallback","close","stopPropagation","prepend","listHiddenNodes","ul","found","listHidden","tableAll","tableClass","li","domReady","querySelectorAll","forEach","tableBlock","prcDataTables","extraConfigs","frozenTargets","frozenColumns","columnDefs","initDataTable","searching","lengthChange"],"sourceRoot":""}