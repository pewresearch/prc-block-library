{"version":3,"file":"view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,WAAgB,IAAOA,EAAwE,WAAG,MAAW,IAAOA,EAAmE,OAH7TC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,GADzC,IAACF,EACJE,EC+BL,MAAM,MAACE,IAASC,EAAAA,EAAAA,OAAM,gCAAiC,CACtDC,QAAS,CACRC,cAAgBC,IACf,MAAMC,GAAUC,EAAAA,EAAAA,eACV,IAACC,IAAOC,EAAAA,EAAAA,eACR,GAACC,EAAE,KAAEC,GAAQH,GACb,MAACI,GAASP,EAAMQ,QAChB,gBAACC,EAAe,oBAAEC,GAAuBT,EAG/C,GADAL,EAAMS,GAAIE,MAAQA,EACd,oBAAsBD,EACzBL,EAAQU,kBAAoBJ,EAC5BN,EAAQW,cAAgBX,EAAQM,QAAUA,MACpC,CACN,GAAKE,EAAkB,CACtB,MAAMI,EAzBH,CACNC,aAhBoB,QAAQC,KAFCC,EA0C2BT,GAvBxDU,aAfoB,QAAQF,KAAKC,GAgBjCE,UAdiB,KAAKH,KAAKC,GAe3BG,oBAb2B,wCAAwCJ,KACnEC,GAaAI,UAViBJ,EAASK,QAAU,GAWpCC,uBARA,oDAAoDP,KAAKC,IA6BhDO,EAAsBxC,OAAOyC,OAAOX,GAAuBY,OAC/DC,IAAsB,IAAXA,IAGb9B,EAAMc,GAAqBiB,YAAcJ,EAEzCxC,OAAO6C,KAAKf,GAAuBgB,SAAShD,IAC3CoB,EAAQpB,GAAOgC,EAAsBhC,EAAI,GAE3C,CACAoB,EAAQM,MAAQA,CACjB,CAvDH,IAA+BS,CAuD5B,GAGFc,UAAW,CACVC,cAAeA,KACd,MAAM9B,GAAUC,EAAAA,EAAAA,eACV,MAAEK,EAAK,gBAAEyB,EAAe,gBAAEvB,EAAe,cAAEG,GAAkBX,EACnE,GAAKM,EAAQ,CACZ,MAAM,QAAET,IAAYD,EAAAA,EAAAA,OAAOmC,GACtBlC,EAAQmC,mBACZC,QAAQC,IAAI,OAAQ5B,EAAO,KAAMyB,EAAiB/B,GAE7CQ,GAAmBG,EACvBd,EAAQmC,iBAAkB1B,GACbE,GACbX,EAAQmC,iBAAkB1B,GAG7B,GAED6B,mBAAoBA,KACnB,MAAMnC,GAAUC,EAAAA,EAAAA,cAEVmC,EAAuBtD,OAAO6C,KAAKhC,GAAO0C,MAC9CzD,GACoB,aAApBe,EAAMf,GAAK0D,MACS,oBAApB3C,EAAMf,GAAKyB,OAEbL,EAAQS,oBAAsB2B,EAC9BzC,EAAMyC,GAAsBV,YAAa,CAAI","sources":["webpack://form-input-password/webpack/bootstrap","webpack://form-input-password/webpack/runtime/define property getters","webpack://form-input-password/webpack/runtime/hasOwnProperty shorthand","webpack://form-input-password/external module \"@wordpress/interactivity\"","webpack://form-input-password/./src/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress Dependencies\n */\nimport { store, getContext, getElement } from '@wordpress/interactivity';\n\nfunction checkPasswordStrength(password) {\n\t// check if password has a lowercase letter\n\tconst hasLowerCase = /[a-z]/.test(password);\n\t// check if password has an uppercase letter\n\tconst hasUpperCase = /[A-Z]/.test(password);\n\t// check if password has a number\n\tconst hasNumber = /\\d/.test(password);\n\t// check if password has a symbol that is valid\n\tconst hasSpecialCharacter = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(\n\t\tpassword\n\t);\n\t// check if password is at least 12 characters long\n\tconst hasLength = password.length >= 12;\n\t// check that it only contains valid characters\n\tconst hasNoInvalidCharacters =\n\t\t/^[a-zA-Z0-9!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]*$/.test(password);\n\n\treturn {\n\t\thasLowerCase,\n\t\thasUpperCase,\n\t\thasNumber,\n\t\thasSpecialCharacter,\n\t\thasLength,\n\t\thasNoInvalidCharacters,\n\t};\n}\n\nconst {state} = store('prc-block/form-input-password', {\n\tactions: {\n\t\tonInputChange: (event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst {ref} = getElement();\n\t\t\tconst {id, name} = ref;\n\t\t\tconst {value} = event.target;\n\t\t\tconst {hasConfirmation, confirmationInputId} = context;\n\n\t\t\tstate[id].value = value;\n\t\t\tif ('confirmPassword' === name) {\n\t\t\t\tcontext.confirmationValue = value;\n\t\t\t\tcontext.passwordMatch = context.value === value;\n\t\t\t} else {\n\t\t\t\tif ( hasConfirmation ) {\n\t\t\t\t\tconst passwordStrengthCheck = checkPasswordStrength( value );\n\t\t\t\t\t// check if all the values in passwordStrengthCheck are true\n\t\t\t\t\tconst disableConfirmInput = Object.values(passwordStrengthCheck).every(\n\t\t\t\t\t\t(result) => result === true\n\t\t\t\t\t);\n\t\t\t\t\t// Disable the confirmationn input if the password does not meet the requirements\n\t\t\t\t\tstate[confirmationInputId].isDisabled = !disableConfirmInput;\n\t\t\t\t\t// Report the password strength to the user\n\t\t\t\t\tObject.keys(passwordStrengthCheck).forEach((key) => {\n\t\t\t\t\t\tcontext[key] = passwordStrengthCheck[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcontext.value = value;\n\t\t\t}\n\t\t},\n\t},\n\tcallbacks: {\n\t\tonValueChange: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { value, targetNamespace, hasConfirmation, passwordMatch } = context;\n\t\t\tif ( value ) {\n\t\t\t\tconst { actions } = store( targetNamespace );\n\t\t\t\tif ( actions.onPasswordChange ) {\n\t\t\t\t\tconsole.log(\"PUSH\", value, 'to', targetNamespace, context);\n\t\t\t\t\t// If the password is expecting confirmation then check if the passwords match before sending up the value\n\t\t\t\t\tif ( hasConfirmation && passwordMatch ) {\n\t\t\t\t\t\tactions.onPasswordChange( value );\n\t\t\t\t\t} else if ( ! hasConfirmation ) {\n\t\t\t\t\t\tactions.onPasswordChange( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonConfirmationInit: () => {\n\t\t\tconst context = getContext();\n\t\t\t// get the confirmation input value id and store it so we can set it as disabled...\n\t\t\tconst confirmationInputKey = Object.keys(state).find(\n\t\t\t\t(key) =>\n\t\t\t\t\tstate[key].type === 'password' &&\n\t\t\t\t\tstate[key].name === 'confirmPassword'\n\t\t\t);\n\t\t\tcontext.confirmationInputId = confirmationInputKey;\n\t\t\tstate[confirmationInputKey].isDisabled = true;\n\t\t}\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","state","store","actions","onInputChange","event","context","getContext","ref","getElement","id","name","value","target","hasConfirmation","confirmationInputId","confirmationValue","passwordMatch","passwordStrengthCheck","hasLowerCase","test","password","hasUpperCase","hasNumber","hasSpecialCharacter","hasLength","length","hasNoInvalidCharacters","disableConfirmInput","values","every","result","isDisabled","keys","forEach","callbacks","onValueChange","targetNamespace","onPasswordChange","console","log","onConfirmationInit","confirmationInputKey","find","type"],"sourceRoot":""}