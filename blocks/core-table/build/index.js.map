{"version":3,"file":"index.js","mappings":"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","sources":["webpack://core-table/./node_modules/comma-separated-values/csv.js","webpack://core-table/webpack/bootstrap","webpack://core-table/webpack/runtime/compat get default export","webpack://core-table/webpack/runtime/define property getters","webpack://core-table/webpack/runtime/hasOwnProperty shorthand","webpack://core-table/external window [\"wp\",\"element\"]","webpack://core-table/external window [\"wp\",\"hooks\"]","webpack://core-table/external window [\"wp\",\"compose\"]","webpack://core-table/external window [\"wp\",\"i18n\"]","webpack://core-table/external window [\"wp\",\"blockEditor\"]","webpack://core-table/external window [\"wp\",\"components\"]","webpack://core-table/./src/csv-parser.js","webpack://core-table/./src/Controls.jsx","webpack://core-table/./src/index.js"],"sourcesContent":["(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.CSV = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  var ESCAPE_DELIMITERS = ['|', '^'],\n      CELL_DELIMITERS = [',', ';', '\\t', '|', '^'],\n      LINE_DELIMITERS = ['\\r\\n', '\\r', '\\n'];\n\n  function isObject(object) {\n    var type = typeof object;\n    return type === 'function' || type === 'object' && !!object;\n  }\n  var isArray = Array.isArray || function(object) {\n    return toString.call(object) === '[object Array]';\n  }\n  function isString(object) {\n    return typeof object === 'string';\n  }\n  function isNumber(object) {\n    return !isNaN(Number(object));\n  }\n  function isBoolean(value) {\n    return value == false || value == true;\n  }\n  function isNull(value) {\n    return value == null;\n  }\n  function isPresent(value) {\n    return value != null;\n  }\n\n  function fallback(value, fallback) {\n    return isPresent(value) ? value : fallback;\n  }\n\n  function forEach(collection, iterator) {\n    for (var _i = 0, _len = collection.length; _i < _len; _i += 1) {\n      if (iterator(collection[_i], _i) === false) break;\n    }\n  }\n\n  function sanitizeString(string) {\n    return string.replace(/\"/g,'\\\\\"');\n  }\n\n  function buildCell(index) {\n    return 'attrs[' + index + ']';\n  }\n\n  function castCell(value, index) {\n    if (isNumber(value)) {\n      return 'Number(' + buildCell(index) + ')';\n    } else if (isBoolean(value)) {\n      return 'Boolean(' + buildCell(index) + ' == true)';\n    } else {\n      return 'String(' + buildCell(index) + ')';\n    }\n  }\n\n  function buildConstructor(deserialize, cast, values, attrs) {\n    var definition = [];\n    if (arguments.length == 3) {\n      if (cast) {\n        if (isArray(cast)) {\n          forEach(values, function(value, index) {\n            if (isString(cast[index])) {\n              cast[index] = cast[index].toLowerCase();\n            } else {\n              deserialize[cast[index]] = cast[index];\n            }\n            definition.push('deserialize[cast[' + index + ']](' + buildCell(index) + ')');\n          });\n        } else {\n          forEach(values, function(value, index) {\n            definition.push(castCell(value, index));\n          });\n        }\n      } else {\n        forEach(values, function(value, index) {\n          definition.push(buildCell(index));\n        });\n      }\n      definition = 'return [' + definition.join(',') + ']';\n    } else {\n      if (cast) {\n        if (isArray(cast)) {\n          forEach(values, function(value, index) {\n            if (isString(cast[index])) {\n              cast[index] = cast[index].toLowerCase();\n            } else {\n              deserialize[cast[index]] = cast[index];\n            }\n            definition.push('\"' + sanitizeString(attrs[index]) + '\": deserialize[cast[' + index + ']](' + buildCell(index) + ')');\n          });\n        } else {\n          forEach(values, function(value, index) {\n            definition.push('\"' + sanitizeString(attrs[index]) + '\": ' + castCell(value, index));\n          });\n        }\n      } else {\n        forEach(values, function(value, index) {\n          definition.push('\"' + sanitizeString(attrs[index]) + '\": ' + buildCell(index));\n        });\n      }\n      definition = 'return {' + definition.join(',') + '}';\n    }\n    return new Function('attrs', 'deserialize', 'cast', definition);\n  }\n\n  function detectDelimiter(string, delimiters) {\n    var count = 0,\n        detected;\n\n    forEach(delimiters, function(delimiter) {\n      var needle = delimiter,\n          matches;\n      if (ESCAPE_DELIMITERS.indexOf(delimiter) != -1) {\n        needle = '\\\\' + needle;\n      }\n      matches = string.match(new RegExp(needle, 'g'));\n      if (matches && matches.length > count) {\n        count = matches.length;\n        detected = delimiter;\n      }\n    });\n    return (detected || delimiters[0]);\n  }\n\n  var CSV = (function() {\n    function CSV(data, options) {\n      if (!options) options = {};\n\n      if (isArray(data)) {\n        this.mode = 'encode';\n      } else if (isString(data)) {\n        this.mode = 'parse';\n      } else {\n        throw new Error(\"Incompatible format!\");\n      }\n\n      this.data = data;\n\n      this.options = {\n        header: fallback(options.header, false),\n        cast: fallback(options.cast, true)\n      }\n\n      var lineDelimiter = options.lineDelimiter || options.line,\n          cellDelimiter = options.cellDelimiter || options.delimiter;\n\n      if (this.isParser()) {\n        this.options.lineDelimiter = lineDelimiter || detectDelimiter(this.data, LINE_DELIMITERS);\n        this.options.cellDelimiter = cellDelimiter || detectDelimiter(this.data, CELL_DELIMITERS);\n        this.data = normalizeCSV(this.data, this.options.lineDelimiter);\n      } else if (this.isEncoder()) {\n        this.options.lineDelimiter = lineDelimiter || '\\r\\n';\n        this.options.cellDelimiter = cellDelimiter || ',';\n      }\n    }\n\n    function invoke(method, constructor, attributes, deserialize, cast) {\n      method(new constructor(attributes, deserialize, cast));\n    }\n\n    function normalizeCSV(text, lineDelimiter) {\n      if (text.slice(-lineDelimiter.length) != lineDelimiter) text += lineDelimiter;\n      return text;\n    }\n\n    CSV.prototype.set = function(setting, value) {\n      return this.options[setting] = value;\n    }\n\n    CSV.prototype.isParser = function() {\n      return this.mode == 'parse';\n    }\n\n    CSV.prototype.isEncoder = function() {\n      return this.mode == 'encode';\n    }\n\n    CSV.prototype.parse = function(callback) {\n      if (this.mode != 'parse') return;\n      if (this.data.trim().length === 0) return [];\n\n      var data = this.data,\n          options = this.options,\n          header = options.header,\n          current = { cell: '', line: [] },\n          deserialize = this.deserialize,\n          flag, record, response;\n\n      if (!callback) {\n        response = [];\n        callback = function(record) {\n          response.push(record);\n        }\n      }\n\n      function resetFlags() {\n        flag = { escaped: false, quote: false, cell: true };\n      }\n      function resetCell() {\n        current.cell = '';\n      }\n      function resetLine() {\n        current.line = [];\n      }\n\n      function saveCell(cell) {\n        current.line.push(flag.escaped ? cell.slice(1, -1).replace(/\"\"/g, '\"') : cell);\n        resetCell();\n        resetFlags();\n      }\n      function saveLastCell(cell) {\n        saveCell(cell.slice(0, 1 - options.lineDelimiter.length));\n      }\n      function saveLine() {\n        if (header) {\n          if (isArray(header)) {\n            record = buildConstructor(deserialize, options.cast, current.line, header);\n            saveLine = function() {\n              invoke(callback, record, current.line, deserialize, options.cast);\n            };\n            saveLine();\n          } else {\n            header = current.line;\n          }\n        } else {\n          if (!record) {\n            record = buildConstructor(deserialize, options.cast, current.line);\n          }\n          saveLine = function() {\n            invoke(callback, record, current.line, deserialize, options.cast);\n          };\n          saveLine();\n        }\n      }\n\n      if (options.lineDelimiter.length == 1) saveLastCell = saveCell;\n\n      var dataLength = data.length,\n          cellDelimiter = options.cellDelimiter.charCodeAt(0),\n          lineDelimiter = options.lineDelimiter.charCodeAt(options.lineDelimiter.length - 1),\n          _i, _c, _ch;\n\n      resetFlags();\n\n      for (_i = 0, _c = 0; _i < dataLength; _i++) {\n        _ch = data.charCodeAt(_i);\n\n        if (flag.cell) {\n          flag.cell = false;\n          if (_ch == 34) {\n            flag.escaped = true;\n            continue;\n          }\n        }\n\n        if (flag.escaped && _ch == 34) {\n          flag.quote = !flag.quote;\n          continue;\n        }\n\n        if ((flag.escaped && flag.quote) || !flag.escaped) {\n          if (_ch == cellDelimiter) {\n            saveCell(current.cell + data.slice(_c, _i));\n            _c = _i + 1;\n          } else if (_ch == lineDelimiter) {\n            saveLastCell(current.cell + data.slice(_c, _i));\n            _c = _i + 1;\n            if (current.line.length > 1 || current.line[0] !== \"\") {\n              saveLine();\n            }\n            resetLine();\n          }\n        }\n      }\n\n      if (response) {\n        return response;\n      } else {\n        return this;\n      }\n    }\n\n    function serializeType(object) {\n      if (isArray(object)) {\n        return 'array';\n      } else if (isObject(object)) {\n        return 'object';\n      } else if (isString(object)) {\n        return 'string';\n      } else if (isNull(object)) {\n        return 'null';\n      } else {\n        return 'primitive';\n      }\n    }\n\n    CSV.prototype.deserialize = {\n      \"string\": function(string) {\n        return String(string);\n      },\n      \"number\": function(number) {\n        return Number(number);\n      },\n      \"boolean\": function(b) {\n        return Boolean(b);\n      }\n    }\n\n    CSV.prototype.serialize = {\n      \"object\": function(object) {\n        var that = this,\n            attributes = Object.keys(object),\n            serialized = Array(attributes.length);\n        forEach(attributes, function(attr, index) {\n          serialized[index] = that[serializeType(object[attr])](object[attr]);\n        });\n        return serialized;\n      },\n      \"array\": function(array) {\n        var that = this,\n            serialized = Array(array.length);\n        forEach(array, function(value, index) {\n          serialized[index] = that[serializeType(value)](value);\n        });\n        return serialized;\n      },\n      \"string\": function(string) {\n        return '\"' + String(string).replace(/\"/g, '\"\"') + '\"';\n      },\n      \"null\": function(value) {\n        return '';\n      },\n      \"primitive\": function(value) {\n        return value;\n      }\n    }\n\n    CSV.prototype.encode = function(callback) {\n      if (this.mode != 'encode') return;\n\n      if (this.data.length == 0) return '';\n\n      var data = this.data,\n          options = this.options,\n          header = options.header,\n          sample = data[0],\n          serialize = this.serialize,\n          offset = 0,\n          attributes, response;\n\n      if (!callback) {\n        response = Array(data.length);\n        callback = function(record, index) {\n          response[index + offset] = record;\n        }\n      }\n\n      function serializeLine(record) {\n        return record.join(options.cellDelimiter);\n      }\n\n      if (header) {\n        if (!isArray(header)) {\n          attributes = Object.keys(sample);\n          header = attributes;\n        }\n        callback(serializeLine(serialize.array(header)), 0);\n        offset = 1;\n      }\n\n      var recordType = serializeType(sample),\n          map;\n\n      if (recordType == 'array') {\n        if (isArray(options.cast)) {\n          map = Array(options.cast.length);\n          forEach(options.cast, function(type, index) {\n            if (isString(type)) {\n              map[index] = type.toLowerCase();\n            } else {\n              map[index] = type;\n              serialize[type] = type;\n            }\n          });\n        } else {\n          map = Array(sample.length);\n          forEach(sample, function(value, index) {\n            map[index] = serializeType(value);\n          });\n        }\n        forEach(data, function(record, recordIndex) {\n          var serializedRecord = Array(map.length);\n          forEach(record, function(value, valueIndex) {\n            serializedRecord[valueIndex] = serialize[map[valueIndex]](value);\n          });\n          callback(serializeLine(serializedRecord), recordIndex);\n        });\n      } else if (recordType == 'object') {\n        attributes = Object.keys(sample);\n        if (isArray(options.cast)) {\n          map = Array(options.cast.length);\n          forEach(options.cast, function(type, index) {\n            if (isString(type)) {\n              map[index] = type.toLowerCase();\n            } else {\n              map[index] = type;\n              serialize[type] = type;\n            }\n          });\n        } else {\n          map = Array(attributes.length);\n          forEach(attributes, function(attr, index) {\n            map[index] = serializeType(sample[attr]);\n          });\n        }\n        forEach(data, function(record, recordIndex) {\n          var serializedRecord = Array(attributes.length);\n          forEach(attributes, function(attr, attrIndex) {\n            serializedRecord[attrIndex] = serialize[map[attrIndex]](record[attr]);\n          });\n          callback(serializeLine(serializedRecord), recordIndex);\n        });\n      }\n\n      if (response) {\n        return response.join(options.lineDelimiter);\n      } else {\n        return this;\n      }\n    }\n\n    CSV.prototype.forEach = function(callback) {\n      return this[this.mode](callback);\n    }\n\n    return CSV;\n  })();\n\n  CSV.parse = function(data, options) {\n    return new CSV(data, options).parse();\n  }\n\n  CSV.encode = function(data, options) {\n    return new CSV(data, options).encode();\n  }\n\n  CSV.forEach = function(data, options, callback) {\n    if (arguments.length == 2) {\n      callback = options;\n    }\n    return new CSV(data, options).forEach(callback);\n  }\n\n  return CSV;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * External Dependencies\n */\nimport CSV from 'comma-separated-values';\n\n/**\n * Utilities for managing core/table data\n */\n\nfunction convertToRow(d, tag = 'td') {\n\treturn d.map((content) => ({\n\t\tcontent,\n\t\ttag,\n\t}));\n}\n\nfunction convertJSONToAttributes(d, tag = 'td') {\n\tif ('th' === tag) {\n\t\treturn convertToRow(d, tag);\n\t}\n\treturn d.map((row) => ({ cells: convertToRow(row, tag) }));\n}\n\nfunction parseCSV(csvInput, attributes, setAttributes) {\n\tconst opts = {\n\t\theader: false,\n\t};\n\tconst csv = new CSV(csvInput, opts);\n\tconst parsed = csv.parse();\n\n\tconst headerData = convertJSONToAttributes(parsed.shift(), 'th');\n\tconst bodyData = convertJSONToAttributes(parsed);\n\tsetAttributes({ body: bodyData });\n\tsetAttributes({ head: [{ cells: headerData }] });\n\n\treturn parsed;\n}\n\nexport default function handleCSV(files, attributes, setAttributes) {\n\t// eslint-disable-next-line no-undef\n\tconst reader = new FileReader();\n\treader.onload = () => {\n\t\tparseCSV(reader.result, attributes, setAttributes);\n\t};\n\tArray.from(files).forEach((file) => reader.readAsBinaryString(file));\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useRef } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { Button, DropZone, PanelBody, PanelRow } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport handleCSV from './csv-parser';\n\nfunction InspectorPanel({ attributes, setAttributes }) {\n\tconst hiddenFileInput = useRef(null);\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title=\"CSV Import\">\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisPrimary\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\thiddenFileInput.current.click();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{__(`Import CSV to Table`, 'prc-block-library')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<input\n\t\t\t\t\t\tref={hiddenFileInput}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept=\"text/csv\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\thandleCSV(e.target.files, attributes, setAttributes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<DropZone\n\t\t\t\t\t\tonFilesDrop={(droppedFiles) =>\n\t\t\t\t\t\t\thandleCSV(droppedFiles, attributes, setAttributes)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n\nexport default function Controls({ attributes, setAttributes, context }) {\n\treturn <InspectorPanel {...{ attributes, setAttributes, context }} />;\n}\n","/**\n * WordPress Dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\nimport Controls from './Controls';\n\n// Because theres no good way to inject this in the build process we're defaulting to transforming the core block name like so. You can manually change this if you want.\nconst BLOCKNAME = 'core-table'.replace(/-/g, '/');\nconst BLOCKIDENTIFIER = 'prc-block-library/core-table';\nconst SUPPORTED_BLOCKS = [BLOCKNAME, 'flexible-table-block/table'];\n\naddFilter(\n\t'editor.BlockEdit',\n\tBLOCKIDENTIFIER,\n\tcreateHigherOrderComponent(\n\t\t(BlockEdit) =>\n\t\t\tfunction CoreTable(props) {\n\t\t\t\tconst { name, attributes, setAttributes } = props;\n\t\t\t\tif (!SUPPORTED_BLOCKS.includes(name)) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t<Controls {...{ attributes, setAttributes, context: false }} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t},\n\t\t'withCoreTableControls',\n\t),\n\t21,\n);\n"],"names":["ESCAPE_DELIMITERS","CELL_DELIMITERS","LINE_DELIMITERS","isArray","Array","object","toString","call","isString","fallback","value","isPresent","forEach","collection","iterator","_i","_len","length","sanitizeString","string","replace","buildCell","index","castCell","isNaN","Number","isBoolean","buildConstructor","deserialize","cast","values","attrs","definition","arguments","toLowerCase","push","join","Function","detectDelimiter","delimiters","detected","count","delimiter","matches","needle","indexOf","match","RegExp","CSV","data","options","this","mode","Error","header","lineDelimiter","line","cellDelimiter","isParser","text","slice","normalizeCSV","isEncoder","invoke","method","constructor","attributes","serializeType","type","isObject","prototype","set","setting","parse","callback","trim","flag","record","response","current","cell","saveLastCell","saveCell","_c","_ch","dataLength","charCodeAt","resetFlags","escaped","quote","saveLine","String","number","b","Boolean","serialize","that","Object","keys","serialized","attr","array","encode","sample","offset","serializeLine","map","recordType","recordIndex","serializedRecord","valueIndex","attrIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","n","getter","__esModule","d","a","key","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","window","convertToRow","tag","content","convertJSONToAttributes","row","cells","handleCSV","files","setAttributes","reader","FileReader","onload","csvInput","parsed","headerData","shift","body","head","parseCSV","result","from","file","readAsBinaryString","InspectorPanel","hiddenFileInput","useRef","InspectorControls","PanelBody","title","PanelRow","Button","isPrimary","onClick","click","__","ref","accept","onChange","e","target","style","display","DropZone","onFilesDrop","droppedFiles","Controls","context","SUPPORTED_BLOCKS","addFilter","createHigherOrderComponent","BlockEdit","props","name","includes","Fragment"],"sourceRoot":""}