{"version":3,"file":"view.js","mappings":"yBACA,IAAIA,EAAsB,CCA1BA,EAAwB,SAASC,GAChC,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,WAAa,OAAOF,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAF,EAAwB,SAASM,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAR,EAAwB,SAASc,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,GCAlG,EAA+BI,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAY,S,SCAtD,EAA+BA,OAAsB,cCsCzD,SAASC,EAASC,GACjBC,QAAQC,IAAI,aACZD,QAAQC,IAAIF,EACb,CAEAG,KAAS,KACR,MAAMC,EAAoB,CACzBC,QAAQ,GAEJP,OAAOQ,UAKXR,OAAOQ,UAAU,uBAAyBF,EAJ1CN,OAAOQ,UAAY,CAClB,sBAAuBF,GAMPG,SAASC,iBAC1B,2CAESC,SAASC,IAElB,MAAMC,EAAUD,EAAIE,aAAa,SAC3BC,EAAKH,EAAIE,aAAa,MAGtBE,EAASJ,EAAIE,aAAa,UAC1BG,EAAWL,EAAIE,aAAa,YAC5BI,EAAiBN,EAAIE,aAAa,mBAGlCK,EAAcP,EAAIE,aAAa,eAC/BM,EAASR,EAAIE,aAAa,UAC1BO,EAAWT,EAAIE,aAAa,YAG5BQ,EAAcb,SAASc,cAAc,OAC3CX,EAAIY,WAAWC,aAAaH,EAAaV,GAGzC,MAAMc,EAAUd,EAAIF,iBACnB,gDAGKiB,EADeC,MAAMC,KAAKH,GACGI,KAAI,CAACC,EAAQC,KAAU,CACzDC,MAAOF,EAAOE,MACdC,UAAWH,EAAOI,WAAWC,MAAMlC,MACnCmC,QAASN,EAAOI,WAAW,cAAcjC,MACzCA,MAAO6B,EAAOI,WAAW,cAAcjC,MACvC8B,aAIDM,EAAAA,EAAAA,SACC,mBAAC,EAAAC,SAAQ,CAEPL,UAAWrB,EACXE,KACAW,QAASC,EACT1B,WACAe,SACAC,WACAC,iBACAC,cACAC,SACAC,aAGFC,GAGDV,EAAIY,WAAWgB,YAAY5B,EAAI,GAC9B,G","sources":["webpack://form-input-dropdown/webpack/bootstrap","webpack://form-input-dropdown/webpack/runtime/compat get default export","webpack://form-input-dropdown/webpack/runtime/define property getters","webpack://form-input-dropdown/webpack/runtime/hasOwnProperty shorthand","webpack://form-input-dropdown/external window [\"wp\",\"element\"]","webpack://form-input-dropdown/external window [\"wp\",\"domReady\"]","webpack://form-input-dropdown/external window \"prcComponents\"","webpack://form-input-dropdown/./src/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"domReady\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","/**\n * WordPress Dependencies\n */\nimport { render } from '@wordpress/element';\nimport domReady from '@wordpress/dom-ready';\n\n/**\n * Internal Dependencies\n */\n\n// import Dropdown from '../../../../prc-scripts/src/@prc/components/form-input-dropdown/index';\nimport { Dropdown } from '@prc/components';\n\nfunction parseStylesString(stylesString) {\n\t// check if stylesString is empty.\n\tif (!stylesString) {\n\t\treturn {};\n\t}\n\treturn stylesString\n\t\t.split(';')\n\t\t.filter((style) => style)\n\t\t.reduce((acc, style) => {\n\t\t\tconst [key, value] = style.split(':');\n\t\t\t// convert key to camelCase.\n\t\t\tconst camelCaseKey = key\n\t\t\t\t.split('-')\n\t\t\t\t.map((word, index) => {\n\t\t\t\t\tif (0 === index) {\n\t\t\t\t\t\treturn word;\n\t\t\t\t\t}\n\t\t\t\t\treturn word.charAt(0).toUpperCase() + word.slice(1);\n\t\t\t\t})\n\t\t\t\t.join('');\n\t\t\tacc[camelCaseKey] = value;\n\t\t\treturn acc;\n\t\t}, {});\n}\n\nfunction onChange(value) {\n\tconsole.log('ON CHANGE');\n\tconsole.log(value);\n}\n\ndomReady(() => {\n\tconst dropDownBlockArgs = {\n\t\tactive: false,\n\t};\n\tif (!window.prcBlocks) {\n\t\twindow.prcBlocks = {\n\t\t\t'form-input-dropdown': dropDownBlockArgs,\n\t\t};\n\t} else {\n\t\twindow.prcBlocks['form-input-dropdown'] = dropDownBlockArgs;\n\t}\n\n\tconst dropdowns = document.querySelectorAll(\n\t\t'.wp-block-prc-block-form-input-dropdown',\n\t);\n\tdropdowns.forEach((elm) => {\n\t\t// Gather the classes and styles from the dropdown element.\n\t\tconst classes = elm.getAttribute('class');\n\t\tconst id = elm.getAttribute('id');\n\n\t\t// Variations attributes\n\t\tconst search = elm.getAttribute('search');\n\t\tconst multiple = elm.getAttribute('multiple');\n\t\tconst multipleSearch = elm.getAttribute('multiple-search');\n\n\t\t// Control attributes\n\t\tconst placeholder = elm.getAttribute('placeholder');\n\t\tconst inline = elm.getAttribute('inline');\n\t\tconst animated = elm.getAttribute('animated');\n\n\t\t// Create an element to render the dropdown into.\n\t\tconst attachPoint = document.createElement('div');\n\t\telm.parentNode.insertBefore(attachPoint, elm);\n\n\t\t// Options\n\t\tconst options = elm.querySelectorAll(\n\t\t\t'.wp-block-prc-block-form-input-dropdown-item',\n\t\t);\n\t\tconst optionsArray = Array.from(options);\n\t\tconst parsedOptions = optionsArray.map((option, index) => ({\n\t\t\tstyle: option.style,\n\t\t\tclassName: option.attributes.class.value,\n\t\t\tcontent: option.attributes['data-title'].value,\n\t\t\tvalue: option.attributes['data-value'].value,\n\t\t\tindex,\n\t\t}));\n\n\t\t// Render the Dropdown component.\n\t\trender(\n\t\t\t<Dropdown\n\t\t\t\t{...{\n\t\t\t\t\tclassName: classes,\n\t\t\t\t\tid,\n\t\t\t\t\toptions: parsedOptions,\n\t\t\t\t\tonChange,\n\t\t\t\t\tsearch,\n\t\t\t\t\tmultiple,\n\t\t\t\t\tmultipleSearch,\n\t\t\t\t\tplaceholder,\n\t\t\t\t\tinline,\n\t\t\t\t\tanimated,\n\t\t\t\t}}\n\t\t\t/>,\n\t\t\tattachPoint,\n\t\t);\n\t\t// Remove the original element.\n\t\telm.parentNode.removeChild(elm);\n\t});\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","window","onChange","value","console","log","domReady","dropDownBlockArgs","active","prcBlocks","document","querySelectorAll","forEach","elm","classes","getAttribute","id","search","multiple","multipleSearch","placeholder","inline","animated","attachPoint","createElement","parentNode","insertBefore","options","parsedOptions","Array","from","map","option","index","style","className","attributes","class","content","render","Dropdown","removeChild"],"sourceRoot":""}