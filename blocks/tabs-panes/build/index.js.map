{"version":3,"file":"index.js","mappings":"yBAAA,IAAI,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCS7D,MAAMC,EAAiB,CAAC,wCCTxB,IAAI,EAA+BD,OAAiB,S,ixBCiCpD,MAAQE,KAAIA,GAAKC,EAEXC,EAAW,CAChBC,KC/Bc,WACd,OACC,mBAAC,EAAAC,KAAI,CACJD,KAAME,EAAAA,MAAAA,qBACNC,OAAQ,GACRC,oBAAoB,iBAGvB,ED2BCC,KF7Bc,WACd,MAAMC,GAAaC,EAAAA,EAAAA,eAAc,CAAC,GAE5BC,GAAmBC,EAAAA,EAAAA,qBAAoBH,EAAY,CACxDI,cAAed,EACfe,YAAa,WACbC,cAAc,EACdC,gBAAgB,IAGjB,OAAO,yBAASL,EACjB,EEsBCM,KEjBc,WACd,OAAO,mBAAC,EAAAC,YAAA,QAAmB,KAC5B,IFuBAC,EAAAA,EAAAA,mBAAkBnB,EAAM,IAAKC,KAAaC,G","sources":["webpack://tabs-panes/external window [\"wp\",\"blocks\"]","webpack://tabs-panes/external window [\"wp\",\"element\"]","webpack://tabs-panes/external window [\"wp\",\"blockEditor\"]","webpack://tabs-panes/./src/Edit.jsx","webpack://tabs-panes/external window \"prcIcons\"","webpack://tabs-panes/./src/index.js","webpack://tabs-panes/./src/Icon.jsx","webpack://tabs-panes/./src/Save.jsx"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\n\nconst ALLOWED_BLOCKS = ['prc-block/topic-index-condensed-page'];\n\nexport default function Edit() {\n\tconst blockProps = useBlockProps({});\n\n\tconst innerBlocksProps = useInnerBlocksProps(blockProps, {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\torientation: 'vertical',\n\t\ttemplateLock: false,\n\t\trenderAppender: false,\n\t});\n\n\treturn <div {...innerBlocksProps} />;\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport Edit from './Edit';\nimport Save from './Save';\nimport Icon from './Icon';\n\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon: Icon,\n\t/**\n\t * @see ./Edit.jsx\n\t */\n\tedit: Edit,\n\t/**\n\t * @see ./Save.jsx\n\t */\n\tsave: Save,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * External Dependencies\n */\nimport { icons, Icon } from '@prc/icons';\n\nexport default function() {\n\treturn(\n\t\t<Icon\n\t\t\ticon={icons.faDiagramPredecessor}\n\t\t\theight={18}\n\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t/>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save() {\n\treturn <InnerBlocks.Content />;\n}\n"],"names":["window","ALLOWED_BLOCKS","name","metadata","settings","icon","Icon","icons","height","preserveAspectRatio","edit","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","allowedBlocks","orientation","templateLock","renderAppender","save","InnerBlocks","registerBlockType"],"sourceRoot":""}