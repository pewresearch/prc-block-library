import*as e from"@wordpress/interactivity";var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const o=(n={getContext:()=>e.getContext,getElement:()=>e.getElement,store:()=>e.store},r={},t.d(r,n),r);var n,r;const{state:c}=(0,o.store)("prc-block/mailchimp-form",{actions:{onInputChange:e=>{const{value:t}=e.target,n=(0,o.getContext)(),{ref:r}=(0,o.getElement)(),{id:i}=r;c[i].value=t,n.emailAddress=c[i].value},onButtonClick:e=>{const t=(0,o.getContext)(),{ref:n}=(0,o.getElement)(),{id:r}=n;t.captchaHidden=!1},onCheckboxMouseEnter:()=>{console.log("prc-block/mailchimp-form","onCheckboxMouseEnter")},onButtonMouseEnter:()=>{console.log("prc-block/mailchimp-form","onButtonMouseEnter")}},callbacks:{onInit:()=>{const{ref:e}=(0,o.getElement)(),t=(0,o.getContext)(),n=e.querySelector("input.wp-block-prc-block-form-input-text");n?.id&&(t.inputId=n?.id);const r=e.querySelector(".wp-element-button");r?.id&&(t.buttonId=r?.id),console.log("prc-block/mailchimp-form -> onInit",t)},onInputChange:()=>{const e=(0,o.getContext)(),{emailAddress:t,buttonId:n}=e;t&&t.includes("@")?c[n].isDisabled=!1:c[n].isDisabled=!0},onCaptchaDisplayHideFormElements:()=>{const e=(0,o.getContext)(),{captchaHidden:t,inputId:n,buttonId:r}=e;!1===t&&(c[n].isHidden=!0,c[r].isHidden=!0),!0===t&&(c[n].isHidden=!1,c[r].isHidden=!1)},onCaptchaVerifyHideCaptcha:()=>{const e=(0,o.getContext)();!1!==e.captchaToken&&(console.log("onCaptchaVerifyHideCaptcha",e),e.captchaHidden=!0)},onCaptchaVerifyThenSubscribe:()=>{const e=(0,o.getContext)(),{captchaToken:t,inputId:n,buttonId:r,emailAddress:i,interest:s,NONCE:a}=e;!1!==t&&(console.log("onCaptchaVerifyThenSubscribe",e),c[r].text="Subscribing...",function({emailAddress:e,captchaToken:t=!1,interest:o=!1,NONCE:n=!1}){console.log("submitHandler",window.wp.url,window.wp.apiFetch);const{apiFetch:r}=window.wp,{isURL:c,buildQueryString:i}=window.wp.url;if(!t)return new Error("We couldn't verify you're not a robot ðŸ¤–. Please try again.");const s=e,a=document.URL;if(!c(a))return new Error("Invalid url",a);const l=i({email:s,captcha_token:t,interests:o,api_key:"mailchimp-form",origin_url:a});return new Promise(((e,t)=>{r.use(r.createNonceMiddleware(n)),r({path:`/prc-api/v3/mailchimp/subscribe/?${l}`,method:"POST"}).then((o=>{console.log("RESPONSE:",o),o.success?e(o):t(o)})).catch((e=>{t(e)}))}))}({emailAddress:i,interest:s,captchaToken:t,NONCE:a}).then((t=>{console.log("SUCCESS",t),e.isSuccess=!0})).catch((t=>{console.error("ERROR",t),e.isError=!0})))},onSuccess:()=>{const e=(0,o.getContext)(),{isSuccess:t,buttonId:n,inputId:r}=e;null!==t&&(c[r].isSuccess=t,c[n].isSuccess=t,!0===t&&(c[n].text="Success"))},onError:()=>{const e=(0,o.getContext)(),{isError:t,buttonId:n,inputId:r}=e;null!==t&&(c[r].isError=t,c[n].isError=t,!0===t&&(c[n].text="Error"))}}});
//# sourceMappingURL=view.js.map